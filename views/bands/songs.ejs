<style>
    .song-selection-card {
        position: relative;
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .song-selection-card.loading {
        opacity: 0.6;
        pointer-events: none;
    }

    .loading-spinner {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 24px;
        height: 24px;
        border: 2px solid #f3f3f3;
        border-top: 2px solid #007bff;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        z-index: 10;
        background: rgba(255, 255, 255, 0.9);
    }

    @keyframes spin {
        0% {
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }

    .success-flash {
        animation: successFlash 0.6s ease-out;
    }

    @keyframes successFlash {
        0% {
            background-color: #d4edda;
        }

        100% {
            background-color: transparent;
        }
    }

    .no-audio {
        text-align: center;
        padding: 40px;
        color: #666;
    }
    
    .song-icons {
        position: relative;
        top: 2px;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1>
                    <%= band.name %> - Songs
                </h1>
                <p class="text-muted">Manage which songs this band plays</p>
            </div>
            <div>
                <% if (fromSetlist) { %>
                    <a href="/setlists/<%= fromSetlist.id %>/edit" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Back to Setlist
                    </a>
                    <% } %>
                        <a href="/bands/<%= band.id %>" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to Band
                        </a>
                        <a href="/songs" class="btn btn-outline-primary ms-2">
                            <i class="bi bi-music-note-list"></i> View All Songs
                        </a>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title mb-3">
                    <i class="bi bi-info-circle text-primary"></i> How to Manage Your Band's Songs
                </h5>
                <div class="row">
                    <div class="col-md-2">
                        <div class="text-center p-3 border rounded bg-light">
                            <div class="h4 text-primary mb-2">1</div>
                            <p class="mb-0 small">This is where you pick songs your band might play</p>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="text-center p-3 border rounded bg-light">
                            <div class="h4 text-primary mb-2">2</div>
                            <p class="mb-0 small">This list has all the songs in the whole system</p>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="text-center p-3 border rounded bg-light">
                            <div class="h4 text-primary mb-2">3</div>
                            <p class="mb-0 small">Select just the songs your band might play</p>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="text-center p-3 border rounded bg-light">
                            <div class="h4 text-primary mb-2">4</div>
                            <p class="mb-0 small">Use the filters to find specific artists or songs to select</p>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="text-center p-3 border rounded bg-light">
                            <div class="h4 text-primary mb-2">5</div>
                            <p class="mb-0 small">Use the Add Song or Bulk Add Songs buttons if the songs you want aren't listed here</p>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="text-center p-3 border rounded bg-light">
                            <div class="h4 text-primary mb-2">6</div>
                            <p class="mb-0 small">Then go back to your setlists and you'll be able to add them to your sets</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex gap-2">
            <a href="/songs/new" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add Song
            </a>
            <a href="/songs/bulk-add" class="btn btn-success">
                <i class="bi bi-collection"></i> Bulk Add Songs
            </a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-6">
                        <input type="text" class="form-control" id="searchSongs" placeholder="Search songs...">
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" id="filterArtist">
                            <option value="">All Artists</option>
                            <!-- Artists will be populated by JavaScript -->
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" id="filterKey">
                            <option value="">All Keys</option>
                            <option value="C">C</option>
                            <option value="Cm">Cm</option>
                            <option value="C#">C#</option>
                            <option value="C#m">C#m</option>
                            <option value="Db">Db</option>
                            <option value="Dbm">Dbm</option>
                            <option value="D">D</option>
                            <option value="Dm">Dm</option>
                            <option value="D#">D#</option>
                            <option value="D#m">D#m</option>
                            <option value="Eb">Eb</option>
                            <option value="Ebm">Ebm</option>
                            <option value="E">E</option>
                            <option value="Em">Em</option>
                            <option value="F">F</option>
                            <option value="Fm">Fm</option>
                            <option value="F#">F#</option>
                            <option value="F#m">F#m</option>
                            <option value="Gb">Gb</option>
                            <option value="Gbm">Gbm</option>
                            <option value="G">G</option>
                            <option value="Gm">Gm</option>
                            <option value="G#">G#</option>
                            <option value="G#m">G#m</option>
                            <option value="Ab">Ab</option>
                            <option value="Abm">Abm</option>
                            <option value="A">A</option>
                            <option value="Am">Am</option>
                            <option value="A#">A#</option>
                            <option value="A#m">A#m</option>
                            <option value="Bb">Bb</option>
                            <option value="Bbm">Bbm</option>
                            <option value="B">B</option>
                            <option value="Bm">Bm</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <% if (allSongs && allSongs.length> 0) { %>
                    <div class="row" id="songsGrid">
                        <% allSongs.forEach(song=> { %>
                            <div class="col-md-6 col-lg-4 mb-3">
                                <div class="card song-selection-card <%= bandSongIds.includes(song.id) ? 'border-primary bg-light' : '' %>"
                                    data-song-id="<%= song.id %>" data-title="<%= song.title.toLowerCase() %>"
                                    data-artist="<%= song.Artists && song.Artists.length > 0 ? song.Artists[0].name.toLowerCase() : '' %>"
                                    data-key="<%= song.key || '' %>" style="cursor: pointer;">
                                    <div class="card-body">
                                        <div class="form-check">
                                            <input class="form-check-input song-checkbox" type="checkbox"
                                                id="song_<%= song.id %>" data-song-id="<%= song.id %>"
                                                <%=bandSongIds.includes(song.id) ? 'checked' : '' %>
                                            style="display: none">
                                            <label class="form-check-label w-100" for="song_<%= song.id %>">
                                                <div class="song-title">
                                                    <%= song.title %>
                                                </div>
                                                <% if (song.Artists && song.Artists.length> 0) { %>
                                                    <div class="song-artist">by <%= song.Artists[0].name %>
                                                    </div>
                                                    <% } %>
                                                        <div
                                                            class="d-flex justify-content-between align-items-center mt-2">
                                                            <div>
                                                                <% if (song.Vocalist) { %>
                                                                    <span class="badge bg-info text-white me-1">
                                                                        <%= song.Vocalist.name %>
                                                                    </span>
                                                                    <% } %>
                                                                        <% if (song.key) { %>
                                                                            <span class="badge bg-secondary me-1">
                                                                                <%= song.key %>
                                                                            </span>
                                                                            <% } %>
                                                                                <% if (song.bpm) { %>
                                                                                    <span
                                                                                        class="badge bg-warning text-dark">
                                                                                        <i
                                                                                            class="bi bi-speedometer"></i>
                                                                                        <%= song.bpm %>
                                                                                    </span>
                                                                                    <% } %>
                                                                                    
                                                                                    <!-- Gig Document and Audio Link Icons -->
                                                                                    <% if (song.GigDocuments && song.GigDocuments.length > 0) { %>
                                                                                        <i class="bi bi-file-earmark-text text-success me-1 song-icons" title="Has gig documents"></i>
                                                                                    <% } %>
                                                                                    <% if (song.Links && song.Links.length > 0) { %>
                                                                                        <i class="bi bi-link-45deg text-primary me-1 song-icons" title="Has links"></i>
                                                                                    <% } %>
                                                            </div>
                                                            <div>
                                                                <% if (song.time) { %>
                                                                    <small class="text-muted">
                                                                        <%= Math.floor(song.time / 60) %>:<%= (song.time
                                                                                % 60).toString().padStart(2, '0' ) %>
                                                                    </small>
                                                                    <% } %>
                                                            </div>
                                                        </div>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <% }) %>
                    </div>
                    <% } else { %>
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i>
                            No songs available. <a href="/songs/new">Add some songs</a> first.
                        </div>
                        <% } %>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Handle song selection via clicking on cards (since checkboxes are hidden)
        const songCards = document.querySelectorAll('.song-selection-card');

        songCards.forEach(card => {
            let isLoading = false; // Prevent rapid clicks during AJAX

            card.addEventListener('click', function () {
                // Prevent multiple rapid clicks
                if (isLoading) {
                    return;
                }

                const songId = this.dataset.songId;
                const checkbox = this.querySelector('.song-checkbox');
                const isChecked = checkbox.checked;
                const bandId = <%= band.id %>;


                // Set loading state with spinner
                isLoading = true;
                this.classList.add('loading');

                // Add spinner
                const spinner = document.createElement('div');
                spinner.className = 'loading-spinner';
                this.appendChild(spinner);

                // Toggle the checkbox state optimistically
                checkbox.checked = !isChecked;

                // Update visual state optimistically
                if (!isChecked) {
                    this.classList.add('border-primary', 'bg-light');
                } else {
                    this.classList.remove('border-primary', 'bg-light');
                }

                // Send AJAX request
                const operation = !isChecked ? 'add' : 'remove';
                const method = 'POST'; // Always use POST
                const url = !isChecked ?
                    `/bands/${bandId}/songs/${songId}` :
                    `/bands/${bandId}/songs/${songId}/remove`;

                fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {

                            // SUCCESS: Ensure visual state matches the operation that just succeeded
                            if (operation === 'add') {
                                // Song was successfully added - ensure it shows as selected
                                checkbox.checked = true;
                                this.classList.add('border-primary', 'bg-light');
                            } else {
                                // Song was successfully removed - ensure it shows as unselected  
                                checkbox.checked = false;
                                this.classList.remove('border-primary', 'bg-light');
                            }

                            // Success animation
                            this.classList.add('success-flash');
                            setTimeout(() => {
                                this.classList.remove('success-flash');
                            }, 600);
                        } else {
                            console.error(`Failed to ${operation} song:`, data);

                            // Special case: If song is already in band, sync visual state instead of error
                            if (data.error === 'Song already in band') {
                                console.log('Song already in band - syncing visual state');
                                checkbox.checked = true;
                                this.classList.add('border-primary', 'bg-light');
                            } else {
                                // Revert on actual error
                                checkbox.checked = isChecked;
                                if (isChecked) {
                                    this.classList.add('border-primary', 'bg-light');
                                } else {
                                    this.classList.remove('border-primary', 'bg-light');
                                }
                                const action = operation === 'add' ? 'adding song to' : 'removing song from';
                                alert(`Error ${action} band`);
                            }
                        }
                    })
                    .catch(error => {
                        console.error(`Network error ${operation}ing song:`, error);

                        // Check if it's a 400 "already in band" error
                        if (error.message.includes('400') && operation === 'add') {
                            console.log('Network error suggests song already in band - syncing visual state');
                            checkbox.checked = true;
                            this.classList.add('border-primary', 'bg-light');
                        } else {
                            // Revert on other errors
                            checkbox.checked = isChecked;
                            if (isChecked) {
                                this.classList.add('border-primary', 'bg-light');
                            } else {
                                this.classList.remove('border-primary', 'bg-light');
                            }
                            const action = operation === 'add' ? 'adding song to' : 'removing song from';
                            alert(`Error ${action} band (Network Error)`);
                        }
                    })
                    .finally(() => {
                        // Reset loading state
                        isLoading = false;
                        this.classList.remove('loading');

                        // Remove spinner
                        const currentSpinner = this.querySelector('.loading-spinner');
                        if (currentSpinner) {
                            currentSpinner.remove();
                        }
                    });
            });
        });

        // Prevent checkbox clicks from bubbling up
        const checkboxes = document.querySelectorAll('.song-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('click', function (e) {
                e.stopPropagation();
            });
        });

        // Filtering functionality
        const searchInput = document.getElementById('searchSongs');
        const artistFilter = document.getElementById('filterArtist');
        const keyFilter = document.getElementById('filterKey');
        const songItems = document.querySelectorAll('.song-selection-card');

        // Populate artist filter
        const artists = new Set();
        songItems.forEach(item => {
            const artist = item.dataset.artist;
            if (artist) artists.add(artist);
        });

        Array.from(artists).sort().forEach(artist => {
            const option = document.createElement('option');
            option.value = artist;
            option.textContent = artist;
            artistFilter.appendChild(option);
        });

        // Filter function
        function filterSongs() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedArtist = artistFilter.value;
            const selectedKey = keyFilter.value;

            // Get all song cards and their parent containers
            const songCards = document.querySelectorAll('.song-selection-card');
            const songContainers = document.querySelectorAll('.col-md-6.col-lg-4.mb-3');

            songCards.forEach((card, index) => {
                const container = songContainers[index];
                const title = card.dataset.title;
                const artist = card.dataset.artist;
                const key = card.dataset.key;

                const matchesSearch = title.includes(searchTerm) || artist.toLowerCase().includes(searchTerm);
                const matchesArtist = !selectedArtist || artist === selectedArtist;
                const matchesKey = !selectedKey || key === selectedKey;

                if (matchesSearch && matchesArtist && matchesKey) {
                    container.classList.remove('d-none');
                } else {
                    container.classList.add('d-none');
                }
            });
        }

        // Event listeners for filtering
        searchInput.addEventListener('input', filterSongs);
        artistFilter.addEventListener('change', filterSongs);
        keyFilter.addEventListener('change', filterSongs);
    });
</script>