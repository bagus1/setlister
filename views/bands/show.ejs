<style>
    .song-card {
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px;
        margin: 5px 0;
        cursor: grab;
        background: white;
        transition: all 0.2s;
    }

    .song-card:hover {
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        transform: translateY(-1px);
    }

    .song-card.dragging {
        opacity: 0.5;
        cursor: grabbing;
    }

    .song-title {
        font-weight: bold;
        color: #2c3e50;
    }

    .song-artist {
        color: #7f8c8d;
        font-size: 0.9em;
    }

    .song-vocalist {
        color: #e74c3c;
        font-size: 0.85em;
    }

    .song-key {
        background: #3498db;
        color: white;
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 0.8em;
    }

    .song-time {
        color: #95a5a6;
        font-size: 0.8em;
    }

    .drop-zone {
        min-height: 200px;
        border: 2px dashed #ddd;
        border-radius: 8px;
        padding: 20px;
        margin: 10px 0;
        background: #f8f9fa;
        transition: all 0.2s;
    }

    .drop-zone.drag-over {
        border-color: #007bff;
        background: #e3f2fd;
    }

    .drop-zone.has-songs {
        border-style: solid;
        background: white;
    }

    .set-header {
        background: #495057;
        color: white;
        padding: 10px;
        border-radius: 8px 8px 0 0;
        margin-bottom: 0;
        font-weight: bold;
    }

    .set-time {
        float: right;
        font-size: 0.9em;
        opacity: 0.8;
    }

    .maybe-header {
        background: #6c757d;
    }

    .song-icons {
        position: relative;
        top: 2px;
    }

    /* Band songs section specific styles */
    .band-songs .song-card {
        cursor: pointer;
        border: 1px solid #e9ecef;
        transition: all 0.2s ease;
    }

    .band-songs .song-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        /* Removed blue border on hover for band page */
    }

    .band-songs .card-title {
        font-size: 0.95rem;
        line-height: 1.2;
    }

    .band-songs .badge {
        font-size: 0.7rem;
    }

    /* Ensure link styling doesn't interfere with card appearance */
    .band-songs a {
        color: inherit;
        text-decoration: none;
    }

    .band-songs a:hover {
        color: inherit;
        text-decoration: none;
    }
</style>

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1>
                    <%= band.name %>
                </h1>
                <% if (band.description) { %>
                    <p class="text-muted">
                        <%= band.description %>
                    </p>
                    <% } %>
            </div>
            <div>
                <a href="/bands/<%= band.id %>/songs" class="btn btn-outline-primary">
                    <i class="bi bi-music-note-list"></i> Manage Songs
                </a>
                <a href="/bands" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back to Bands
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Left Column: Setlists -->
    <div class="col-md-8 mb-4">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-list-check"></i> Setlists
                </h5>
                <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal"
                    data-bs-target="#newSetlistModal">
                    <i class="bi bi-plus"></i> New Setlist
                </button>
            </div>
            <div class="card-body">
                <% if (setlists && setlists.length> 0) { %>
                    <% setlists.forEach(setlist=> { %>
                        <div class="d-flex justify-content-between align-items-center py-3 border-bottom">
                            <div>
                                <a href="/setlists/<%= setlist.id %>" class="text-decoration-none">
                                    <strong>
                                        <%= setlist.title %>
                                    </strong>
                                </a>
                                <% if (setlist.date) { %>
                                    <br><small class="text-muted">
                                        <i class="bi bi-calendar"></i>
                                        <%= new Date(setlist.date).toLocaleDateString() %>
                                    </small>
                                    <% } %>
                                        <% if (setlist.isFinalized) { %>
                                            <span class="badge bg-success ms-2">Finalized</span>
                                            <% } %>
                            </div>
                            <div>
                                <a href="/setlists/<%= setlist.id %>/copy" class="btn btn-outline-info btn-sm">
                                    <i class="bi bi-files"></i> Copy
                                </a>
                                <a href="/setlists/<%= setlist.id %>/edit" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                                <button class="btn btn-outline-danger btn-sm delete-setlist"
                                    data-setlist-id="<%= setlist.id %>" data-setlist-title="<%= setlist.title %>">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                                <% if (setlist.isFinalized) { %>
                                    <a href="/setlists/<%= setlist.id %>/print" class="btn btn-outline-success btn-sm">
                                        <i class="bi bi-printer"></i> Print
                                    </a>
                                    <% } else { %>
                                        <a href="/setlists/<%= setlist.id %>/finalize"
                                            class="btn btn-outline-warning btn-sm">
                                            <i class="bi bi-check-circle"></i> Finalize
                                        </a>
                                        <% } %>
                            </div>
                        </div>
                        <% }) %>
                            <% } else { %>
                                <p class="text-muted">No setlists yet. Create your first setlist to get started!</p>
                                <% } %>
            </div>
        </div>
    </div>

    <!-- Right Column: Quick Set + Members -->
    <div class="col-md-4">
        <!-- Quick Set Creation Section -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-lightning"></i> Quick Set Creation
                </h5>
            </div>
            <div class="card-body">
                <button type="button" class="btn btn-primary" id="quickSetBtn">
                    <i class="bi bi-plus-circle"></i> Create Quick Set
                </button>
                
                <!-- Quick Set Form (initially hidden) -->
                <div id="quickSetForm" class="mt-3" style="display: none;">
                    <form action="/bands/<%= band.id %>/quick-set" method="POST">
                        <div class="mb-3">
                            <label for="songList" class="form-label">Paste your setlist here:</label>
                            <textarea class="form-control" id="songList" name="songList" rows="10" 
                                placeholder="Set 1:
The Music Never Stopped >
Sugaree >
The Music Never Stopped
Me & My Uncle >
Big River

Set 2:
It Must Have Been The Roses
C.C. Rider, Grateful Dead

Set 3:
Ramble On Rose">Set 1:


Set 2:


Set 3:


Set 4:

</textarea>
                            <div class="form-text">
                                Format: <strong>Song Title, Artist</strong> (Artist is optional)<br>
                                Each set should start with "Set X:" on its own line
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-success btn-sm">
                                <i class="bi bi-check-circle"></i> Process
                            </button>
                            <button type="button" class="btn btn-secondary btn-sm" id="cancelQuickSet">
                                Cancel
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Band Members Section -->
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-people"></i> Members
                </h5>
            </div>
            <div class="card-body">
                <% band.members.forEach(member => { %>
                    <div class="d-flex justify-content-between align-items-center py-2">
                        <div>
                            <%= member.user.username %>
                                <% if (member.role === 'owner') { %>
                                    <span class="badge bg-primary">Owner</span>
                                    <% } %>
                        </div>
                    </div>
                    <% }) %>

                        <!-- Invite Member Form -->
                        <% const isOwner = band.members.find(member => member.user.id === userId && member.role === 'owner'); %>
                            <% if (isOwner) { %>
                                <hr>
                                <h6>Invite New Member</h6>
                                <form action="/bands/<%= band.id %>/invite" method="POST">
                                    <div class="input-group">
                                        <input type="email" class="form-control form-control-sm" name="email"
                                            placeholder="Email address" required>
                                        <button class="btn btn-outline-secondary btn-sm" type="submit">
                                            <i class="bi bi-send"></i> Invite
                                        </button>
                                    </div>
                                </form>

                                <!-- Show pending invitations -->
                                <% if (pendingInvitations && pendingInvitations.length> 0) { %>
                                    <div class="mt-3">
                                        <h6 class="mb-2">Pending Invitations</h6>
                                        <div class="list-group list-group-flush">
                                            <% pendingInvitations.forEach(invitation=> { %>
                                                <div class="list-group-item d-flex justify-content-between align-items-center px-0">
                                                    <div>
                                                        <small class="text-muted">
                                                            <%= invitation.email %>
                                                        </small>
                                                        <br>
                                                        <small class="text-muted">Sent: <%= new
                                                                Date(invitation.createdAt).toLocaleDateString() %>
                                                        </small>
                                                    </div>
                                                    <button type="button" class="btn btn-sm btn-outline-danger delete-invitation"
                                                        data-invitation-id="<%= invitation.id %>"
                                                        data-email="<%= invitation.email %>">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                                <% }) %>
                                        </div>
                                    </div>
                                    <% } else { %>
                                        <p class="text-muted small mt-2">No pending invitations</p>
                                        <% } %>
                                            <% } %>
            </div>
        </div>
    </div>
</div>

<!-- Band Songs Section (full width below) -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-music-note-list"></i> Band Songs
                </h5>
                <a href="/bands/<%= band.id %>/songs" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-gear"></i> Manage Songs
                </a>
            </div>
            <div class="card-body band-songs">
                <% if (bandSongs && bandSongs.length> 0) { %>
                    <div class="row">
                        <% bandSongs.forEach(song => { %>
                            <div class="col-md-4 mb-3">
                                <a href="/songs/<%= song.song.id %>" class="text-decoration-none">
                                    <div class="song-card">
                                        <div class="song-title">
                                            <%= song.song.title %>
                                        </div>
                                        <% if (song.song.artists && song.song.artists.length> 0) { %>
                                            <div class="song-artist">
                                                by <%= song.song.artists[0].artist.name %>
                                            </div>
                                            <% } %>
                                                <% if (song.song.vocalist) { %>
                                                    <div class="song-vocalist">
                                                        vocals: <%= song.song.vocalist.name %>
                                                    </div>
                                                    <% } %>
                                                        <div class="d-flex align-items-center mt-2">
                                                            <% if (song.song.key) { %>
                                                                <span class="song-key me-2">
                                                                    <%= song.song.key %>
                                                                </span>
                                                                <% } %>
                                                                    <% if (song.song.time) { %>
                                                                        <% const minutes=Math.floor(song.song.time / 60); %>
                                                                            <% const seconds=song.song.time % 60; %>
                                                                                <span class="song-time">
                                                                                    <%= minutes %>:<%= seconds.toString().padStart(2, '0') %>
                                                                                </span>
                                                                                <% } %>
                                                        </div>
                                    </div>
                                </a>
                            </div>
                            <% }) %>
                    </div>
                    <% } else { %>
                        <p class="text-muted">This band doesn't have any songs yet.</p>
                        <a href="/bands/<%= band.id %>/songs" class="btn btn-primary">
                            <i class="bi bi-plus-circle"></i> Add Songs
                        </a>
                        <% } %>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Handle delete invitation buttons
        document.querySelectorAll('.delete-invitation').forEach(button => {
                button.addEventListener('click', function () {
                    const invitationId = this.getAttribute('data-invitation-id');
                    const email = this.getAttribute('data-email');

                    if (confirm(`Are you sure you want to delete the invitation to ${email}? This will allow you to send a new invitation.`)) {
                        fetch(`/bands/<%= band.id %>/invitations/${invitationId}/delete`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // Remove the invitation item from the DOM
                                    this.closest('.list-group-item').remove();

                                    // Check if there are any invitations left
                                    const remainingInvitations = document.querySelectorAll('.delete-invitation');
                                    if (remainingInvitations.length === 0) {
                                        // Replace the list with "No pending invitations" message
                                        const listGroup = document.querySelector('.list-group');
                                        if (listGroup) {
                                            listGroup.innerHTML = '<p class="text-muted small">No pending invitations</p>';
                                        }
                                    }
                                } else {
                                    alert('Error deleting invitation: ' + (data.error || 'Unknown error'));
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error deleting invitation. Please try again.');
                            });
                    }
                });
            });

            // Handle delete setlist buttons
            document.querySelectorAll('.delete-setlist').forEach(button => {
                button.addEventListener('click', function () {
                    const setlistId = this.getAttribute('data-setlist-id');
                    const setlistTitle = this.getAttribute('data-setlist-title');

                    if (confirm(`Are you sure you want to delete the setlist "${setlistTitle}"? This action cannot be undone.`)) {
                        fetch(`/setlists/${setlistId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // Remove the setlist item from the DOM
                                    this.closest('.d-flex.justify-content-between.align-items-center.py-3.border-bottom').remove();

                                    // Check if there are any setlists left
                                    const remainingSetlists = document.querySelectorAll('.delete-setlist');
                                    if (remainingSetlists.length === 0) {
                                        // Replace the list with "No setlists" message
                                        const cardBody = document.querySelector('.card-body');
                                        if (cardBody) {
                                            cardBody.innerHTML = '<p class="text-muted">No setlists yet. Create your first setlist to get started!</p>';
                                        }
                                    }
                                } else {
                                    alert('Error deleting setlist: ' + (data.error || 'Unknown error'));
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error deleting setlist. Please try again.');
                            });
                    }
                });
            });
        });

        // Quick Set Form Toggle
        document.getElementById('quickSetBtn').addEventListener('click', function() {
            const form = document.getElementById('quickSetForm');
            const btn = document.getElementById('quickSetBtn');
            
            if (form.style.display === 'none') {
                form.style.display = 'block';
                btn.innerHTML = '<i class="bi bi-chevron-up"></i> Hide Form';
                btn.classList.remove('btn-primary');
                btn.classList.add('btn-outline-primary');
                // Focus on textarea
                document.getElementById('songList').focus();
            } else {
                form.style.display = 'none';
                btn.innerHTML = '<i class="bi bi-plus-circle"></i> Create Quick Set';
                btn.classList.remove('btn-outline-primary');
                btn.classList.add('btn-primary');
            }
        });

        // Cancel button
        document.getElementById('cancelQuickSet').addEventListener('click', function() {
            const form = document.getElementById('quickSetForm');
            const btn = document.getElementById('quickSetBtn');
            
            form.style.display = 'none';
            btn.innerHTML = '<i class="bi bi-plus-circle"></i> Create Quick Set';
            btn.classList.remove('btn-outline-primary');
            btn.classList.add('btn-primary');
            
            // Clear the textarea
            document.getElementById('songList').value = `Set 1:


Set 2:


Set 3:


Set 4:

`;
        });
    </script>

<!-- New Setlist Modal -->
<div class="modal fade" id="newSetlistModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Setlist</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form action="/bands/<%= band.id %>/setlists" method="POST">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="title" class="form-label">Setlist Title</label>
                        <input type="text" class="form-control" id="title" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="date" class="form-label">Date (optional)</label>
                        <input type="date" class="form-control" id="date" name="date">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Setlist</button>
                </div>
            </form>
        </div>
    </div>
</div>
