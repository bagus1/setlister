<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1><i class="bi bi-headphones"></i> Listen to the Set</h1>
                    <h2 class="h4 text-muted">
                        <%= setlist.title %> - <%= setlist.Band.name %>
                    </h2>
                    <% if (setlist.date) { %>
                        <h3 class="h5 text-primary">
                            <i class="bi bi-calendar"></i>
                            <%= new Date(setlist.date).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %>
                        </h3>
                    <% } %>
                </div>
                <div>
                    <a href="/setlists/<%= setlist.id %>/finalize" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Setlist
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-9 mx-auto">
            <!-- Audio Player -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="bi bi-play-circle"></i> Audio Player
                    </h5>
                    <% if (playlistData && playlistData.summary) { %>
                        <div class="mt-2">
                            <span class="badge bg-info">
                                <i class="bi bi-clock"></i> Total: <%= playlistData.summary.duration %> (<%= playlistData.summary.songCount %> songs)
                            </span>
                        </div>
                    <% } %>
                </div>
                <div class="card-body text-center">
                    <audio id="audioPlayer" controls class="w-100">
                        <source src="" type="audio/mpeg">
                        Your browser does not support the audio element.
                    </audio>
                    
                    <div class="mt-3">
                        <button id="prevBtn" class="btn btn-outline-primary me-2" disabled>
                            <i class="bi bi-skip-backward-fill"></i>
                        </button>
                        <button id="restartBtn" class="btn btn-outline-warning me-2" disabled>
                            <i class="bi bi-arrow-repeat"></i>
                        </button>
                        <button id="nextBtn" class="btn btn-outline-primary" disabled>
                            <i class="bi bi-skip-forward-fill"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Playlist -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="bi bi-music-note-list"></i> Recordings Playlist
                    </h5>
                    <small class="text-muted">Source: <a href="<%= externalUrl %>" target="_blank"><%= externalUrl %></a></small>
                </div>
                <div class="card-body">
                    <% if (playlistData && playlistData.tracks && playlistData.tracks.length > 0) { %>
                        <ul id="playlist" class="list-group list-group-flush">
                            <% playlistData.tracks.forEach((track, index) => { %>
                                <li class="list-group-item d-flex justify-content-between align-items-center playlist-item" 
                                    data-index="<%= index %>" 
                                    data-url="<%= track.url %>"
                                    data-title="<%= track.title %>">
                                    <div class="d-flex align-items-center">
                                        <span class="badge bg-light text-dark me-3">
                                            <%= index + 1 %>
                                        </span>
                                        <div>
                                            <strong class="song-title"><%= track.title %></strong>
                                            <% if (track.duration) { %>
                                                <br><small class="text-muted"><%= track.duration %></small>
                                            <% } %>
                                        </div>
                                    </div>
                                </li>
                            <% }); %>
                        </ul>
                    <% } else { %>
                        <div class="text-center py-4">
                            <i class="bi bi-exclamation-triangle text-warning" style="font-size: 3rem;"></i>
                            <h5 class="text-muted mt-3">No audio tracks found</h5>
                            <p class="text-muted">The external playlist doesn't contain any recognizable audio files.</p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.playlist-item {
    cursor: pointer;
    transition: background-color 0.2s;
}

.playlist-item:hover {
    background-color: #f8f9fa;
}

.playlist-item.active {
    background-color: #007bff !important;
    color: white;
}

.playlist-item.active .badge {
    background-color: white !important;
    color: #007bff !important;
}

.bold-icon {
    font-size: large;
    -webkit-text-stroke: 1px white;
}
</style>

<script>
let currentTrackIndex = 0;
let playlist = [];
const audioPlayer = document.getElementById('audioPlayer');
const prevBtn = document.getElementById('prevBtn');
const restartBtn = document.getElementById('restartBtn');
const nextBtn = document.getElementById('nextBtn');

// Initialize playlist from DOM
document.addEventListener('DOMContentLoaded', function() {
    const playlistItems = document.querySelectorAll('.playlist-item');
    playlist = Array.from(playlistItems).map(item => ({
        url: item.dataset.url,
        title: item.dataset.title
    }));
    
    if (playlist.length > 0) {
        updateButtons();
        loadTrack(0);
    }
});

// Load and play a track
function loadTrack(index) {
    if (index < 0 || index >= playlist.length) return;
    
    currentTrackIndex = index;
    const track = playlist[index];
    
    // Update audio source
    audioPlayer.src = track.url;
    
    // Update active state in playlist
    document.querySelectorAll('.playlist-item').forEach((item, i) => {
        item.classList.toggle('active', i === index);
    });
    
    // Update buttons
    updateButtons();
    
    // Try to auto-play with multiple fallbacks
    const playPromise = audioPlayer.play();
    
    if (playPromise !== undefined) {
        playPromise
            .then(() => {
                console.log('Auto-play started successfully');
            })
            .catch(error => {
                console.log('Auto-play blocked, user must click play:', error);
                // Show a subtle hint that user needs to click play
                const playButton = audioPlayer.querySelector('button[title="Play"]') || 
                                 audioPlayer.querySelector('.play-button');
                if (playButton) {
                    playButton.style.animation = 'pulse 2s infinite';
                }
            });
    }
}

// Update button states
function updateButtons() {
    prevBtn.disabled = currentTrackIndex === 0;
    nextBtn.disabled = currentTrackIndex === playlist.length - 1;
    restartBtn.disabled = false;
}

// Event listeners
prevBtn.addEventListener('click', () => {
    if (currentTrackIndex > 0) {
        loadTrack(currentTrackIndex - 1);
    }
});

restartBtn.addEventListener('click', () => {
    audioPlayer.currentTime = 0;
    audioPlayer.play().catch(e => console.log('Play prevented:', e));
});

nextBtn.addEventListener('click', () => {
    if (currentTrackIndex < playlist.length - 1) {
        loadTrack(currentTrackIndex + 1);
    }
});

// Auto-advance to next track
audioPlayer.addEventListener('ended', () => {
    if (currentTrackIndex < playlist.length - 1) {
        loadTrack(currentTrackIndex + 1);
    }
});

// Click on playlist item to play
document.addEventListener('click', (e) => {
    if (e.target.closest('.playlist-item')) {
        const item = e.target.closest('.playlist-item');
        const index = parseInt(item.dataset.index);
        loadTrack(index);
    }
});

// Add CSS animation for the play button hint
const style = document.createElement('style');
style.textContent = `
    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.1); }
        100% { transform: scale(1); }
    }
`;
document.head.appendChild(style);
</script>
