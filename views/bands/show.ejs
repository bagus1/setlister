<!-- CSS moved to /css/pages.css and /css/main.css -->

<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <% if (band.slug && band.isPublic) { %>
                    <a href="/<%= band.slug %>" class="btn btn-success me-2">
                        <i class="bi bi-eye"></i> View Public Page
                    </a>
                <% } %>
                <a href="/bands/<%= band.id %>/edit" class="btn btn-outline-warning">
                    <i class="bi bi-pencil"></i> Edit Band
                </a>
                <a href="/bands/<%= band.id %>/songs" class="btn btn-outline-primary">
                    <i class="bi bi-music-note-list"></i> Manage Songs
                </a>
                <a href="/bands/<%= band.id %>/venues" class="btn btn-outline-success">
                    <i class="bi bi-geo-alt"></i> Our Venues
                </a>
                <a href="/bands/<%= band.id %>/gigs" class="btn btn-outline-dark">
                    <i class="bi bi-calendar-event"></i> Gigs
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Onboarding Section - Only show when band has no songs -->
<% if (!bandSongs || bandSongs.length === 0) { %>
    <%- include('partials/onboarding-panels', { band: band, isBottom: false }) %>
<% } %>

<div class="row">
    <!-- Left Column: Gigs + Opportunities + Members -->
    <div class="col-md-3">
        <!-- Dynamic Action Panel (Gigs) -->
        <div class="card mb-4 action-panel">
            <% if (upcomingGigs && upcomingGigs.length > 0) { %>
                <!-- Next Gigs Panel -->
                <div class="card-header bg-primary text-white">
                    <h6 class="mb-0">
                        <i class="bi bi-calendar-event"></i> Next Gigs
                    </h6>
                </div>
                <div class="card-body">
                    <div class="small text-muted mb-2">Your upcoming performances</div>
                    <% upcomingGigs.forEach((gig, index) => { %>
                        <div class="d-flex justify-content-between align-items-center <%= index < upcomingGigs.length - 1 ? 'mb-2 pb-2 border-bottom' : '' %>">
                            <div>
                                <div class="fw-bold small"><%= gig.venue.name %></div>
                                <div class="text-muted" style="font-size: 0.8em;">
                                    <%= new Date(gig.gigDate).toLocaleDateString('en-US', { 
                                        weekday: 'short',
                                        month: 'short', 
                                        day: 'numeric' 
                                    }) %>
                                </div>
                            </div>
                            <div class="text-end">
                                <% if (gig.startTime) { %>
                                    <div class="small text-muted">
                                        <%= new Date(gig.startTime).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %>
                                    </div>
                                <% } %>
                                <% if (gig.fee) { %>
                                    <div class="small text-success fw-bold">$<%= gig.fee.toLocaleString() %></div>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                    <div class="mt-3">
                        <a href="/bands/<%= band.id %>/gigs" class="btn btn-outline-primary btn-sm w-100">
                            <i class="bi bi-calendar-check"></i> View All Gigs
                        </a>
                    </div>
                </div>
            <% } else if (bandVenues && bandVenues.length > 0) { %>
                <!-- Get Gigs Panel -->
                <div class="card-header bg-success text-white">
                    <h6 class="mb-0">
                        <i class="bi bi-lightning-charge"></i> Get Gigs
                    </h6>
                </div>
                <div class="card-body">
                    <div class="small text-muted mb-3">Contact your venues</div>
                    <a href="/bands/<%= band.id %>/venues" class="btn btn-success btn-sm w-100 mb-2">
                        <i class="bi bi-geo-alt"></i> Book at Your Venues
                    </a>
                    <a href="/bands/<%= band.id %>/venue-picker" class="btn btn-outline-success btn-sm w-100 mb-2">
                        <i class="bi bi-plus-circle"></i> Pick Venues
                    </a>
                    <a href="/bands/<%= band.id %>/gigs/new" class="btn btn-outline-success btn-sm w-100">
                        <i class="bi bi-calendar-plus"></i> Schedule a Gig
                    </a>
                </div>
            <% } else { %>
                <!-- Find Venues Panel -->
                <div class="card-header bg-info text-white">
                    <h6 class="mb-0">
                        <i class="bi bi-search"></i> Find Venues to Play
                    </h6>
                </div>
                <div class="card-body">
                    <div class="small text-muted mb-3">Start by adding venues where you'd like to perform</div>
                    <a href="/bands/<%= band.id %>/venue-picker" class="btn btn-info btn-sm w-100 mb-2">
                        <i class="bi bi-plus-circle"></i> Add Venues
                    </a>
                    <div class="small text-muted mt-2">
                        <i class="bi bi-lightbulb"></i> Tip: You can also browse all venues and add them to your band
                    </div>
                </div>
            <% } %>
        </div>

        <!-- Open Opportunities Panel -->
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-target"></i> Open Opportunities
                </h5>
                <a href="/bands/<%= band.id %>/venues" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-plus"></i> New
                </a>
            </div>
            <div class="card-body">
                <% if (openOpportunities && openOpportunities.length > 0) { %>
                    <% openOpportunities.forEach(opportunity => { %>
                        <div class="d-flex justify-content-between align-items-start py-2 border-bottom">
                            <div class="flex-grow-1">
                                <a href="/bands/<%= band.id %>/opportunities/<%= opportunity.id %>" class="text-decoration-none">
                                    <strong class="small"><%= opportunity.venue.name %></strong>
                                </a>
                                <div class="small text-muted">
                                    <span class="badge bg-secondary"><%= opportunity.status %></span>
                                </div>
                                <% if (opportunity.interactions && opportunity.interactions.length > 0) { %>
                                    <div class="small text-muted mt-1">
                                        <i class="bi bi-chat-dots"></i> 
                                        <%= new Date(opportunity.interactions[0].createdAt).toLocaleDateString() %>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                    <div class="mt-3">
                        <a href="/bands/<%= band.id %>/opportunities" class="btn btn-outline-primary btn-sm w-100">
                            <i class="bi bi-eye"></i> View All Opportunities
                        </a>
                    </div>
                <% } else { %>
                    <p class="text-muted small">No open opportunities yet.</p>
                    <a href="/bands/<%= band.id %>/venues" class="btn btn-primary btn-sm w-100">
                        <i class="bi bi-plus-circle"></i> Start Booking
                    </a>
                <% } %>
            </div>
        </div>

        <!-- Band Members Section -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-people"></i> Members
                </h5>
                <small class="text-muted">Band members who can collaborate on setlists and songs</small>
            </div>
            <div class="card-body">
                <% band.members.forEach(member => { %>
                    <div class="d-flex justify-content-between align-items-center py-2">
                        <div>
                            <%= member.user.username %>
                                <% if (member.role === 'owner') { %>
                                    <span class="badge bg-primary">Owner</span>
                                    <% } %>
                        </div>
                    </div>
                    <% }) %>

                    <!-- Band Meeting Section -->
                    <% if (band.members.length > 1) { %>
                        <hr>
                        <div class="meeting-section">
                            <h6 class="mb-3">
                                <i class="bi bi-camera-video"></i> Band Meetings
                            </h6>
                            
                            <!-- Active Meeting Display -->
                            <div id="activeMeeting" class="alert alert-success" style="display: none;">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong><i class="bi bi-camera-video-fill"></i> Meeting Active</strong>
                                        <div class="small">Click to join the meeting</div>
                                    </div>
                                    <button class="btn btn-success btn-sm" onclick="joinMeeting()">
                                        <i class="bi bi-box-arrow-up-right"></i> Join
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Meeting Controls -->
                            <div class="d-grid gap-2">
                                <button class="btn btn-primary btn-sm" onclick="startInstantMeeting()">
                                    <i class="bi bi-camera-video"></i> Start Instant Meeting
                                </button>
                                <button class="btn btn-outline-secondary btn-sm" onclick="scheduleMeeting()">
                                    <i class="bi bi-calendar-plus"></i> Schedule Meeting
                                </button>
                            </div>
                            
                            <div class="mt-2">
                                <small class="text-muted">
                                    <i class="bi bi-info-circle"></i> 
                                    Share screen for sheet music, collaborate on setlists, and rehearse together
                                </small>
                            </div>
                        </div>
                    <% } %>

                        <!-- Invite Member Form -->
                        <% const isOwner = band.members.find(member => member.user.id === userId && member.role === 'owner'); %>
                            <% if (isOwner) { %>
                                <hr>
                                <h6>Invite New Member</h6>
                                <form action="/bands/<%= band.id %>/invite" method="POST">
                                    <div class="input-group">
                                        <input type="email" class="form-control form-control-sm" name="email"
                                            placeholder="Email address" required>
                                        <button class="btn btn-outline-secondary btn-sm" type="submit">
                                            <i class="bi bi-send"></i> Invite
                                        </button>
                                    </div>
                                </form>

                                <!-- Show pending invitations -->
                                <% if (pendingInvitations && pendingInvitations.length> 0) { %>
                                    <div class="mt-3">
                                        <h6 class="mb-2">Pending Invitations</h6>
                                        <div class="list-group list-group-flush">
                                            <% pendingInvitations.forEach(invitation=> { %>
                                                <div class="list-group-item d-flex justify-content-between align-items-center px-0">
                                                    <div>
                                                        <small class="text-muted">
                                                            <%= invitation.email %>
                                                        </small>
                                                        <br>
                                                        <small class="text-muted">Sent: <%= new
                                                                Date(invitation.createdAt).toLocaleDateString() %>
                                                        </small>
                                                    </div>
                                                    <button type="button" class="btn btn-sm btn-outline-danger delete-invitation"
                                                        data-invitation-id="<%= invitation.id %>"
                                                        data-email="<%= invitation.email %>">
                                                        <i class="bi bi-trash"></i>
                                                    </button>
                                                </div>
                                                <% }) %>
                                        </div>
                                    </div>
                                    <% } else { %>
                                        <p class="text-muted small mt-2">No pending invitations</p>
                                        <% } %>
                                            <% } %>
            </div>
        </div>

        <!-- Your Storage Widget -->
        <% if (userStorageInfo) { %>
        <div class="card mb-4 border-primary">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <h6 class="mb-0">
                        <i class="bi bi-person-circle"></i> Your Storage
                    </h6>
                    <span class="badge bg-<%= userStorageInfo.usedPercent > 90 ? 'danger' : userStorageInfo.usedPercent > 75 ? 'warning' : 'primary' %>">
                        <%= userStorageInfo.totalQuotaGB %> GB
                    </span>
                </div>
                
                <div class="progress mb-2" style="height: 20px;">
                    <% 
                    // Show at least 2% width if there's any usage, for visibility
                    const userDisplayPercent = userStorageInfo.usedPercent > 0 && userStorageInfo.usedPercent < 2 ? 2 : userStorageInfo.usedPercent;
                    %>
                    <div class="progress-bar bg-<%= userStorageInfo.usedPercent > 90 ? 'danger' : userStorageInfo.usedPercent > 75 ? 'warning' : 'primary' %>" 
                         role="progressbar" 
                         style="width: <%= Math.min(userDisplayPercent, 100) %>%">
                        <small><%= userStorageInfo.usedPercent < 0.1 ? '< 0.1' : userStorageInfo.usedPercent %>%</small>
                    </div>
                </div>
                
                <small class="text-muted d-block">
                    <%= userStorageInfo.usedGB.toFixed(2) %> GB attributed to you across <%= userStorageInfo.breakdown.length %> band<%= userStorageInfo.breakdown.length !== 1 ? 's' : '' %>
                </small>
                
                <% if (userStorageInfo.remainingHours && userStorageInfo.remainingHours.description) { %>
                <div class="alert alert-info mt-2 mb-2 py-2">
                    <small>
                        <strong>Can upload:</strong><br>
                        <%= userStorageInfo.remainingHours.description %>
                    </small>
                </div>
                <% } else { %>
                <small class="text-muted d-block mt-2">
                    <%= userStorageInfo.remainingGB %> GB available
                </small>
                <% } %>
                
                <div class="d-grid gap-2">
                    <a href="/bands/<%= band.id %>/recordings" class="btn btn-sm btn-outline-primary">
                        <i class="bi bi-music-note-list"></i> View All Recordings
                    </a>
                    <a href="/pricing" class="btn btn-sm btn-primary">
                        <i class="bi bi-arrow-up-circle"></i> Upgrade Your Storage
                    </a>
                </div>
            </div>
        </div>
        <% } %>
        
        <!-- Band Storage Widget (Free Pool + User Contributions) -->
        <% if (bandStorageInfo) { %>
        <div class="card mb-4">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <h6 class="mb-0">
                        <i class="bi bi-hdd"></i> This Band
                    </h6>
                    <span class="badge bg-secondary">
                        <%= bandStorageInfo.quotaGB %> GB total
                    </span>
                </div>
                
                <div class="progress mb-2" style="height: 20px;">
                    <% 
                    // Show at least 2% width if there's any usage, for visibility
                    const displayPercent = bandStorageInfo.usedPercent > 0 && bandStorageInfo.usedPercent < 2 ? 2 : bandStorageInfo.usedPercent;
                    %>
                    <div class="progress-bar bg-<%= bandStorageInfo.usedPercent > 90 ? 'danger' : bandStorageInfo.usedPercent > 75 ? 'warning' : 'info' %>" 
                         role="progressbar" 
                         style="width: <%= Math.min(displayPercent, 100) %>%">
                        <small><%= bandStorageInfo.usedPercent < 0.1 ? '< 0.1' : bandStorageInfo.usedPercent %>%</small>
                    </div>
                </div>
                
                <small class="text-muted d-block mb-2">
                    <%= bandStorageInfo.usedGB.toFixed(2) %> GB used
                </small>
                
                <!-- Free Pool Breakdown -->
                <div class="mb-2">
                    <small class="text-success d-block">
                        <i class="bi bi-gift"></i> 
                        <%= bandStorageInfo.freePoolUsedGB.toFixed(2) %> GB / <%= bandStorageInfo.freePoolGB %> GB free pool
                        <% if (bandStorageInfo.freePoolRemainingGB > 0) { %>
                            (<%= bandStorageInfo.freePoolRemainingGB.toFixed(2) %> GB remaining)
                        <% } else { %>
                            (full)
                        <% } %>
                    </small>
                    <% if (bandStorageInfo.userAttributedGB > 0) { %>
                    <small class="text-info d-block mt-1">
                        <i class="bi bi-person"></i> 
                        <%= bandStorageInfo.userAttributedGB.toFixed(2) %> GB from member uploads
                    </small>
                    <% } %>
                </div>
                
                <small class="text-muted d-block">
                    <i class="bi bi-info-circle"></i> 
                    First 2 GB free, then counts against uploader's quota
                </small>
            </div>
        </div>
        <% } %>
    </div>

    <!-- Middle Column: Setlists -->
    <div class="col-md-6 mb-4">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="mb-0">
                        <i class="bi bi-list-check"></i> Setlists
                    </h5>
                    <small class="text-muted">Organized song lists for performances and rehearsals</small>
                </div>
                <button type="button" class="btn btn-primary btn-sm" 
                    data-bs-toggle="modal"
                    data-bs-target="#newSetlistModal">
                    <i class="bi bi-plus"></i> New Setlist
                </button>
            </div>
            <div class="card-body">
                <% if (setlists && setlists.length> 0) { %>
                    <% setlists.forEach(setlist=> { %>
                        <div class="d-flex justify-content-between align-items-center py-3 border-bottom">
                            <div class="flex-grow-1" style="min-width: 0; margin-right: 16px;">
                                <a href="/bands/<%= band.id %>/setlists/<%= setlist.id %>" class="text-decoration-none">
                                    <strong>
                                        <%= setlist.title %>
                                    </strong>
                                </a>
                                <% if (setlist.date) { %>
                                    <br><small class="text-muted">
                                        <i class="bi bi-calendar"></i>
                                        <%= new Date(setlist.date).toLocaleDateString() %>
                                    </small>
                                    <% } %>
                                        <% if (setlist.isFinalized) { %>
                                            <span class="badge bg-success ms-2">Finalized</span>
                                            <% } %>
                            </div>
                            <div class="d-flex gap-2" style="flex-shrink: 0; width: 232px; justify-content: flex-end;">
                                <a href="/bands/<%= band.id %>/setlists/<%= setlist.id %>/copy" class="btn btn-outline-info btn-sm">
                                    <i class="bi bi-files"></i> Copy
                                </a>
                                <% if (setlist.isFinalized) { %>
                                    <a href="/bands/<%= band.id %>/setlists/<%= setlist.id %>/print" class="btn btn-outline-success btn-sm">
                                        <i class="bi bi-printer"></i> Print
                                    </a>
                                    <% } else { %>
                                        <a href="/bands/<%= band.id %>/setlists/<%= setlist.id %>"
                                            class="btn btn-outline-warning btn-sm">
                                            <i class="bi bi-eye"></i> View Setlist
                                        </a>
                                        <% } %>
                                <button class="btn btn-outline-danger btn-sm delete-setlist"
                                    data-setlist-id="<%= setlist.id %>" data-setlist-title="<%= setlist.title %>">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                        <% }) %>
                            <% } else { %>
                                <p class="text-muted">Use the Quick Set Creation or the Google Doc Upload methods to create your first setlist. You can also <a href="/bands/<%= band.id %>/songs">Manage Songs</a> to pick from songs already available.</p>
                                <% } %>
            </div>
        </div>

        <!-- Albums Section -->
        <div class="card mb-4 mt-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="mb-0">
                        <i class="bi bi-disc"></i> Albums
                    </h5>
                    <small class="text-muted">Published recordings and releases</small>
                </div>
                <% if (albumLimitInfo && albumLimitInfo.allowed) { %>
                    <button type="button" class="btn btn-success btn-sm" 
                        data-bs-toggle="modal"
                        data-bs-target="#newAlbumModal">
                        <i class="bi bi-plus"></i> New Album
                    </button>
                <% } else if (albumLimitInfo) { %>
                    <span class="badge bg-warning">
                        Limit Reached (<%= albumLimitInfo.currentCount %>/<%= albumLimitInfo.limit %>)
                    </span>
                <% } %>
            </div>
            <div class="card-body">
                <% if (albums && albums.length > 0) { %>
                    <% albums.forEach(album => { %>
                        <div class="d-flex justify-content-between align-items-center py-3 border-bottom">
                            <div class="flex-grow-1">
                                <a href="/bands/<%= band.id %>/albums/<%= album.id %>" class="text-decoration-none">
                                    <strong><%= album.title %></strong>
                                </a>
                                <% 
                                    let isScheduled = false;
                                    if (album.releaseDate) { 
                                        const now = new Date();
                                        const releaseDate = new Date(album.releaseDate);
                                        isScheduled = releaseDate > now;
                                %>
                                    <br><small class="text-muted">
                                        <i class="bi bi-calendar"></i>
                                        <%= releaseDate.toLocaleDateString() %>
                                    </small>
                                <% } %>
                                <% if (album.isPublished) { %>
                                    <% if (isScheduled) { %>
                                        <span class="badge bg-warning text-dark ms-2">
                                            <i class="bi bi-clock"></i> Scheduled
                                        </span>
                                    <% } else { %>
                                        <span class="badge bg-success ms-2">Published</span>
                                    <% } %>
                                <% } else { %>
                                    <span class="badge bg-secondary ms-2">Draft</span>
                                <% } %>
                            </div>
                            <div class="d-flex gap-2">
                                <a href="/bands/<%= band.id %>/albums/<%= album.id %>" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-eye"></i> View
                                </a>
                                <% if (album.shareTokens) { 
                                    const tokens = album.shareTokens || {};
                                    let playerToken = null;
                                    for (const [token, view] of Object.entries(tokens)) {
                                        if (view === 'player') playerToken = token;
                                    }
                                %>
                                    <% if (playerToken) { %>
                                        <a href="/bands/<%= band.id %>/albums/<%= album.id %>/player?t=<%= playerToken %>" 
                                           class="btn btn-outline-success btn-sm">
                                            <i class="bi bi-play-circle"></i> Player
                                        </a>
                                    <% } %>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p class="text-muted">No albums yet. Create your first album to showcase your band's recordings!</p>
                <% } %>
                
                <!-- Album limit info / upgrade prompt -->
                <% if (albumLimitInfo && !albumLimitInfo.allowed) { %>
                    <div class="alert alert-warning mt-3 mb-0">
                        <i class="bi bi-info-circle"></i>
                        <strong><%= albumLimitInfo.message %></strong>
                        <a href="/pricing" class="alert-link">View Plans →</a>
                    </div>
                <% } else if (albumLimitInfo && albumLimitInfo.limit) { %>
                    <div class="mt-3">
                        <small class="text-muted">
                            <i class="bi bi-disc"></i> 
                            <%= albumLimitInfo.currentCount %> of <%= albumLimitInfo.limit %> published albums used
                        </small>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Right Column: Quick Set + Other Tools -->
    <div class="col-md-3">

        <!-- Add Song Panel -->
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h6 class="mb-0">
                    <i class="bi bi-music-note-beamed"></i> Add Song
                </h6>
            </div>
            <div class="card-body">
                <div class="small text-muted mb-3">Add a single song to your band's repertoire</div>
                <a href="/bands/<%= band.id %>/songs/new" class="btn btn-primary btn-sm w-100">
                    <i class="bi bi-plus-circle"></i> Add New Song
                </a>
            </div>
        </div>

        <!-- Quick Set Creation Section -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-lightning"></i> Quick Set Creation
                    <i class="bi bi-question-circle text-muted ms-2"
                       data-bs-toggle="tooltip"
                       data-bs-placement="top"
                       title="Two input modes supported:&#10;&#10;Mode 1 - With set headers:&#10;Set 1:&#10;Song 1&#10;Song 2&#10;&#10;Set 2:&#10;Song 3&#10;Song 4&#10;&#10;Mode 2 - Blank line separated:&#10;Setlist Title&#10;&#10;Song 1&#10;Song 2&#10;&#10;Song 3&#10;Song 4"></i>
                </h5>
                <small class="text-muted">Paste or type your setlist to quickly create songs and organize them into sets</small>
            </div>
            <div class="card-body">
                <!-- Quick Set Form (always visible) -->
                <form action="/bands/<%= band.id %>/quick-set" method="POST">
                    <div class="mb-3">
                        <label for="songList" class="form-label">Enter or paste your setlist here:</label>
                        <textarea class="form-control" id="songList" name="songList" rows="10" 
                            placeholder="Option 1 - Groups separated by blank lines:
The Music Never Stopped >
Sugaree
Me & My Uncle

Big River
It Must Have Been The Roses
C.C. Rider, Grateful Dead

Ramble On Rose

Option 2 - With set headers:
Set 1:
The Music Never Stopped >
Sugaree

Set 2:
Big River
It Must Have Been The Roses

Encore:
Ramble On Rose" style="border-width: 2px; border-color: #6c757d;">Set 1:


Set 2:


Set 3:


Set 4:

</textarea>
                        <div class="form-text">
                            One song, artist per line. Artist optional
                        </div>
                    </div>
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-success btn-sm">
                            <i class="bi bi-check-circle"></i> Process
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Google Doc Processing Panel -->
        <div class="card mb-4">
            <div class="card-header">
                                <h5 class="mb-0">
                    <i class="bi bi-file-earmark-text"></i> Google Doc Upload
                    <i class="bi bi-question-circle text-muted ms-2"
                       data-bs-toggle="tooltip"
                       data-bs-placement="top"
                       title="We can't work all the miracles here. Make sure your google docs just has songs in it and that for the title of the song, each song has the same heading style like Heading 1 and only include the exact title of the song in that heading. Only have the exact title in that heading. Ensure your songs are separated by page breaks (Ctrl+Enter / Cmd+Enter) in your Google Doc. Only do this once per Google Doc or we'll get duplicate Music Stand Docs and links created. I've had luck with 150 songs (1 page per song) or less, but not too much more."></i>
                </h5>
                <small class="text-muted">Import songs from a Google Doc with chord charts or lyrics</small>
            </div>
            <div class="card-body">
                            <p class="text-muted mb-3">
                Paste a public Google Doc URL to automatically add your songs for your band and a new set. Ensure your songs are separated by page breaks (Ctrl+Enter / Cmd+Enter) in your Google Doc before entering it here.
            </p>
                
                <form id="googleDocForm">
                    <div class="mb-3">
                        <label for="googleDocUrl" class="form-label">Google Doc URL:</label>
                                        <input type="url" class="form-control" id="googleDocUrl" name="googleDocUrl"
                    placeholder="google doc url" required>
                    </div>
                    <input type="hidden" name="bandId" value="<%= band.id %>">
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary btn-sm" id="processGoogleDocBtn">
                            <i class="bi bi-play-circle"></i> Upload Document
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm" id="clearGoogleDocForm">
                            Clear
                        </button>
                    </div>
                </form>
                
                <!-- Processing Status (initially hidden) -->
                <div id="processingStatus" class="mt-3" style="display: none;">
                    <div class="alert alert-info">
                        <div class="d-flex align-items-center">
                            <div class="spinner-border spinner-border-sm me-2" role="status">
                                <span class="visually-hidden">Processing...</span>
                            </div>
                            <span id="processingMessage">Processing your Google Doc...</span>
                        </div>
                    </div>
                </div>
                
                <!-- Results Display (initially hidden) -->
                <div id="processingResults" class="mt-3" style="display: none;">
                    <div class="alert alert-success">
                        <h6 class="alert-heading">
                            <i class="bi bi-check-circle"></i> Processing Complete!
                        </h6>
                        <div id="resultsContent">
                            <!-- Results will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>

<!-- Band Songs Section (full width below) -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="mb-0">
                        <i class="bi bi-music-note-list"></i> Band Songs
                    </h5>
                    <small class="text-muted">Your band's song repertoire for creating setlists</small>
                </div>
                <a href="/bands/<%= band.id %>/songs" class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-gear"></i> Manage Songs
                </a>
            </div>
            <div class="card-body band-songs">
                <% if (bandSongs && bandSongs.length> 0) { %>
                    <div class="row">
                        <% bandSongs.forEach(song => { %>
                            <div class="col-md-4 mb-3" data-song-id="<%= song.song.id %>">
                                <div class="song-card position-relative">
                                    <button class="btn btn-link text-danger position-absolute bottom-0 end-0 mb-2 me-2 remove-song-btn" 
                                            data-song-id="<%= song.song.id %>" 
                                            data-song-title="<%= song.song.title %>"
                                            title="Remove from band songs"
                                            style="padding: 2px 4px; font-size: 8px; text-decoration: none; border: 1px solid #0e4d30;">
                                        <i class="bi bi-x-lg"></i>
                                    </button>
                                    <a href="/bands/<%= band.id %>/songs/<%= song.song.id %>" class="text-decoration-none">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h6 class="song-title text-dark mb-0">
                                                <%= song.song.title %>
                                                <% if (song.song.private) { %>
                                                    <i class="bi bi-lock text-warning ms-1" title="Private song"></i>
                                                <% } %>
                                            </h6>
                                            <div class="d-flex align-items-center gap-1">
                                                <% if (song.song.links && song.song.links.length > 0) { %>
                                                    <i class="bi bi-link-45deg text-primary" title="Has links"></i>
                                                <% } %>
                                                <% if (song.song.gigDocuments && song.song.gigDocuments.length > 0) { %>
                                                    <i class="bi bi-file-earmark-text text-success" title="Has Music Stand documents"></i>
                                                <% } %>
                                            </div>
                                        </div>
                                        <% if (song.song.artists && song.song.artists.length> 0) { %>
                                            <div class="song-artist">
                                                by <%= song.song.artists[0].artist.name %>
                                            </div>
                                        <% } %>
                                        <% if (song.song.vocalist) { %>
                                            <div class="song-vocalist">
                                                vocals: <%= song.song.vocalist.name %>
                                            </div>
                                        <% } %>
                                        <div class="d-flex align-items-center mt-2">
                                            <% if (song.song.key) { %>
                                                <span class="song-key me-2">
                                                    <%= song.song.key %>
                                                </span>
                                            <% } %>
                                            <% if (song.song.time) { %>
                                                <% const minutes=Math.floor(song.song.time / 60); %>
                                                <% const seconds=song.song.time % 60; %>
                                                <span class="song-time">
                                                    <%= minutes %>:<%= seconds.toString().padStart(2, '0') %>
                                                </span>
                                            <% } %>
                                        </div>
                                    </div>
                                </a>
                            </div>
                            <% }) %>
                    </div>
                    <% } else { %>
                        <p class="text-muted">This band doesn't have any songs yet.</p>
                        <a href="/bands/<%= band.id %>/songs" class="btn btn-primary">
                            <i class="bi bi-plus-circle"></i> Add Songs
                        </a>
                        <% } %>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Handle delete invitation buttons
        document.querySelectorAll('.delete-invitation').forEach(button => {
                button.addEventListener('click', function () {
                    const invitationId = this.getAttribute('data-invitation-id');
                    const email = this.getAttribute('data-email');

                    if (confirm(`Are you sure you want to delete the invitation to ${email}? This will allow you to send a new invitation.`)) {
                        fetch(`/bands/<%= band.id %>/invitations/${invitationId}/delete`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // Remove the invitation item from the DOM
                                    this.closest('.list-group-item').remove();

                                    // Check if there are any invitations left
                                    const remainingInvitations = document.querySelectorAll('.delete-invitation');
                                    if (remainingInvitations.length === 0) {
                                        // Replace the list with "No pending invitations" message
                                        const listGroup = document.querySelector('.list-group');
                                        if (listGroup) {
                                            listGroup.innerHTML = '<p class="text-muted small">No pending invitations</p>';
                                        }
                                    }
                                } else {
                                    alert('Error deleting invitation: ' + (data.error || 'Unknown error'));
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error deleting invitation. Please try again.');
                            });
                    }
                });
            });

            // Handle delete setlist buttons
            document.querySelectorAll('.delete-setlist').forEach(button => {
                button.addEventListener('click', function () {
                    const setlistId = this.getAttribute('data-setlist-id');
                    const setlistTitle = this.getAttribute('data-setlist-title');

                    if (confirm(`Are you sure you want to delete the setlist "${setlistTitle}"? This action cannot be undone.`)) {
                        fetch(`/setlists/${setlistId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // Remove the setlist item from the DOM
                                    this.closest('.d-flex.justify-content-between.align-items-center.py-3.border-bottom').remove();

                                    // Check if there are any setlists left
                                    const remainingSetlists = document.querySelectorAll('.delete-setlist');
                                    if (remainingSetlists.length === 0) {
                                        // Replace the list with "No setlists" message
                                        const cardBody = document.querySelector('.card-body');
                                        if (cardBody) {
                                            cardBody.innerHTML = '<p class="text-muted">No setlists yet. Create your first setlist to get started!</p>';
                                        }
                                    }
                                } else {
                                    alert('Error deleting setlist: ' + (data.error || 'Unknown error'));
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('Error deleting setlist. Please try again.');
                            });
                    }
                });
            });
        });



        // Google Doc Processing Form
        document.getElementById('googleDocForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const url = document.getElementById('googleDocUrl').value;
            const processBtn = document.getElementById('processGoogleDocBtn');
            const statusDiv = document.getElementById('processingStatus');
            const resultsDiv = document.getElementById('processingResults');
            
            // Show processing status
            processBtn.disabled = true;
            processBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> Processing...';
            statusDiv.style.display = 'block';
            resultsDiv.style.display = 'none';
            
                    // Call the backend API
        fetch('/google-docs/admin/process-google-doc', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                googleDocUrl: url,
                bandId: '<%= band.id %>'
            })
        })
        .then(response => {
            // Check if we got a redirect response
            if (response.redirected) {
                // Follow the redirect
                window.location.href = response.url;
                return;
            }
            
            // If not redirected, try to parse as JSON (fallback)
            return response.json();
        })
        .then(data => {
            // Hide status
            statusDiv.style.display = 'none';
            
            // Reset button
            processBtn.disabled = false;
            processBtn.innerHTML = '<i class="bi bi-play-circle"></i> Upload Document';
            
            if (data && data.success) {
                // Show success results with song extraction details
                let songsHtml = '';
                if (data.data.extractedSongs && data.data.extractedSongs.length > 0) {
                    songsHtml = '<div class="mt-3"><h6>Songs Found:</h6><ul class="list-group">';
                    data.data.extractedSongs.forEach(song => {
                        // Escape HTML content for safe display
                        const escapedPreview = song.contentPreview
                            .replace(/</g, '&lt;')
                            .replace(/>/g, '&gt;')
                            .replace(/"/g, '&quot;')
                            .replace(/'/g, '&#39;');
                        
                        songsHtml += `
                            <li class="list-group-item">
                                <strong>${song.title}</strong> (Song ${song.index})
                                <br><small class="text-muted">Content: ${song.contentLength} characters</small>
                                <br><small class="text-muted">Preview: ${escapedPreview}</small>
                            </li>
                        `;
                    });
                    songsHtml += '</ul></div>';
                }
                
                document.getElementById('resultsContent').innerHTML = `
                    <p><strong>Google Doc processed successfully!</strong></p>
                    <p><strong>Title:</strong> ${data.data.title || 'Untitled'}</p>
                    <p><strong>Document ID:</strong> ${data.data.documentId}</p>
                    <p><strong>Original Content:</strong> ${data.data.contentLength} characters</p>
                    <p><strong>Converted HTML:</strong> ${data.data.htmlContentLength} characters</p>
                    <p><strong>Songs Found:</strong> ${data.data.songsFound}</p>
                    ${songsHtml}
                `;
            } else if (data && data.error) {
                // Show error results
                resultsDiv.style.display = 'block';
                resultsDiv.className = 'mt-3 alert alert-danger';
                document.getElementById('resultsContent').innerHTML = `
                    <p><strong>Error processing Google Doc:</strong></p>
                    <p class="text-danger">${data.error}</p>
                `;
            }
        })
        .catch(error => {
            console.error('Error:', error);
            
            // Hide status, show error
            statusDiv.style.display = 'none';
            resultsDiv.style.display = 'block';
            resultsDiv.className = 'mt-3 alert alert-danger';
            
            // Reset button
            processBtn.disabled = false;
            processBtn.innerHTML = '<i class="bi bi-play-circle"></i> Upload Document';
            
            document.getElementById('resultsContent').innerHTML = `
                <p><strong>Error processing Google Doc:</strong></p>
                <p class="text-danger">Network error. Please try again.</p>
            `;
        });
        });

        // Clear Google Doc Form
        document.getElementById('clearGoogleDocForm').addEventListener('click', function() {
            document.getElementById('googleDocUrl').value = '';
            document.getElementById('processingStatus').style.display = 'none';
            document.getElementById('processingResults').style.display = 'none';
        });

        // Band Meeting Functions
        let currentMeetingLink = null;

        async function startInstantMeeting() {
            try {
                const response = await fetch(`/bands/<%= band.id %>/start-meeting`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                if (response.ok) {
                    const data = await response.json();
                    currentMeetingLink = data.meetingLink;
                    
                    // Show active meeting
                    document.getElementById('activeMeeting').style.display = 'block';
                    
                    // Send notifications to band members
                    await notifyBandMembers(data.meetingLink);
                    
                    // Show success message
                    showNotification('Meeting started! All band members have been notified.', 'success');
                } else {
                    throw new Error('Failed to start meeting');
                }
            } catch (error) {
                console.error('Error starting meeting:', error);
                showNotification('Failed to start meeting. Please try again.', 'error');
            }
        }

        function joinMeeting() {
            if (currentMeetingLink) {
                window.open(currentMeetingLink, '_blank');
            }
        }

        function scheduleMeeting() {
            // For now, just show a message about scheduling
            showNotification('Scheduled meetings coming soon! Use "Start Instant Meeting" for now.', 'info');
        }

        async function notifyBandMembers(meetingLink) {
            try {
                const response = await fetch(`/bands/<%= band.id %>/notify-meeting`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ meetingLink })
                });

                if (!response.ok) {
                    console.error('Failed to send notifications');
                }
            } catch (error) {
                console.error('Error sending notifications:', error);
            }
        }

        function showNotification(message, type = 'info') {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `alert alert-${type === 'error' ? 'danger' : type} alert-dismissible fade show position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }

        // Request notification permission on page load
        if ('Notification' in window && Notification.permission === 'default') {
            Notification.requestPermission();
        }
    </script>

<!-- New Setlist Modal -->
<div class="modal fade" id="newSetlistModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Setlist</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form action="/bands/<%= band.id %>/setlists" method="POST">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="title" class="form-label">Setlist Title</label>
                        <input type="text" class="form-control" id="title" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="date" class="form-label">Date (optional)</label>
                        <input type="date" class="form-control" id="date" name="date">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Setlist</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- New Album Modal -->
<div class="modal fade" id="newAlbumModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Album</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form action="/bands/<%= band.id %>/albums" method="POST">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="albumTitle" class="form-label">Album Title</label>
                        <input type="text" class="form-control" id="albumTitle" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="releaseDate" class="form-label">Release Date & Time (optional)</label>
                        <input type="datetime-local" class="form-control" id="releaseDate" name="releaseDate">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Create Album</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add More Songs Section - Show at bottom when band has songs -->
<% if (bandSongs && bandSongs.length > 0) { %>
    <%- include('partials/onboarding-panels', { band: band, isBottom: true }) %>
<% } %>

<script>
// Initialize tooltips
document.addEventListener('DOMContentLoaded', function() {
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });

    // Handle remove song buttons
    const removeSongButtons = document.querySelectorAll('.remove-song-btn');
    removeSongButtons.forEach(button => {
        button.addEventListener('click', async function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            const songId = this.getAttribute('data-song-id');
            const songTitle = this.getAttribute('data-song-title');
            const bandId = '<%= band.id %>';
            
            if (!confirm(`Are you sure you want to remove "${songTitle}" from this band's songs?`)) {
                return;
            }
            
            try {
                const response = await fetch(`/bands/${bandId}/songs/${songId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        // Remove the song card from the DOM - go up to the col-md-4 div
                        const songCard = this.closest('.col-md-4');
                        if (songCard) {
                            songCard.remove();
                        }
                        
                        // Show a success message
                        const alertDiv = document.createElement('div');
                        alertDiv.className = 'alert alert-success alert-dismissible fade show';
                        alertDiv.innerHTML = `
                            <i class="bi bi-check-circle"></i> Song removed successfully
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        `;
                        document.querySelector('.band-songs').insertBefore(alertDiv, document.querySelector('.band-songs .row'));
                    } else {
                        alert('Failed to remove song');
                    }
                } else {
                    const error = await response.json();
                    alert(`Error: ${error.error || 'Failed to remove song'}`);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to remove song');
            }
        });
    });
});
</script>
