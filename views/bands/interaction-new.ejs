<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <a href="/bands/<%= bandId %>" class="btn btn-outline-secondary me-2">
                    <i class="bi bi-arrow-left"></i> Back to Band
                </a>
                <a href="/bands/<%= bandId %>/venues" class="btn btn-outline-secondary">
                    <i class="bi bi-building"></i> Back to Band Venues
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Left Column: Opportunity Info -->
    <div class="col-lg-3">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-target"></i> Opportunity Details
                </h5>
            </div>
            <div class="card-body">
                <h6 class="card-title"><%= opportunity.name %></h6>
                <p class="card-text">
                    <strong>Venue:</strong> <a href="/bands/<%= opportunity.band.id %>/venues/<%= opportunity.venue.id %>" class="text-decoration-none"><%= opportunity.venue.name %></a><br>
                    <strong>Status:</strong> 
                    <span class="badge bg-<%= getOpportunityStatusColor(opportunity.status) %>">
                        <%= opportunity.status.replace('_', ' ') %>
                    </span><br>
                    <% if (opportunity.gigDate) { %>
                        <strong>Date:</strong> <%= new Date(opportunity.gigDate).toLocaleDateString() %><br>
                    <% } %>
                    <% if (opportunity.offerValue) { %>
                        <strong>Offer:</strong> $<%= opportunity.offerValue %><br>
                    <% } %>
                    <strong>Created:</strong> <%= new Date(opportunity.createdAt).toLocaleDateString() %>
                </p>
                
                <% if (opportunity.notes && opportunity.notes.trim()) { %>
                    <div class="mt-3 p-2 opportunity-notes rounded">
                        <div class="text-muted small"><%= opportunity.notes %></div>
                    </div>
                <% } %>
                
                <% if (opportunity.venue.contacts && opportunity.venue.contacts.length > 0) { %>
                    <hr>
                    <h6>Venue Contacts</h6>
                    <% opportunity.venue.contacts.forEach(contact => { %>
                        <div class="small mb-1">
                            <strong><%= contact.contactType.displayName %>:</strong>
                            <% if (contact.url && contact.url !== 'mailto:{contact}') { %>
                                <a href="<%= contact.url.replace('{contact}', contact.value) %>" target="_blank">
                                    <%= contact.value %>
                                </a>
                            <% } else { %>
                                <%= contact.value %>
                            <% } %>
                        </div>
                    <% }) %>
                <% } %>
            </div>
        </div>
    </div>
    
    <!-- Middle Column: New Interaction Form -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header">
                <h4 class="mb-0">
                    <i class="bi bi-chat-dots"></i> New Interaction
                </h4>
                <small class="text-muted">
                    <%= opportunity.name %> at <%= opportunity.venue.name %>
                </small>
            </div>
            <div class="card-body">
                <form action="/bands/<%= bandId %>/opportunities/<%= opportunity.id %>/interactions" method="POST">
                    <input type="hidden" name="type" id="interactionTypeInput" value="<%= interactionType %>">
                    
                    <!-- Instructions -->
                    <div class="mb-3">
                        <div class="alert alert-info dark-mode-instructions">
                            <i class="bi bi-info-circle me-2"></i>
                            Here we'll help you craft an interaction and connect with the venue. Be sure to provide a summary or transcript of the venue's response in the Venue Response field.
                        </div>
                    </div>


                    <% if (interactionType === 'PHONE_CALL') { %>
                        <div class="mb-3">
                            <label class="form-label">Venue Phone</label>
                            <% 
                                const phoneContact = opportunity.venue.contacts.find(contact => contact.contactType.name === 'PHONE_CALL');
                            %>
                            <% if (phoneContact) { %>
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle"></i> 
                                    <strong>Ready to call?</strong> 
                                    <a href="tel:<%= phoneContact.value %>" class="btn btn-primary btn-sm ms-2">
                                        <i class="bi bi-telephone"></i> Call Now
                                    </a>
                                </div>
                            <% } else { %>
                                <div class="alert alert-warning">
                                    <i class="bi bi-exclamation-triangle"></i> 
                                    No phone contact found for this venue.
                                </div>
                            <% } %>
                        </div>
                    <% } %>

                    <!-- Venue Response Context -->
                    <div class="mb-3">
                        <label for="previousResponse" class="form-label">Previous Venue Response</label>
                        <textarea class="form-control" id="previousResponse" name="previousResponse" rows="3"><%= opportunity.interactions && opportunity.interactions.length > 0 ? opportunity.interactions[0].notes || '' : '' %></textarea>
                        <% if (opportunity.interactions && opportunity.interactions.length > 0 && opportunity.interactions[0].notes) { %>
                            <div class="form-text text-info">
                                <i class="bi bi-info-circle"></i> Pre-populated with notes from the last interaction
                            </div>
                        <% } %>
                    </div>

                    <!-- Purpose of Interaction -->
                    <div class="mb-3">
                        <label for="outcome" class="form-label">Purpose of Interaction</label>
                        <select class="form-select" id="outcome" name="outcome" required>
                            <option value="">Purpose</option>
                <option value="FIRST_CONTACT">First Contact - Made initial contact</option>
                <option value="REBOOKING">Initiate Rebooking - Requesting another gig</option>
                <option value="FOLLOWING_UP">Following Up - Continuing conversation</option>
                <option value="SCHEDULING">Scheduling - Working out dates</option>
                <option value="NEGOTIATING">Negotiating - Discussing terms</option>
                <option value="AWAITING_CONFIRMATION">Awaiting Confirmation - Waiting for final approval</option>
                <option value="BOOKED">Confirm Booking - Accepting the gig offer</option>
                <option value="DETAILS">Details - Working out gig specifics</option>
                <option value="THANKING">Thanking - Following up with gratitude</option>
                <option value="DECLINED">Declined - They said no</option>
                <option value="REJECTED">Rejected - Not interested</option>
                <option value="NO_RESPONSE">No Response - Haven't heard back</option>
                <option value="CANCELLED">Cancelled - Gig was cancelled</option>
                <option value="NOT_INTERESTED">Not Interested - We declined</option>
                        </select>
                    </div>

                    <!-- Gig Date (appears when BOOKED is selected) -->
                    <div id="gig-date-field" class="mb-3" style="display: none;">
                        <label for="gigDate" class="form-label">Gig Date <span class="text-danger">*</span></label>
                        <input type="date" class="form-control" id="gigDate" name="gigDate">
                        <div class="form-text">When is this gig scheduled?</div>
                    </div>

                    <!-- Interaction Type Selection -->
                    <div class="mb-3">
                        <label for="interactionType" class="form-label">How will you communicate?</label>
                        <select class="form-select" id="interactionType" name="interactionType" onchange="updateInteractionType()">
                            <option value="">Select communication method...</option>
                            <% if (opportunity.venue.contacts && opportunity.venue.contacts.length > 0) { %>
                                <% opportunity.venue.contacts.forEach(contact => { %>
                                    <option value="<%= contact.contactType.name %>_<%= contact.id %>" <%= interactionType === contact.contactType.name + '_' + contact.id ? 'selected' : '' %>>
                                        <%= contact.contactType.displayName %><% if (contact.label) { %> (<%= contact.label %>)<% } %>
                                    </option>
                                <% }); %>
                            <% } %>
                            <!-- Add phone options if venue has a phone number -->
                            <% if (opportunity.venue.phone && opportunity.venue.phone.trim()) { %>
                                <option value="PHONE_CALL_VENUE" <%= interactionType === 'PHONE_CALL_VENUE' ? 'selected' : '' %>>Phone Call (Venue)</option>
                                <option value="TEXT_MESSAGE" <%= interactionType === 'TEXT_MESSAGE' ? 'selected' : '' %>>Text Message</option>
                            <% } %>
                            <!-- Always include NOTE as an option -->
                            <option value="NOTE" <%= interactionType === 'NOTE' ? 'selected' : '' %>>Note</option>
                            <!-- Always include IN_PERSON as an option -->
                            <option value="IN_PERSON" <%= interactionType === 'IN_PERSON' ? 'selected' : '' %>>In-Person Meeting</option>
                            <!-- Always include OTHER as an option -->
                            <option value="OTHER" <%= interactionType === 'OTHER' ? 'selected' : '' %>>Other</option>
                        </select>
                    </div>

                    <!-- Your Response Message -->
                    <div class="mb-3">
                        <label for="messageContent" class="form-label">Your Response Message</label>
                        <textarea class="form-control" id="messageContent" name="messageContent" rows="25"></textarea>
                        <div class="d-flex justify-content-between align-items-center mt-2">
                            <div class="form-text">Write the message you sent or plan to send to the venue.</div>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-outline-primary btn-sm" id="aiSuggestBtn">
                                    <i class="bi bi-magic"></i> AI Suggestions
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm" id="copyBtn" title="Copy text">
                                    <i class="bi bi-clipboard"></i> Copy
                                </button>
                            </div>
                        </div>
                        
                        <!-- Additional Instructions for AI Refinement -->
                        <div id="aiRefinementSection" class="mt-3" style="display: none;">
                            <label for="additionalInstructions" class="form-label">Refine AI Message then click AI Suggestions again.</label>
                            <input type="text" class="form-control" id="additionalInstructions" 
                                   placeholder="e.g., make it more casual, add our March 15th show date, keep it shorter">
                            <div class="form-text">Add specific instructions to refine the AI-generated message.</div>
                        </div>
                    </div>

                    <!-- Type-specific tools and links -->
                    <div id="interaction-tools">
                        <!-- Facebook Messenger Tool -->
                        <div id="facebook-tool" class="mb-3" style="display: none;">
                            <div id="facebook-tool-content">
                                <!-- This will be populated by JavaScript -->
                            </div>
                        </div>

                        <!-- Email Tool -->
                        <div id="email-tool" class="mb-3" style="display: none;">
                            <% 
                                const emailContacts = opportunity.venue.contacts.filter(contact => contact.contactType.name === 'EMAIL');
                            %>
                            <% if (emailContacts.length > 0) { %>
                                <div class="mb-2">
                                    <label for="emailSubject" class="form-label">Email Subject</label>
                                    <input type="text" class="form-control" id="emailSubject" placeholder="Enter email subject line">
                                </div>
                                <div class="text-center">
                                    <% emailContacts.forEach((contact, index) => { %>
                                        <a href="#" 
                                           class="btn btn-primary btn-sm email-btn <%= index > 0 ? 'ms-1' : '' %>"
                                           data-email="<%= contact.value %>"
                                           data-label="<%= contact.label ? contact.label + ' Email' : 'Email ' + (index + 1) %>"
                                           onclick="openEmailWithContent(this); return false;">
                                            <i class="bi bi-envelope"></i> 
                                            <%= contact.label ? contact.label + ' Email' : 'Email ' + (index + 1) %>
                                        </a>
                                    <% }); %>
                                </div>
                            <% } else { %>
                                <div class="text-center text-muted">
                                    <i class="bi bi-exclamation-triangle"></i> 
                                    No email contact found for this venue.
                                </div>
                            <% } %>
                        </div>

                        <!-- Phone Tool -->
                        <div id="phone-tool" class="mb-3" style="display: none;">
                            <div id="phone-tool-content">
                                <!-- This will be populated by JavaScript -->
                            </div>
                        </div>

                        <!-- Text Message Tool -->
                        <div id="text-tool" class="mb-3" style="display: none;">
                            <% if (opportunity.venue.phone && opportunity.venue.phone.trim()) { %>
                                <div class="alert alert-info dark-mode-text-tool">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-chat-dots me-2"></i>
                                        <div>
                                            <strong>Text Message</strong><br>
                                            <small><%= opportunity.venue.phone %></small>
                                        </div>
                                        <div class="ms-auto">
                                            <a href="#" 
                                               class="btn btn-primary btn-sm"
                                               data-phone="<%= opportunity.venue.phone %>"
                                               onclick="openSMSWithContent(this); return false;">
                                                <i class="bi bi-chat-dots"></i> Text
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="text-center text-muted">
                                    <i class="bi bi-exclamation-triangle"></i> 
                                    No phone number found for this venue.
                                </div>
                            <% } %>
                        </div>

                        <!-- Website Contact Tool -->
                        <div id="website-tool" class="mb-3" style="display: none;">
                            <% 
                                const websiteContact = opportunity.venue.contacts?.find(contact => contact.contactType?.name === 'WEBSITE');
                            %>
                            <% if (websiteContact && websiteContact.url) { %>
                                <div class="alert alert-info">
                                    <div class="d-flex align-items-center">
                                        <i class="bi bi-globe me-2"></i>
                                        <div>
                                            <strong>Contact Form</strong><br>
                                            <small>Click to open the contact form</small>
                                        </div>
                                        <div class="ms-auto">
                                            <a href="<%= websiteContact.url %>" target="_blank" class="btn btn-primary btn-sm">
                                                <i class="bi bi-globe"></i> Open Contact Form
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="text-center text-muted">
                                    <i class="bi bi-exclamation-triangle"></i> 
                                    No contact form found for this venue.
                                </div>
                            <% } %>
                        </div>
                    </div>



                    <!-- Interaction Date -->
                    <div class="mb-3">
                        <label for="interactionDate" class="form-label">When did this interaction happen?</label>
                        <input type="datetime-local" class="form-control" id="interactionDate" name="interactionDate" 
                               value="<%= new Date().toISOString().slice(0, 16) %>" required>
                    </div>

                    <!-- Notes -->
                    <div class="mb-3">
                        <label for="notes" class="form-label">Immediate response?</label>
                        <textarea class="form-control" id="notes" name="notes" rows="4"></textarea>
                    </div>


                    <!-- Next Steps -->
                    <div class="mb-4">
                        <label for="nextSteps" class="form-label">Next Steps</label>
                        <textarea class="form-control" id="nextSteps" name="nextSteps" rows="3"></textarea>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="/bands/<%= bandId %>/venues" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle"></i> Log Interaction
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <!-- Right Column: Previous Interactions -->
    <div class="col-lg-3">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-clock-history"></i> Previous Interactions
                </h5>
                <small class="text-muted">
                    <% if (opportunity.interactions && opportunity.interactions.length > 0) { %>
                        <%= opportunity.interactions.length %> interaction<%= opportunity.interactions.length === 1 ? '' : 's' %>
                    <% } else { %>
                        No previous interactions
                    <% } %>
                </small>
            </div>
            <div class="card-body">
                <% if (opportunity.interactions && opportunity.interactions.length > 0) { %>
                    <div class="timeline">
                        <% opportunity.interactions.forEach((interaction, index) => { %>
                            <div class="timeline-item <%= index === 0 ? 'latest' : '' %>">
                                <div class="timeline-content" onclick="window.open('/bands/<%= bandId %>/opportunities/<%= opportunity.id %>/interactions/<%= interaction.id %>', '_blank')" style="cursor: pointer; padding: 12px;">
                                    <!-- Date - Type -->
                                    <div class="small text-muted mb-2">
                                        <%= new Date(interaction.interactionDate).toLocaleDateString() %> - <%= interaction.type %>
                                    </div>
                                    
                                    <!-- Status (centered) -->
                                    <% if (interaction.outcome) { %>
                                        <div class="text-center mb-2">
                                            <span class="badge bg-<%= getStatusColor(interaction.outcome) %> small">
                                                <%= interaction.outcome %>
                                            </span>
                                        </div>
                                    <% } %>
                                    
                                    <!-- Client said -->
                                    <% if (interaction.previousResponse) { %>
                                        <div class="mb-2">
                                            <div class="small text-muted">Client said:</div>
                                            <div class="small text-muted fst-italic">
                                                <%= interaction.previousResponse.length > 80 ? interaction.previousResponse.substring(0, 80) + '...' : interaction.previousResponse %>
                                            </div>
                                        </div>
                                    <% } %>
                                    
                                    <!-- Our response -->
                                    <% if (interaction.messageContent) { %>
                                        <div class="mb-2">
                                            <div class="small text-muted">Our response:</div>
                                            <div class="small text-muted">
                                                <%= interaction.messageContent.length > 80 ? interaction.messageContent.substring(0, 80) + '...' : interaction.messageContent %>
                                            </div>
                                        </div>
                                    <% } %>
                                    
                                    <!-- By user -->
                                    <div class="small text-muted text-end">
                                        by <%= interaction.user.username %>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                <% } else { %>
                    <div class="text-center text-muted py-4">
                        <i class="bi bi-chat-dots display-4"></i>
                        <p class="mt-2">No previous interactions yet.</p>
                        <p class="small">This will be the first interaction for this opportunity.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<%
// Helper function to get status color for outcomes
function getStatusColor(outcome) {
    if (!outcome) return 'secondary';
    
    const colors = {
        'POSITIVE': 'success',
        'INTERESTED': 'success',
        'BOOKED': 'success',
        'CONFIRMED': 'success',
        'ACCEPTED': 'success',
        
        'FOLLOW_UP': 'warning',
        'COUNTER_OFFER': 'warning',
        'SCHEDULING': 'warning',
        'NEED_CONFIRMATION': 'warning',
        'PENDING_CONFIRMATION': 'warning',
        'AWAITING_CONFIRMATION': 'warning',
        
        'DECLINED': 'danger',
        'REJECTED': 'danger',
        'NO_RESPONSE': 'danger',
        'CANCELLED': 'danger',
        'NOT_INTERESTED': 'danger',
        
        'CONTACTED': 'info'
    };
    
    return colors[outcome] || 'secondary';
}

// Helper function to get status color for opportunity status
function getOpportunityStatusColor(status) {
    const colors = {
        'PROSPECTING': 'secondary',
        'CONTACTED': 'info',
        'NEGOTIATING': 'warning',
        'NEED_CONFIRMATION': 'warning',
        'BOOKED': 'success',
        'ARCHIVED': 'danger'
    };
    
    return colors[status] || 'secondary';
}
%>

<script>
// Set current time as default
document.addEventListener('DOMContentLoaded', function() {
    const now = new Date();
    const localDateTime = new Date(now.getTime() - now.getTimezoneOffset() * 60000).toISOString().slice(0, 16);
    document.getElementById('interactionDate').value = localDateTime;
    
    // Show appropriate tools on page load
    updateTypeSpecificTools();
    
    // Set up outcome change handler
    const outcomeSelect = document.getElementById('outcome');
    if (outcomeSelect) {
        outcomeSelect.addEventListener('change', handleOutcomeChange);
        // Check initial state
        handleOutcomeChange();
        
        // Set initial message content rows
        updateMessageContentRows();
    }
});

// Update interaction type when selection changes
function updateInteractionType() {
    const select = document.getElementById('interactionType');
    const hiddenInput = document.getElementById('interactionTypeInput');
    hiddenInput.value = select.value;
    
    // Update type-specific tools visibility
    updateTypeSpecificTools();
    
    // Auto-populate message content for email contacts on first contact or rebooking
    autoPopulateMessageContent();
    
    // Update message content rows based on interaction type
    updateMessageContentRows();
}


// Update type-specific tools visibility
function updateTypeSpecificTools() {
    const selectedType = document.getElementById('interactionType').value;
    
    // Hide all tools first
    const allTools = document.querySelectorAll('#interaction-tools > div');
    allTools.forEach(tool => {
        tool.style.display = 'none';
    });
    
    // Show the appropriate tool based on selected type
    if (selectedType.startsWith('FACEBOOK_MESSAGE_')) {
        const facebookTool = document.getElementById('facebook-tool');
        if (facebookTool) {
            facebookTool.style.display = 'block';
            updateFacebookToolContent(selectedType);
        }
    } else if (selectedType.startsWith('EMAIL_')) {
        const emailTool = document.getElementById('email-tool');
        if (emailTool) emailTool.style.display = 'block';
        updateEmailSubject();
    } else if (selectedType.startsWith('PHONE_CALL_')) {
        const phoneTool = document.getElementById('phone-tool');
        if (phoneTool) {
            phoneTool.style.display = 'block';
            updatePhoneToolContent(selectedType);
        }
    } else if (selectedType === 'TEXT_MESSAGE') {
        const textTool = document.getElementById('text-tool');
        if (textTool) textTool.style.display = 'block';
    } else if (selectedType.startsWith('WEBSITE_')) {
        const websiteTool = document.getElementById('website-tool');
        if (websiteTool) websiteTool.style.display = 'block';
    }
    // Add more types here as needed
}

// Handle outcome change to show/hide gig date field
function handleOutcomeChange() {
    const outcomeSelect = document.getElementById('outcome');
    const gigDateField = document.getElementById('gig-date-field');
    const gigDateInput = document.getElementById('gigDate');
    
    if (outcomeSelect.value === 'BOOKED') {
        gigDateField.style.display = 'block';
        gigDateInput.required = true;
    } else {
        gigDateField.style.display = 'none';
        gigDateInput.required = false;
        gigDateInput.value = ''; // Clear the value when hidden
    }
    
    // Auto-populate message content when outcome changes
    autoPopulateMessageContent();
    
    // Update email subject if email tool is visible
    const emailTool = document.getElementById('email-tool');
    if (emailTool && emailTool.style.display !== 'none') {
        updateEmailSubject();
    }
}

// Auto-populate message content with booking pitch for email contacts on first contact or rebooking
function autoPopulateMessageContent() {
    const outcomeSelect = document.getElementById('outcome');
    const interactionTypeSelect = document.getElementById('interactionType');
    const messageContentTextarea = document.getElementById('messageContent');
    
    // Only auto-populate if no content exists and conditions are met
    if (messageContentTextarea.value.trim() === '') {
        const outcome = outcomeSelect.value;
        const interactionType = interactionTypeSelect.value;
        
        // Check if it's first contact or rebooking
        if (outcome === 'FIRST_CONTACT' || outcome === 'REBOOKING') {
            // Check if it's an email contact
            if (interactionType.startsWith('EMAIL_') || interactionType === 'EMAIL') {
                // Get the booking pitch from the band info
                <% if (opportunity.band.bookingPitch) { %>
                    messageContentTextarea.value = <%- JSON.stringify(opportunity.band.bookingPitch) %>;
                <% } %>
            }
        }
    }
}

function updateFacebookToolContent(selectedType) {
    const facebookToolContent = document.getElementById('facebook-tool-content');
    
    if (!selectedType || !selectedType.startsWith('FACEBOOK_MESSAGE_')) {
        facebookToolContent.innerHTML = '<div class="text-center text-muted"><i class="bi bi-exclamation-triangle"></i> No Facebook Messenger contact found.</div>';
        return;
    }
    
    const contactId = selectedType.split('_')[2]; // FACEBOOK_MESSAGE_15 -> 15
    
    // Find the contact in the venue contacts array
    <% if (opportunity.venue.contacts && opportunity.venue.contacts.length > 0) { %>
        <% opportunity.venue.contacts.forEach(contact => { %>
            if ('<%= contact.id %>' === contactId && '<%= contact.contactType.name %>' === 'FACEBOOK_MESSAGE') {
                <% if (contact.url) { %>
                    facebookToolContent.innerHTML = 
                        '<div class="alert alert-info">' +
                            '<div class="d-flex align-items-center">' +
                                '<i class="bi bi-messenger me-2"></i>' +
                                '<div>' +
                                    '<strong>Facebook Messenger</strong><br>' +
                                    '<small>Copy your message below, then click to open Messenger</small>' +
                                '</div>' +
                                '<div class="ms-auto d-flex gap-2">' +
                                    '<button type="button" class="btn btn-outline-secondary btn-sm" onclick="copyMessageContent()">' +
                                        '<i class="bi bi-clipboard"></i> Copy' +
                                    '</button>' +
                                    '<a href="<%= contact.url %>" target="_blank" class="btn btn-primary btn-sm">' +
                                        '<i class="bi bi-messenger"></i> Open Messenger' +
                                    '</a>' +
                                '</div>' +
                            '</div>' +
                        '</div>';
                <% } else { %>
                    facebookToolContent.innerHTML = '<div class="text-center text-muted"><i class="bi bi-exclamation-triangle"></i> No Facebook Messenger URL available.</div>';
                <% } %>
                return;
            }
        <% }); %>
    <% } %>
    
    // Fallback if contact not found
    facebookToolContent.innerHTML = '<div class="text-center text-muted"><i class="bi bi-exclamation-triangle"></i> No Facebook Messenger contact found.</div>';
}

// Update message content rows based on interaction type
function updateMessageContentRows() {
    const selectedType = document.getElementById('interactionType').value;
    const messageContentTextarea = document.getElementById('messageContent');
    
    // Define row counts for different interaction types
    const rowCounts = {
        'LINKEDIN_MESSAGE': 10,
        'TWITTER_MESSAGE': 8,
        'WHATSAPP': 8,
        'TELEGRAM': 8,
        'DISCORD': 8,
        'FACEBOOK_MESSAGE': 12,
        'EMAIL': 20,
        'PHONE_CALL': 20,
        'TEXT': 6,
        'IN_PERSON': 20,
        'NOTE': 20,
        'WEBSITE_CONTACT_FORM': 15,
        'WEBSITE_LIVE_CHAT': 8,
        'INSTAGRAM_MESSAGE': 8
    };
    
    // Get the base interaction type (remove the _ID suffix if present)
    const baseType = selectedType.split('_').slice(0, -1).join('_');
    
    // Set rows based on interaction type, default to 25 if not found
    const rows = rowCounts[baseType] || rowCounts[selectedType] || 25;
    messageContentTextarea.rows = rows;
}

// CSS for spinning icon
const style = document.createElement('style');
style.textContent = `
    .spin {
        animation: spin 1s linear infinite;
    }
    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
`;
document.head.appendChild(style);

// AI Suggestion functionality
document.addEventListener('DOMContentLoaded', function() {
    const aiSuggestBtn = document.getElementById('aiSuggestBtn');
    const copyBtn = document.getElementById('copyBtn');
    const messageContentTextarea = document.getElementById('messageContent');
    const previousResponseTextarea = document.getElementById('previousResponse');
    
    
    aiSuggestBtn.addEventListener('click', async function() {
        const previousResponse = previousResponseTextarea.value.trim();
        const currentMessage = messageContentTextarea.value.trim();
        
        // Previous response is now optional - AI can generate suggestions without it
        
        // Show loading state
        const originalText = aiSuggestBtn.innerHTML;
        aiSuggestBtn.innerHTML = '<i class="bi bi-arrow-clockwise spin"></i> Generating...';
        aiSuggestBtn.disabled = true;
        
        try {
            const response = await fetch(`/bands/<%= opportunity.band.id %>/opportunities/<%= opportunity.id %>/ai-suggestions`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    previousResponse: previousResponse,
                    currentMessage: currentMessage,
                    interactionType: document.getElementById('outcome').value,
                    contactType: document.getElementById('interactionType').value,
                    bandName: '<%= opportunity.band.name %>',
                    venueName: '<%= opportunity.venue.name %>',
                    bandInfo: {
                        bookingPitch: <%- JSON.stringify(opportunity.band.bookingPitch || "") %>,
                        websiteUrl: '<%= opportunity.band.websiteUrl || "" %>',
                        contactName: '<%= opportunity.band.contactName || "" %>'
                    },
                    userInfo: {
                        name: '<%= currentUser.username %>',
                        email: '<%= currentUser.email %>'
                    },
                    contactInfo: getSelectedContactInfo(),
                    additionalInstructions: document.getElementById('additionalInstructions').value || ''
                })
            });
            
            if (!response.ok) {
                throw new Error('Failed to get AI suggestions');
            }
            
            const data = await response.json();
            
            if (data.success && data.suggestion) {
                messageContentTextarea.value = data.suggestion;
                messageContentTextarea.focus();
                
                // Show the AI refinement section after first successful generation
                const refinementSection = document.getElementById('aiRefinementSection');
                refinementSection.style.display = 'block';
            } else {
                alert('Failed to generate AI suggestions. Please try again.');
            }
            
        } catch (error) {
            console.error('AI suggestion error:', error);
            alert('Error generating AI suggestions. Please try again.');
        } finally {
            // Restore button state
            aiSuggestBtn.innerHTML = originalText;
            aiSuggestBtn.disabled = false;
        }
    });
    
    // Copy button functionality
    copyBtn.addEventListener('click', async function() {
        const textToCopy = messageContentTextarea.value;
        
        if (!textToCopy.trim()) {
            alert('No text to copy!');
            return;
        }
        
        try {
            await navigator.clipboard.writeText(textToCopy);
            
            // Show success feedback
            const originalText = copyBtn.innerHTML;
            copyBtn.innerHTML = '<i class="bi bi-check"></i> Copied!';
            copyBtn.classList.remove('btn-outline-secondary');
            copyBtn.classList.add('btn-success');
            
            // Restore button after 2 seconds
            setTimeout(() => {
                copyBtn.innerHTML = originalText;
                copyBtn.classList.remove('btn-success');
                copyBtn.classList.add('btn-outline-secondary');
            }, 2000);
            
        } catch (error) {
            console.error('Copy failed:', error);
            alert('Failed to copy text. Please select and copy manually.');
        }
    });
});

// Phone contact data for JavaScript
const phoneContacts = [
    <% if (opportunity.venue.phone && opportunity.venue.phone.trim()) { %>
        {
            id: 'PHONE_CALL_VENUE',
            label: 'Phone Number',
            value: '<%= opportunity.venue.phone %>',
            isVenuePhone: true
        },
    <% } %>
    <% if (opportunity.venue.contacts) { %>
        <% opportunity.venue.contacts.filter(c => c.contactType.name === 'PHONE_CALL').forEach(contact => { %>
            {
                id: 'PHONE_CALL_<%= contact.id %>',
                label: '<%= contact.label || "Phone Number" %>',
                value: '<%= contact.value %>',
                isVenuePhone: false
            },
        <% }); %>
    <% } %>
];

function updatePhoneToolContent(selectedType) {
    const phoneToolContent = document.getElementById('phone-tool-content');
    
    if (!selectedType || !selectedType.startsWith('PHONE_CALL_')) {
        phoneToolContent.innerHTML = '<div class="text-center text-muted"><i class="bi bi-exclamation-triangle"></i> No phone number found for this venue.</div>';
        return;
    }
    
    const selectedContact = phoneContacts.find(contact => contact.id === selectedType);
    
    if (selectedContact) {
        phoneToolContent.innerHTML = 
            '<div class="alert alert-info dark-mode-phone-tool">' +
                '<div class="d-flex align-items-center">' +
                    '<i class="bi bi-telephone me-2"></i>' +
                    '<div>' +
                        '<strong>' + selectedContact.label + '</strong><br>' +
                        '<small>' + selectedContact.value + '</small>' +
                    '</div>' +
                    '<div class="ms-auto">' +
                        '<a href="tel:' + selectedContact.value + '" class="btn btn-primary btn-sm">' +
                            '<i class="bi bi-telephone"></i> Call' +
                        '</a>' +
                    '</div>' +
                '</div>' +
            '</div>';
    } else {
        phoneToolContent.innerHTML = '<div class="text-center text-muted"><i class="bi bi-exclamation-triangle"></i> No phone number found for this venue.</div>';
    }
}

// Update email subject based on interaction type and outcome
function updateEmailSubject() {
    const subjectField = document.getElementById('emailSubject');
    const outcome = document.getElementById('outcome').value;
    const bandName = '<%= opportunity.band.name %>';
    const venueName = '<%= opportunity.venue.name %>';
    
    if (!subjectField) return;
    
    let defaultSubject = '';
    
    switch(outcome) {
        case 'FIRST_CONTACT':
            defaultSubject = `Booking Inquiry - ${bandName}`;
            break;
        case 'FOLLOWING_UP':
            defaultSubject = `Following up - ${bandName} booking`;
            break;
        case 'SCHEDULING':
            defaultSubject = `Scheduling - ${bandName} at ${venueName}`;
            break;
        case 'NEGOTIATING':
            defaultSubject = `Booking details - ${bandName}`;
            break;
        case 'AWAITING_CONFIRMATION':
            defaultSubject = `Confirmation needed - ${bandName}`;
            break;
        case 'BOOKED':
            defaultSubject = `Gig confirmed - ${bandName}`;
            break;
        case 'DETAILS':
            defaultSubject = `Gig details - ${bandName}`;
            break;
        case 'THANKING':
            defaultSubject = `Thank you - ${bandName}`;
            break;
        case 'REBOOKING':
            defaultSubject = `Rebooking inquiry - ${bandName}`;
            break;
        default:
            defaultSubject = `Booking inquiry - ${bandName}`;
    }
    
    // Only set if field is empty
    if (!subjectField.value) {
        subjectField.value = defaultSubject;
    }
}

// Open email with pre-populated content
function openEmailWithContent(button) {
    const email = button.getAttribute('data-email');
    const messageContent = document.getElementById('messageContent').value;
    const subject = document.getElementById('emailSubject').value;
    
    // URL encode the content for the mailto link
    const encodedContent = encodeURIComponent(messageContent);
    const encodedSubject = encodeURIComponent(subject);
    
    // Create mailto link with subject and body
    const mailtoLink = `mailto:${email}?subject=${encodedSubject}&body=${encodedContent}`;
    
    // Open the email client
    window.open(mailtoLink, '_blank');
}

// Open SMS with pre-populated content
function openSMSWithContent(button) {
    const phone = button.getAttribute('data-phone');
    const messageContent = document.getElementById('messageContent').value;
    
    // URL encode the message content for the SMS link
    const encodedContent = encodeURIComponent(messageContent);
    
    // Create SMS link with body
    const smsLink = `sms:${phone}?body=${encodedContent}`;
    
    // Open the messages app
    window.open(smsLink, '_blank');
}

// Copy message content to clipboard
function copyMessageContent() {
    const messageContent = document.getElementById('messageContent');
    messageContent.select();
    messageContent.setSelectionRange(0, 99999); // For mobile devices
    
    try {
        document.execCommand('copy');
        // Show temporary feedback
        const button = event.target.closest('button');
        const originalText = button.innerHTML;
        button.innerHTML = '<i class="bi bi-check"></i> Copied!';
        button.classList.remove('btn-outline-secondary');
        button.classList.add('btn-success');
        
        setTimeout(() => {
            button.innerHTML = originalText;
            button.classList.remove('btn-success');
            button.classList.add('btn-outline-secondary');
        }, 2000);
    } catch (err) {
        // Fallback for modern browsers
        navigator.clipboard.writeText(messageContent.value).then(() => {
            const button = event.target.closest('button');
            const originalText = button.innerHTML;
            button.innerHTML = '<i class="bi bi-check"></i> Copied!';
            button.classList.remove('btn-outline-secondary');
            button.classList.add('btn-success');
            
            setTimeout(() => {
                button.innerHTML = originalText;
                button.classList.remove('btn-success');
                button.classList.add('btn-outline-secondary');
            }, 2000);
        }).catch(() => {
            alert('Failed to copy message. Please select and copy manually.');
        });
    }
}

// Get contact information for the selected interaction type
function getSelectedContactInfo() {
    const selectedType = document.getElementById('interactionType').value;
    
    // Check if it's a venue contact (format: CONTACT_TYPE_ID)
    if (selectedType.includes('_') && selectedType !== 'PHONE_CALL_VENUE' && selectedType !== 'TEXT_MESSAGE') {
        const contactId = selectedType.split('_')[1];
        
        // Find the contact in the venue contacts array
        <% if (opportunity.venue.contacts && opportunity.venue.contacts.length > 0) { %>
            <% opportunity.venue.contacts.forEach(contact => { %>
                if ('<%= contact.id %>' === contactId) {
                    return {
                        name: '<%= contact.label || "" %>',
                        type: '<%= contact.contactType.displayName %>',
                        value: '<%= contact.value %>'
                    };
                }
            <% }); %>
        <% } %>
    }
    
    // For venue phone or text message, return venue info
    if (selectedType === 'PHONE_CALL_VENUE' || selectedType === 'TEXT_MESSAGE') {
        return {
            name: '<%= opportunity.venue.name %>',
            type: selectedType === 'PHONE_CALL_VENUE' ? 'Phone Call' : 'Text Message',
            value: '<%= opportunity.venue.phone || "" %>'
        };
    }
    
    // Default fallback
    return {
        name: '',
        type: 'Contact',
        value: ''
    };
}

</script>
