<div class="container mt-4">
    <div class="row mb-3">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2 class="h5 mb-0"><%= setlist.title %></h2>
                <a href="/setlists/<%= setlist.id %>" class="btn btn-outline-secondary btn-sm">
                    <i class="bi bi-arrow-left"></i> Back to Setlist
                </a>
            </div>
        </div>
    </div>

<style>
        body {
            background-color: #f8f9fa;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        }
        .song-item {
            background: white;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.2s ease;
        }
        .song-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        .song-item.active {
            border-left: 4px solid #ff0000;
            background-color: #fff5f5;
        }
        .set-badge {
            background-color: #6c757d;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 500;
        }
        .youtube-player-container {
            position: sticky;
            top: 1rem;
            background: white;
            border-radius: 8px;
            padding: 1rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        /* Dark mode for first youtube-player-container */
        @media (prefers-color-scheme: dark) {
            .youtube-player-container {
                background-color: #2d3748;
                border: 1px solid #4a5568;
                box-shadow: 0 2px 8px rgba(0,0,0,0.3);
            }
        }
        .video-thumbnail {
            width: 100%;
            height: 120px;
            object-fit: cover;
            border-radius: 4px;
            cursor: pointer;
        }
        .play-button {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 0, 0, 0.9);
            color: white;
            border: none;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            font-size: 1.5rem;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .play-button:hover {
            background: rgba(255, 0, 0, 1);
            transform: translate(-50%, -50%) scale(1.1);
        }
        .thumbnail-container {
            position: relative;
            margin-bottom: 1rem;
        }
        .no-videos {
            text-align: center;
            padding: 3rem;
            color: #6c757d;
        }
        .no-videos i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #dee2e6;
        }
        .view-toggle {
            margin-bottom: 2rem;
        }
        .view-toggle .btn {
            margin-right: 0.5rem;
        }
        .view-toggle .btn.active {
            background-color: #ff0000;
            border-color: #ff0000;
        }
        
        .player-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.95);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10;
            border-radius: 8px;
            transition: opacity 0.3s ease;
        }
        
        .player-overlay.hidden {
            opacity: 0;
            pointer-events: none;
        }
        
        .overlay-content {
            padding: 2rem;
        }
        
        .youtube-player-container {
            position: relative;
        }
        
        /* Dark mode styles */
        @media (prefers-color-scheme: dark) {
            .youtube-player-container {
                background-color: #2d3748;
                border: 1px solid #4a5568;
                border-radius: 8px;
                padding: 1rem;
                margin: 1rem 0;
            }
        }
    </style>

    <div class="container">
        <% if (youtubeLinks && youtubeLinks.length > 0) { %>
            <div class="view-toggle text-center">
                <button class="btn btn-outline-danger active" onclick="showPlayerView()">
                    <i class="bi bi-play-circle"></i> Player View
                </button>
                <button class="btn btn-outline-danger" onclick="showListView()">
                    <i class="bi bi-list-ul"></i> List View
                </button>
            </div>

            <div class="row">
                <!-- Player View -->
                <div class="col-12" id="playerView">
                    <div class="row">
                        <div class="col-lg-8">
                            <div class="youtube-player-container">
                                <div id="youtubePlayer" style="width: 100%; height: 400px;"></div>
                                
                                <!-- Initial overlay with instructions -->
                                <div id="playerOverlay" class="player-overlay">
                                    <div class="overlay-content text-center">
                                        <i class="bi bi-play-circle display-1 text-muted mb-3"></i>
                                        <h5>Ready to Play!</h5>
                                        <p class="text-muted">Select a song from the playlist on the right to start playing</p>
                                    </div>
                                </div>
                                
                                <div class="mt-3">
                                    <h6>Now Playing:</h6>
                                    <p id="nowPlaying" class="text-muted">No song selected</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="youtube-player-container">
                                <h6>Playlist</h6>
                                <div class="list-group">
                                    <% youtubeLinks.forEach((link, index) => { %>
                                        <button class="list-group-item list-group-item-action d-flex align-items-center" 
                                                onclick="console.log('Button clicked!'); playVideoInPlayer(event, '<%= link.videoId %>', '<%= link.songTitle.replace(/'/g, "\\'") %>', '<%= (link.artist || '').replace(/'/g, "\\'") %>')">
                                            <span class="badge bg-secondary me-2"><%= index + 1 %></span>
                                            <div class="text-start">
                                                <div class="fw-bold"><%= link.songTitle %></div>
                                                <% if (link.artist) { %>
                                                    <div class="small text-muted"><%= link.artist %></div>
                                                <% } %>
                                                <div class="small text-muted"><%= link.set %></div>
                                            </div>
                                        </button>
                                    <% }) %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- List View -->
                <div class="col-12" id="listView" style="display: none;">
                    <div class="row">
                        <% youtubeLinks.forEach((link, index) => { %>
                            <div class="col-md-6 col-lg-4">
                                <div class="song-item" data-video-id="<%= link.videoId %>">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <span class="badge bg-secondary"><%= index + 1 %></span>
                                        <span class="set-badge"><%= link.set %></span>
                                    </div>
                                    <h6 class="mb-1"><%= link.songTitle %></h6>
                                    <% if (link.artist) { %>
                                        <p class="text-muted small mb-2">by <%= link.artist %></p>
                                    <% } %>
                                    <div class="thumbnail-container">
                                        <img src="https://img.youtube.com/vi/<%= link.videoId %>/mqdefault.jpg" 
                                             alt="<%= link.songTitle %>" 
                                             class="video-thumbnail"
                                             onclick="playVideo('<%= link.videoId %>')">
                                        <button class="play-button" onclick="playVideo('<%= link.videoId %>')">
                                            <i class="bi bi-play-fill"></i>
                                        </button>
                                    </div>
                                    <a href="<%= link.url %>" target="_blank" class="btn btn-outline-danger btn-sm w-100">
                                        <i class="bi bi-youtube"></i> Watch on YouTube
                                    </a>
                                </div>
                            </div>
                        <% }) %>
                    </div>

            </div>
        <% } else { %>
            <div class="no-videos">
                <i class="bi bi-youtube"></i>
                <h4>No YouTube Videos Found</h4>
                <p>This setlist doesn't have any songs with YouTube links yet.</p>
                <p class="small text-muted">Add YouTube links to your songs to see them here.</p>
            </div>
        <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://www.youtube.com/iframe_api"></script>
    <script>
        // Make youtubeLinks available globally
        const youtubeLinks = <%- JSON.stringify(youtubeLinks) %>;
        
        let player;
        let currentVideoId = null;
        let playerReady = false;

        // Check if YouTube API is already loaded
        if (typeof YT !== 'undefined' && YT.Player) {
            console.log('YouTube API already loaded, creating player...');
            createPlayer();
        } else {
            console.log('YouTube API not loaded yet, waiting...');
            // Set a timeout to retry if API doesn't load
            setTimeout(() => {
                if (typeof YT !== 'undefined' && YT.Player) {
                    console.log('YouTube API loaded after timeout, creating player...');
                    createPlayer();
                } else {
                    console.error('YouTube API failed to load');
                }
            }, 3000);
        }

        function onYouTubeIframeAPIReady() {
            console.log('YouTube API ready, creating player...');
            createPlayer();
        }

        function createPlayer() {
            try {
                player = new YT.Player('youtubePlayer', {
                    height: '400',
                    width: '100%',
                    videoId: '',
                    playerVars: {
                        'playsinline': 1,
                        'rel': 0,
                        'modestbranding': 1,
                        'enablejsapi': 1,
                        'origin': window.location.origin
                    },
                    events: {
                        'onReady': onPlayerReady,
                        'onStateChange': onPlayerStateChange,
                        'onError': onPlayerError
                    }
                });
                console.log('Player creation initiated');
            } catch (error) {
                console.error('Error creating player:', error);
            }
        }

        function onPlayerReady(event) {
            console.log('YouTube player is ready!');
            playerReady = true;
        }

        function onPlayerError(event) {
            console.error('YouTube player error:', event.data);
        }

        function onPlayerStateChange(event) {
            // Handle player state changes if needed
        }

        function showListView() {
            document.getElementById('listView').style.display = 'block';
            document.getElementById('playerView').style.display = 'none';
            document.querySelectorAll('.view-toggle .btn').forEach(btn => btn.classList.remove('active'));
            // Find the List View button and make it active
            document.querySelector('button[onclick="showListView()"]').classList.add('active');
        }

        function showPlayerView() {
            document.getElementById('listView').style.display = 'none';
            document.getElementById('playerView').style.display = 'block';
            document.querySelectorAll('.view-toggle .btn').forEach(btn => btn.classList.remove('active'));
            // Find the Player View button and make it active
            document.querySelector('button[onclick="showPlayerView()"]').classList.add('active');
        }

        function playVideo(videoId) {
            // For list view, just open in new tab
            window.open(`https://www.youtube.com/watch?v=${videoId}`, '_blank');
        }

        // Initialize with Player View as default
        document.addEventListener('DOMContentLoaded', function() {
            showPlayerView();
            // Update button states to reflect Player View as active
            document.querySelectorAll('.view-toggle .btn').forEach(btn => btn.classList.remove('active'));
            document.querySelector('.view-toggle .btn:first-child').classList.add('active');
        });

        function playVideoInPlayer(event, videoId, title, artist) {
            console.log('=== playVideoInPlayer START ===');
            console.log('Event:', event);
            console.log('videoId:', videoId);
            console.log('title:', title);
            console.log('artist:', artist);
            console.log('Player object:', player);
            console.log('Player ready:', playerReady);
            
            if (!player) {
                console.log('Player not ready yet, waiting...');
                setTimeout(() => playVideoInPlayer(event, videoId, title, artist), 1000);
                return;
            }
            
            if (player.loadVideoById) {
                try {
                    console.log('Loading video:', videoId);
                    player.loadVideoById(videoId);
                    currentVideoId = videoId;
                    
                    // Hide the overlay
                    const overlay = document.getElementById('playerOverlay');
                    if (overlay) {
                        overlay.classList.add('hidden');
                    }
                    
                    // Update now playing info
                    const nowPlaying = document.getElementById('nowPlaying');
                    const artistText = artist ? ` by ${artist}` : '';
                    nowPlaying.textContent = `${title}${artistText}`;
                    
                    // Highlight active item in playlist
                    document.querySelectorAll('.list-group-item').forEach(item => {
                        item.classList.remove('active');
                    });
                    if (event && event.currentTarget) {
                        event.currentTarget.classList.add('active');
                    }
                } catch (error) {
                    console.error('Error loading video:', error);
                }
            } else {
                console.error('Player loadVideoById method not available');
            }
        }

        // Auto-play first video when player view is shown
        function autoPlayFirst() {
            if (youtubeLinks && youtubeLinks.length > 0) {
                const firstVideo = youtubeLinks[0];
                playVideoInPlayer(null, firstVideo.videoId, firstVideo.songTitle, firstVideo.artist);
            }
        }
    </script>
