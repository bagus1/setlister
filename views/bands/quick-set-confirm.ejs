<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1>
                <% if (isGoogleDocImport) { %>
                    <i class="bi bi-file-earmark-text"></i> Google Doc Import
                <% } else { %>
                    Confirm Quick Setlist
                <% } %>
            </h1>
            <p class="text-muted">
                <% if (isGoogleDocImport) { %>
                    Review and confirm songs extracted from Google Doc
                    <br><small class="text-info">Google Doc content will be preserved as gig documents</small>
                <% } else { %>
                    Review and confirm song matches for your setlist
                <% } %>
            </p>
        </div>
    </div>

    <form action="/bands/<%= band.id %>/quick-set/create" method="POST" id="confirmForm">
        <!-- Warning Message for High Skip Rate -->
        <% if (isGoogleDocImport && googleDocData && googleDocData.skippedSectionsCount > 0) { %>
            <% 
                const skipPercentage = (googleDocData.skippedSectionsCount / googleDocData.rawSectionsCount) * 100;
                const validSongs = googleDocData.validSectionsCount || 0;
                const skipRate = validSongs > 0 ? (googleDocData.skippedSectionsCount / validSongs) * 100 : 0;
            %>
            <% if (skipRate > 10) { %>
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="alert alert-warning" role="alert">
                            <h5 class="alert-heading">
                                <i class="bi bi-exclamation-triangle"></i> Processing Warning
                            </h5>
                            <p class="mb-2">
                                Quite a few songs couldn't be processed (<%= Math.round(skipRate) %>% of your songs were skipped). 
                                You might want to view the formatting document and fix your Google Doc and resubmit before continuing.
                            </p>
                            <hr>
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <%= googleDocData.skippedSectionsCount %> out of <%= googleDocData.rawSectionsCount %> sections were skipped
                                </small>
                                <a href="/legal/google-doc-formatting-guide" class="btn btn-outline-warning btn-sm" target="_blank">
                                    <i class="bi bi-question-circle"></i> View Formatting Guide
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        <% } %>

        <!-- Warning Message for High "Likely New Songs" Rate -->
        <% if (isGoogleDocImport && googleDocData) { %>
            <% 
                const totalSongs = googleDocData.validSectionsCount || 0;
                const likelyNewSongs = totalSongs - (googleDocData.matchedSongs || 0);
                const newSongsRate = totalSongs > 0 ? (likelyNewSongs / totalSongs) * 100 : 0;
            %>
            <% if (newSongsRate > 10) { %>
                <div class="row mb-4">
                    <div class="col-12">
                        <div class="alert alert-info" role="alert">
                            <h5 class="alert-heading">
                                <i class="bi bi-info-circle"></i> Title Quality Check
                            </h5>
                            <p class="mb-2">
                                Before continuing, check how the titles look below. If they look messed up at all, check the Google Formatting Guide and consider cleaning up your Google Doc and resubmitting before continuing.
                            </p>
                            <hr>
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    <%= likelyNewSongs %> out of <%= totalSongs %> songs appear to be new (may indicate title parsing issues)
                                </small>
                                <a href="/legal/google-doc-formatting-guide" class="btn btn-outline-info btn-sm" target="_blank">
                                    <i class="bi bi-question-circle"></i> View Formatting Guide
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            <% } %>
        <% } %>

        <% if (createSetlist !== false) { %>
        <!-- Setlist Details (only show when creating a setlist) -->
        <div class="row mb-4">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-list-check"></i> Setlist Details
                        </h5>
                    </div>
                    <div class="card-body">
                        <% if (setlist) { %>
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label for="setlistTitle" class="form-label">Setlist Title</label>
                                        <input type="text" class="form-control" id="setlistTitle" name="setlistTitle" 
                                               value="<%= setlist ? setlist.title : '' %>"
                                               data-setlist-id="<%= setlist ? setlist.id : '' %>"
                                               data-auto-save="title">
                                        <small class="text-muted">Changes save automatically</small>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label for="setlistDate" class="form-label">Date</label>
                                        <input type="date" class="form-control" id="setlistDate" name="setlistDate"
                                               value="<%= setlist && setlist.date ? setlist.date.toISOString().split('T')[0] : '' %>"
                                               data-setlist-id="<%= setlist ? setlist.id : '' %>"
                                               data-auto-save="date">
                                        <small class="text-muted">Changes save automatically</small>
                                    </div>
                                </div>
                            </div>
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i> 
                                Your setlist has been created! You can now process songs individually by clicking the checkmark next to each song, or remove songs completely by clicking the X button.
                            </div>
                        <% } else { %>
                            <div class="mb-3">
                                <label for="setlistTitle" class="form-label">Setlist Title</label>
                                <input type="text" class="form-control" id="setlistTitle" name="setlistTitle" 
                                       value="Untitled Setlist" required>
                            </div>
                            <div class="mb-0">
                                <label for="setlistDate" class="form-label">Date (optional)</label>
                                <input type="date" class="form-control" id="setlistDate" name="setlistDate">
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">Summary</h6>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <span>Total Songs:</span>
                            <strong><%= totalSongs %></strong>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span>Sets:</span>
                            <strong><%= sets.length %></strong>
                        </div>
        <% } else { %>
        <!-- List Summary (only show when adding to band songs) -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="bi bi-music-note-list"></i> List Summary
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <p class="text-muted mb-3">
                                    Review the songs below and confirm which ones you want to add to your band's repertoire. 
                                    Songs will be matched with existing songs in our database when possible.
                                </p>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="d-flex justify-content-between">
                                            <span>Total Songs:</span>
                                            <strong><%= totalSongs %></strong>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="d-flex justify-content-between text-success">
                                            <span>Matched Songs:</span>
                                            <strong><%= matchedSongs %></strong>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="d-flex justify-content-between text-warning">
                                            <span>Likely New Songs:</span>
                                            <strong><%= likelyNewSongs %></strong>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle"></i>
                                    <small>
                                        Songs added here can later be added to any of the band's sets.
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <% } %>
                        
                        <% if (isGoogleDocImport && googleDocData) { %>
                            <hr>
                            <div class="d-flex justify-content-between">
                                <span>Raw Sections:</span>
                                <strong><%= googleDocData.rawSectionsCount %></strong>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span>Valid Songs:</span>
                                <strong><%= googleDocData.validSectionsCount %></strong>
                            </div>
                            <div class="d-flex justify-content-between text-danger">
                                <span>Sections Skipped:</span>
                                <strong><%= googleDocData.skippedSectionsCount %></strong>
                            </div>
                            
                            <% if (googleDocData.skippedSectionsCount > 0) { %>
                                <hr>
                                <div class="text-center">
                                                            <a href="/legal/google-doc-formatting-guide" class="btn btn-outline-info btn-sm" target="_blank">
                            <i class="bi bi-question-circle"></i> Formatting Guide
                        </a>
                                </div>
                            <% } %>
                        <% } %>
                        
                        <hr>
                        <div class="d-flex justify-content-between text-success">
                            <span>Matched:</span>
                            <strong id="matchedCount">-</strong>
                        </div>
                        <div class="d-flex justify-content-between text-warning">
                            <span>Likely New Songs:</span>
                            <strong id="createCount">-</strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Song Matching Results -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-music-note-list"></i> Song Matches
                </h5>
                <button type="submit" class="btn btn-primary btn-sm">
                    <i class="bi bi-arrow-right-circle"></i> 
                    <% if (createSetlist === false) { %>
                        Add Songs to Band Repertoire
                    <% } else { %>
                        Go to Setlist
                    <% } %>
                </button>
            </div>
            <div class="card-body">
                <div class="alert alert-info mb-4">
                    <i class="bi bi-info-circle"></i>
                    Select the best match for each song or select Create New, click the checkmark to add it to your set list, or click the X to fuhgetaboutit. We appreciate your taking care to keep the title and artist information accurate. If your band does an original rendition of a covers song feel free to create a new song with the same title but you as the artist.
                </div>
                
                <% sets.forEach((set, setIndex) => { %>
                    <h6 class="set-header text-primary mb-3">
                        <i class="bi bi-collection"></i> <%= set.name %>
                    </h6>
                    
                    <div class="row mb-4">
                        <% set.songs.forEach((setSong, songIndex) => { %>
                            <% const songMatch = songMatches.find(sm => sm.lineNumber === setSong.lineNumber); %>
                            <% if (songMatch) { %>
                                <div class="col-12 mb-4">
                                    <div class="song-match-container">
                                        <div class="d-flex align-items-center mb-2">
                                            <button type="button" 
                                                    class="btn btn-success btn-sm me-2 process-song-btn" 
                                                    data-song-line="<%= songMatch.lineNumber %>"
                                                    data-setlist-id="<%= setlist ? setlist.id : '' %>"
                                                    title="Add this to my setlist">
                                                <i class="bi bi-check-lg"></i>
                                            </button>
                                            <button type="button" 
                                                    class="btn btn-danger btn-sm me-3 remove-song-btn" 
                                                    data-song-line="<%= songMatch.lineNumber %>"
                                                    title="Fuhgeddaboudit">
                                                <i class="bi bi-x-lg"></i>
                                            </button>
                                            <strong class="me-2 fs-5 song-title-text"><%= songMatch.title %></strong>
                                            <% if (songMatch.artist) { %>
                                                <span class="text-muted">by <%= songMatch.artist %></span>
                                            <% } %>
                                        </div>
                                        

                                        
                                        <!-- Hidden input to track selection -->
                                        <input type="hidden" name="song_<%= songMatch.lineNumber %>" 
                                               value="<%= songMatch.shouldPreferExisting && songMatch.selectedMatch ? 'existing_' + songMatch.selectedMatch.id : 'new' %>" 
                                               id="hidden_song_<%= songMatch.lineNumber %>">
                                        
                                        <div class="row g-2">
                                            <!-- Left: Option to create new song -->
                                            <div class="col-2">
                                                <div class="border border-light-subtle rounded p-2">
                                                    <div class="mb-1"><strong>Create New</strong></div>
                                                    <div class="card border-warning new-song-card <%= (songMatch.matches.allMatches.length === 0 || !songMatch.shouldPreferExisting) ? 'selected' : '' %>" 
                                                         data-song-line="<%= songMatch.lineNumber %>" 
                                                         style="cursor: pointer;">
                                                        <div class="card-body p-2">
                                                            <div class="d-flex align-items-center justify-content-between">
                                                                <div class="song-title" 
                                                                     data-line-number="<%= songMatch.lineNumber %>"
                                                                     data-original-title="<%= songMatch.title %>"><%= songMatch.title %></div>
                                                                <button type="button" 
                                                                        class="btn btn-sm btn-outline-secondary p-1" 
                                                                        onclick="editSongTitle(this); event.stopPropagation();"
                                                                        title="Edit song title"
                                                                        style="border: none; background: none; font-size: 0.75rem;">
                                                                    <i class="bi bi-pencil"></i>
                                                                </button>
                                                            </div>
                                                            <input type="hidden" 
                                                                   name="edited_title_<%= songMatch.lineNumber %>" 
                                                                   value="<%= songMatch.title %>"
                                                                   class="edited-title-input">
                                                            <div class="mt-2" onclick="event.stopPropagation();">
                                                                <label class="form-label small mb-1">Artist</label>
                                                                <input type="text" 
                                                                       class="form-control form-control-sm" 
                                                                       name="new_artist_<%= songMatch.lineNumber %>"
                                                                       value="<%= songMatch.artist || '' %>"
                                                                       placeholder="Enter artist name"
                                                                       style="font-size: 0.75rem;">
                                                            </div>
                                                            
                                                            <% if (currentUser && currentUser.canMakePrivate) { %>
                                                            <div class="mt-2" onclick="event.stopPropagation();">
                                                                <div class="form-check form-check-sm">
                                                                    <input class="form-check-input" 
                                                                           type="checkbox" 
                                                                           id="new_private_<%= songMatch.lineNumber %>" 
                                                                           name="new_private_<%= songMatch.lineNumber %>" 
                                                                           value="true">
                                                                    <label class="form-check-label small" for="new_private_<%= songMatch.lineNumber %>">
                                                                        <i class="bi bi-lock" style="font-size: 0.8em;"></i> Private
                                                                    </label>
                                                                </div>
                                                            </div>
                                                            <% } %>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Right: Existing song matches -->
                                            <% if (songMatch.matches.allMatches.length > 0) { %>
                                                <div class="col-10">
                                                    <div class="border border-light-subtle rounded p-2">
                                                        <div class="mb-2">
                                                            <strong>Use existing song:</strong>
                                                        </div>
                                                    
                                                    <div class="row match-cards-row">
                                                        <% songMatch.matches.allMatches.forEach((match, matchIndex) => { %>
                                                            <div class="col mb-2">
                                                                <div class="card match-card <%= (songMatch.selectedMatch && match.id === songMatch.selectedMatch.id) ? 'selected' : '' %>" 
                                                                     data-song-line="<%= songMatch.lineNumber %>" 
                                                                     data-song-id="<%= match.id %>" 
                                                                     style="cursor: pointer;">
                                                                    <div class="card-body p-2">
                                                                        <div class="song-title"><%= match.title %></div>
                                                                        <% if (match.artists && match.artists.length > 0) { %>
                                                                            <div class="song-artist text-muted">by <%= match.artists[0].artist.name %></div>
                                                                        <% } else { %>
                                                                            <!-- Artist input for songs without artists -->
                                                                            <div class="mt-2" onclick="event.stopPropagation();">
                                                                                <label class="form-label small mb-1">Artist</label>
                                                                                <input type="text" 
                                                                                       class="form-control form-control-sm" 
                                                                                       name="existing_artist_<%= songMatch.lineNumber %>_<%= match.id %>"
                                                                                       value="<%= songMatch.artist || '' %>"
                                                                                       placeholder="Enter artist name"
                                                                                       style="font-size: 0.75rem;">
                                                                            </div>
                                                                        <% } %>
                                                                        <% if (match.vocalist) { %>
                                                                            <div class="song-vocalist text-muted">vocals: <%= match.vocalist.name %></div>
                                                                        <% } %>
                                                                        <div class="d-flex justify-content-between align-items-center mt-1">
                                                                            <% if (match.matchType === 'exact') { %>
                                                                                <span class="badge bg-success">Exact Match</span>
                                                                            <% } else { %>
                                                                                <span class="badge bg-info">Similar (~<%= Math.round(match.confidence * 100) %>%)</span>
                                                                            <% } %>

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        <% }); %>
                                                    </div>
                                                    </div>
                                                </div>
                                            <% } else { %>
                                                <!-- No matches found - show message -->
                                                <div class="col-10">
                                                    <div class="border border-light-subtle rounded p-2">
                                                        <div class="alert alert-info mb-0">
                                                            <i class="bi bi-info-circle"></i> No existing songs found. This will create a new song.
                                                        </div>
                                                    </div>
                                                </div>
                                            <% } %>
                                        </div>
                                        
                                        <!-- Hidden inputs for song data -->
                                        <input type="hidden" name="original_title_<%= songMatch.lineNumber %>" value="<%= songMatch.title %>">
                                        <input type="hidden" name="original_artist_<%= songMatch.lineNumber %>" value="<%= songMatch.artist %>">
                                        <input type="hidden" name="set_number_<%= songMatch.lineNumber %>" value="<%= songMatch.setNumber %>">
                                    </div>
                                </div>
                            <% } %>
                        <% }); %>
                    </div>
                <% }); %>
            </div>
        </div>

        <!-- Submit Button -->
        <div class="d-flex justify-content-end gap-2 mt-4">
            <a href="/bands/<%= band.id %>" class="btn btn-secondary">Cancel</a>
            <button type="submit" class="btn btn-success">
                <i class="bi bi-arrow-right-circle"></i> 
                <% if (createSetlist === false) { %>
                    Add Songs to Band Repertoire
                <% } else { %>
                    Go to Setlist
                <% } %>
            </button>
        </div>
    </form>
</div>

<style>
.match-card {
    cursor: pointer;
    transition: all 0.2s;
}

.match-card:hover {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transform: translateY(-1px);
}

.song-match-container {
    border-left: 3px solid #dee2e6;
    padding-left: 1rem;
    margin-bottom: 1rem;
}

.set-header {
    border-bottom: 2px solid #e9ecef;
    padding-bottom: 0.5rem;
}



.row {
    --bs-gutter-x: 0.5rem;
}

.new-song-card.selected,
.match-card.selected {
    border-color: #0d6efd !important;
    background-color: #e7f3ff;
}

.match-cards-row .col {
    flex: 0 0 20%;
    max-width: 20%;
}
</style>

<script>
// Function to handle editing of song titles via pencil icon
function editSongTitle(buttonElement) {
    // Prevent event bubbling to avoid triggering card selection
    event.stopPropagation();
    
    // Find the title element (sibling of the button)
    const titleElement = buttonElement.parentNode.querySelector('.song-title');
    const lineNumber = titleElement.dataset.lineNumber;
    const currentTitle = titleElement.textContent.trim();
    const hiddenInput = document.querySelector(`input[name="edited_title_${lineNumber}"]`);
    
    // Create input field
    const input = document.createElement('input');
    input.type = 'text';
    input.value = currentTitle;
    input.className = 'form-control form-control-sm';
    input.style.fontSize = '0.875rem';
    input.style.fontWeight = 'normal';
    
    // Hide the title and button, show input
    titleElement.style.display = 'none';
    buttonElement.style.display = 'none';
    titleElement.parentNode.insertBefore(input, titleElement.nextSibling);
    
    // Focus and select all text
    input.focus();
    input.select();
    
    // Handle save on Enter or blur
    function saveTitle() {
        const newTitle = input.value.trim();
        if (newTitle && newTitle !== currentTitle) {
            titleElement.textContent = newTitle;
            hiddenInput.value = newTitle;
        }
        
        // Remove input and show title and button
        input.remove();
        titleElement.style.display = 'block';
        buttonElement.style.display = 'block';
    }
    
    // Handle cancel on Escape
    function cancelEdit() {
        input.remove();
        titleElement.style.display = 'block';
        buttonElement.style.display = 'block';
    }
    
    // Event listeners
    input.addEventListener('blur', saveTitle);
    input.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            saveTitle();
        } else if (e.key === 'Escape') {
            e.preventDefault();
            cancelEdit();
        }
        // Stop propagation to prevent card selection
        e.stopPropagation();
    });
    
    // Stop click events on input from bubbling
    input.addEventListener('click', function(e) {
        e.stopPropagation();
    });
}

document.addEventListener('DOMContentLoaded', function() {
    // Update summary counts
    function updateCounts() {
        const hiddenInputs = document.querySelectorAll('input[name^="song_"][type="hidden"]');
        let matchedCount = 0;
        let createCount = 0;
        
        hiddenInputs.forEach(input => {
            if (input.value.startsWith('existing_')) {
                matchedCount++;
            } else if (input.value === 'new') {
                createCount++;
            }
        });
        
        document.getElementById('matchedCount').textContent = matchedCount;
        document.getElementById('createCount').textContent = createCount;
    }
    
    // Function to update card selection for a song line
    function updateCardSelection(lineNumber, selectedValue) {
        const hiddenInput = document.getElementById(`hidden_song_${lineNumber}`);
        hiddenInput.value = selectedValue;
        
        // Remove selected class from all cards in this line
        document.querySelectorAll(`[data-song-line="${lineNumber}"]`).forEach(card => {
            card.classList.remove('selected');
        });
        
        // Add selected class to the appropriate card
        if (selectedValue === 'new') {
            document.querySelector(`[data-song-line="${lineNumber}"].new-song-card`).classList.add('selected');
        } else {
            const songId = selectedValue.replace('existing_', '');
            document.querySelector(`[data-song-line="${lineNumber}"][data-song-id="${songId}"]`).classList.add('selected');
        }
        
        updateCounts();
    }

    // Handle new song card clicks
    document.querySelectorAll('.new-song-card').forEach(card => {
        card.addEventListener('click', function() {
            const lineNumber = this.dataset.songLine;
            updateCardSelection(lineNumber, 'new');
        });
    });

    // Handle existing song card clicks
    document.querySelectorAll('.match-card').forEach(card => {
        card.addEventListener('click', function() {
            const lineNumber = this.dataset.songLine;
            const songId = this.dataset.songId;
            updateCardSelection(lineNumber, `existing_${songId}`);
        });
    });

    // Auto-save functionality for setlist metadata
    function autoSaveField(field, value, setlistId) {
        fetch(`/setlists/${setlistId}/auto-save`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ field, value })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                console.log(`${field} auto-saved successfully`);
            } else {
                console.error(`Failed to auto-save ${field}:`, data.error);
            }
        })
        .catch(error => {
            console.error(`Error auto-saving ${field}:`, error);
        });
    }

    // Add auto-save listeners
    document.querySelectorAll('[data-auto-save]').forEach(input => {
        input.addEventListener('blur', function() {
            const field = this.dataset.autoSave;
            const value = this.value;
            const setlistId = this.dataset.setlistId;
            
            if (value) {
                autoSaveField(field, value, setlistId);
            }
        });
    });

    // Individual song processing functionality
    function processSong(songLine, setlistId) {
        const button = document.querySelector(`[data-song-line="${songLine}"]`);
        const container = button.closest('.song-match-container');
        const hiddenInput = document.getElementById(`hidden_song_${songLine}`);
        const selection = hiddenInput.value;
        
        // Get song details from the form
        const songData = {
            songLine: songLine,
            selection: selection,
            setlistId: setlistId
        };
        
        // Add data from form fields
        if (selection === 'new') {
            songData.editedTitle = document.querySelector(`input[name="edited_title_${songLine}"]`)?.value;
            songData.newArtist = document.querySelector(`input[name="new_artist_${songLine}"]`)?.value;
            songData.originalTitle = document.querySelector(`input[name="original_title_${songLine}"]`)?.value || container.querySelector('.song-title-text').textContent;
            
            // Include private checkbox value
            const privateCheckbox = document.querySelector(`input[name="new_private_${songLine}"]`);
            if (privateCheckbox && privateCheckbox.checked) {
                songData[`new_private_${songLine}`] = 'true';
            }
        } else {
            // Get existing song data
            const songId = selection.replace('existing_', '');
            songData.songId = songId;
            songData.newArtist = document.querySelector(`input[name="new_artist_${songLine}"]`)?.value;
        }
        
        // Disable button and show processing
        button.disabled = true;
        button.innerHTML = '<i class="bi bi-hourglass-split"></i>';
        
        // AJAX call to process individual song
        fetch(`/bands/<%= band.id %>/quick-set/process-song`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(songData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Success - update button and collapse
                button.innerHTML = '<i class="bi bi-check-circle-fill"></i>';
                button.classList.remove('btn-success');
                button.classList.add('btn-outline-success');
                
                // Hide the X button when checkmark is clicked
                const removeButton = container.querySelector('.remove-song-btn');
                if (removeButton) {
                    removeButton.style.transition = 'all 0.3s ease-out';
                    removeButton.style.opacity = '0';
                    removeButton.style.transform = 'scale(0.8)';
                    setTimeout(() => {
                        removeButton.style.display = 'none';
                    }, 300);
                }
                
                // Hide the song selection area but keep the title visible
                const songSelectionArea = container.querySelector('.row.g-2');
                const songTitleArea = container.querySelector('.d-flex.align-items-center.mb-2');
                const outerCol = container.closest('.col-12.mb-4');
                
                if (songSelectionArea && songTitleArea) {
                    // Keep the title area but make it more compact
                    songTitleArea.style.marginBottom = '4px';
                    
                    // Hide the selection area with animation
                    songSelectionArea.style.transition = 'all 0.3s ease-out';
                    songSelectionArea.style.opacity = '0';
                    songSelectionArea.style.transform = 'scale(0.95)';
                    
                    setTimeout(() => {
                        songSelectionArea.style.display = 'none';
                        
                        // Tighten spacing - override the mb-4 class
                        if (outerCol) {
                            outerCol.style.marginBottom = '4px';
                        }
                        
                        // Make the song container more compact
                        container.style.marginBottom = '0px';
                        container.style.paddingBottom = '4px';
                    }, 300);
                }
                
                console.log(`Song processed successfully: ${data.songTitle}`);
            } else {
                // Error - reset button
                button.disabled = false;
                button.innerHTML = '<i class="bi bi-check-lg"></i>';
                console.error('Error processing song:', data.error);
                alert('Error processing song: ' + data.error);
            }
        })
        .catch(error => {
            // Error - reset button
            button.disabled = false;
            button.innerHTML = '<i class="bi bi-check-lg"></i>';
            console.error('Error processing song:', error);
            alert('Error processing song. Please try again.');
        });
    }

    // Remove song functionality
    function removeSong(songLine) {
        const container = document.querySelector(`[data-song-line="${songLine}"]`).closest('.song-match-container');
        const outerCol = container.closest('.col-12.mb-4');
        
        // Animate removal
        container.style.transition = 'all 0.3s ease-out';
        container.style.opacity = '0';
        container.style.transform = 'scale(0.95)';
        
        setTimeout(() => {
            // Remove the entire song container
            if (outerCol) {
                outerCol.remove();
            } else {
                container.remove();
            }
            
            // Update counts
            updateCounts();
            
            // Check if any songs remain
            const remainingSongs = document.querySelectorAll('.song-match-container');
            if (remainingSongs.length === 0) {
                // No songs left, show message
                const cardBody = document.querySelector('.card-body');
                if (cardBody) {
                    const noSongsMessage = document.createElement('div');
                    noSongsMessage.className = 'alert alert-info text-center';
                    noSongsMessage.innerHTML = '<i class="bi bi-info-circle"></i> All songs have been removed.';
                    cardBody.appendChild(noSongsMessage);
                }
            }
        }, 300);
    }

    // Add click listeners to all process buttons
    document.querySelectorAll('.process-song-btn').forEach(button => {
        button.addEventListener('click', function() {
            const songLine = this.dataset.songLine;
            const setlistId = this.dataset.setlistId;
            processSong(songLine, setlistId);
        });
    });

    // Add click listeners to all remove buttons
    document.querySelectorAll('.remove-song-btn').forEach(button => {
        button.addEventListener('click', function() {
            const songLine = this.dataset.songLine;
            removeSong(songLine);
        });
    });

    // Initial count
    updateCounts();
});
</script>
