<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1><%= setlist.title %></h1>
                <h2 class="h4 text-muted">
                    <%= setlist.band.name %>
                </h2>
                <% if (setlist.date) { %>
                    <h2 class="h5 text-primary">
                        <i class="bi bi-calendar"></i>
                        <%= new Date(setlist.date).toLocaleDateString('en-US', { weekday: 'long' , year: 'numeric' ,
                            month: 'long' , day: 'numeric' }) %>
                    </h2>
                    <% } %>
            </div>
            <div class="d-flex gap-2">
                <% if (!setlist.isFinalized) { %>
                    <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/edit" class="btn btn-primary">
                        <i class="bi bi-pencil"></i> Edit Setlist
                    </a>
                <% } %>
                <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/copy" class="btn btn-outline-info">
                    <i class="bi bi-files"></i> Copy Setlist
                </a>
                <a href="/bands/<%= setlist.band.id %>" class="btn btn-outline-primary">
                    <i class="bi bi-people"></i> Back to Band
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-check-circle"></i> Setlist Review
                </h5>
            </div>
            <div class="card-body">
                <!-- Headers for all sets -->
                <div class="d-flex justify-content-between align-items-center mb-2 px-5">
                    <div class="d-flex align-items-center custom-gap">
                        <div class="flex-shrink-0">
                            <h6 class="text-muted mb-0">Title and Artist</h6>
                        </div>
                        <div class="flex-shrink-0">
                            <h6 class="text-muted mb-0" data-bs-toggle="tooltip" data-bs-placement="top" title="Click on the song and edit to add values">Key, Tempo, Duration, Vocalist</h6>
                        </div>
                    </div>
                    <div class="flex-shrink-0">
                        <h6 class="text-muted mb-0" data-bs-toggle="tooltip" data-bs-placement="top" title="Click on the song to view and add Music Stand Docs">Music Stand Doc</h6>
                    </div>
                </div>
                <hr class="my-3 mx-5 text-muted">
                
                <% if (setlist.sets && setlist.sets.length> 0) { %>
                    <% setlist.sets.sort((a, b)=> a.order - b.order).forEach(set => { %>
                        <% if (set.songs && set.songs.length> 0) { %>
                            <div class="set-section mb-4">
                                <h6 class="text-primary">
                                    <i class="bi bi-music-note-list"></i>
                                    <%= set.name %>
                                        <span class="badge bg-secondary ms-2">
                                            <%= set.songs.length %> songs
                                        </span>
                                </h6>

                                <div class="list-group list-group-flush">
                                    <% set.songs.sort((a, b)=> a.order - b.order).forEach((setlistSong, index) =>
                                        { %>
                                        <div class="song-card" data-song-id="<%= setlistSong.song.id %>">
                                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                                <div class="d-flex align-items-center">
                                                    <span class="badge bg-light text-dark me-2">
                                                        <%= index + 1 %>
                                                    </span>
                                                    <div>
                                                        <strong>
                                                            <% if (setlist.band && setlist.band.id) { %>
                                                                <a href="/bands/<%= setlist.band.id %>/songs/<%= setlistSong.song.id %>"
                                                                    class="text-decoration-none">
                                                                    <%= setlistSong.song.title %>
                                                                </a>
                                                            <% } else { %>
                                                                <a href="/songs/<%= setlistSong.song.id %>"
                                                                    class="text-decoration-none">
                                                                    <%= setlistSong.song.title %>
                                                                </a>
                                                            <% } %>
                                                        </strong>
                                                        <% if (setlistSong.song.artists && setlistSong.song.artists.length>
                                                            0) { %>
                                                            <span class="text-muted">by <%= setlistSong.song.artists[0].artist.name
                                                                    %>
                                                            </span>
                                                            <% } %>
                                                    </div>
                                                </div>
                                                <div class="d-flex align-items-center gap-2">
                                                    <!-- Song metadata (vocalist, key, time) -->
                                                    <div class="d-flex align-items-center gap-2 me-3">
                                                        <% if (setlistSong.song.vocalist) { %>
                                                            <span class="badge bg-info">
                                                                <%= setlistSong.song.vocalist.name %>
                                                            </span>
                                                            <% } %>
                                                                <% if (setlistSong.song.key) { %>
                                                                    <span class="badge bg-warning text-dark">
                                                                        <%= setlistSong.song.key %>
                                                                    </span>
                                                                    <% } %>
                                                                        <% if (setlistSong.song.time) { %>
                                                                            <span class="text-muted small">
                                                                                <%= Math.floor(setlistSong.song.time / 60)
                                                                                    %>:<%= (setlistSong.song.time %
                                                                                        60).toString().padStart(2, '0' ) %>
                                                                            </span>
                                                                            <% } %>
                                                    </div>

                                                    <!-- Toggle button for extended panel -->
                                                    <button class="btn btn-sm btn-outline-secondary song-toggle-btn" 
                                                            type="button" 
                                                            data-song-id="<%= setlistSong.song.id %>"
                                                            title="Show song options">
                                                        <i class="bi bi-chevron-down"></i>
                                                    </button>
                                                </div>
                                            </div>
                                            
                                            <!-- Extended panel (hidden by default) -->
                                            <div class="song-extended-panel" style="display: none;">
                                                <div class="list-group-item bg-light">
                                                    <div class="row">
                                                        <div class="col-md-4">
                                                            <h6 class="text-muted mb-2 small">Gig Documents</h6>
                                                            <div class="dropdown mb-2">
                                                                <button
                                                                    class="btn btn-xs btn-outline-secondary dropdown-toggle w-100 py-1"
                                                                    type="button"                                                                     data-bs-toggle="dropdown"
                                                                    data-bs-boundary="viewport"
                                                                    data-bs-popper-config='{"strategy":"fixed"}'
                                                                    aria-expanded="false"
                                                                    data-song-id="<%= setlistSong.song.id %>">
                                                                    <% const bandSong=(bandSongMap &&
                                                                        bandSongMap[setlistSong.song.id]) || null; const
                                                                        preferredDocId=bandSong && bandSong.gigDocumentId;
                                                                        const availableDocs=(gigDocumentsBySong &&
                                                                        gigDocumentsBySong[setlistSong.song.id]) || [];
                                                                        const preferredDoc=preferredDocId ?
                                                                        availableDocs.find(d=> d.id === preferredDocId) :
                                                                        null;
                                                                        %>
                                                                        <% if (preferredDoc) { %>
                                                                            <%= getTypeDisplayName(preferredDoc.type) %> v<%=
                                                                                    preferredDoc.version %>
                                                                                    <% if (preferredDoc.creator) { %>
                                                                                        <small class="text-muted ms-1">
                                                                                            by <%= preferredDoc.creator.username.includes('@') ? preferredDoc.creator.username.split('@')[0] : preferredDoc.creator.username %>
                                                                                        </small>
                                                                                    <% } %>
                                                                                    <% } else if (availableDocs.length> 0) {
                                                                                        %>
                                                                                        <%= getTypeDisplayName(availableDocs[0].type)
                                                                                            %> v<%= availableDocs[0].version
                                                                                                %>
                                                                                                <% if (availableDocs[0].creator) { %>
                                                                                                    <small class="text-muted ms-1">
                                                                                                        by <%= availableDocs[0].creator.username.includes('@') ? availableDocs[0].creator.username.split('@')[0] : availableDocs[0].creator.username %>
                                                                                                    </small>
                                                                                                <% } %>
                                                                                                <% } else { %>
                                                                                                    No docs
                                                                                                    <% } %>
                                                                </button>
                                                                <ul class="dropdown-menu">
                                                                    <% if (availableDocs.length> 0) { %>
                                                                        <% availableDocs.forEach(doc=> { %>
                                                                            <li>
                                                                                <a class="dropdown-item <%= preferredDocId === doc.id ? 'active' : '' %>"
                                                                                    href="#"
                                                                                    onclick="setPreferredGigDocument(<%= setlistSong.song.id %>, <%= doc.id %>)">
                                                                                    <%= getTypeDisplayName(doc.type) %> v<%=
                                                                                            doc.version %>
                                                                                            <% if (doc.creator) { %>
                                                                                                <small class="text-muted ms-2">
                                                                                                    by <%= doc.creator.username.includes('@') ? doc.creator.username.split('@')[0] : doc.creator.username %>
                                                                                                </small>
                                                                                            <% } %>
                                                                                            <% if (preferredDocId===doc.id)
                                                                                                { %>
                                                                                                <i
                                                                                                    class="bi bi-check text-success ms-2"></i>
                                                                                                <% } %>
                                                                            </a>
                                                                        </li>
                                                                        <% }); %>
                                                                            <li>
                                                                                <hr class="dropdown-divider">
                                                                            </li>
                                                                            <li>
                                                                                <a class="dropdown-item text-muted"
                                                                                    href="#"
                                                                                    onclick="setPreferredGigDocument(<%= setlistSong.song.id %>, null)">
                                                                                    <i class="bi bi-x-circle"></i> Clear
                                                                                    preference
                                                                                </a>
                                                                            </li>
                                                                            <% } else { %>
                                                                                <li><span
                                                                                        class="dropdown-item-text text-muted">No
                                                                                        Music Stand documents available</span>
                                                                                </li>
                                                                                <% } %>
                                                                                    <li>
                                                                                        <hr class="dropdown-divider">
                                                                                    </li>
                                                                                    <li>
                                                                                        <a class="dropdown-item"
                                                                                            href="/songs/<%= setlistSong.song.id %>/docs/new">
                                                                                            <i
                                                                                                class="bi bi-plus-circle"></i>
                                                                                            Create new gig document
                                                                                        </a>
                                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <h6 class="text-muted mb-2 small">YouTube Videos</h6>
                                                            <div class="dropdown mb-2">
                                                                <button
                                                                    class="btn btn-xs btn-outline-secondary dropdown-toggle w-100 py-1"
                                                                    type="button"                                                                     data-bs-toggle="dropdown"
                                                                    data-bs-boundary="viewport"
                                                                    data-bs-popper-config='{"strategy":"fixed"}'
                                                                    aria-expanded="false"
                                                                    data-song-id="<%= setlistSong.song.id %>">
                                                                    <% const bandSongYoutube=(bandSongMap &&
                                                                        bandSongMap[setlistSong.song.id]) || null; const
                                                                        preferredYoutubeUrl=bandSongYoutube && bandSongYoutube.youtube;
                                                                        const availableYoutubeLinks=(youtubeLinksBySong &&
                                                                        youtubeLinksBySong[setlistSong.song.id]) || [];
                                                                        const preferredYoutubeLink=preferredYoutubeUrl ?
                                                                        availableYoutubeLinks.find(l=> l.url === preferredYoutubeUrl) :
                                                                        null;
                                                                        %>
                                                                        <% if (preferredYoutubeLink) { %>
                                                                            <%= preferredYoutubeLink.description || 'YouTube Video' %>
                                                                        <% } else if (availableYoutubeLinks.length> 0) { %>
                                                                            <%= availableYoutubeLinks[0].description || 'YouTube Video' %>
                                                                        <% } else { %>
                                                                            No videos
                                                                        <% } %>
                                                                </button>
                                                                <ul class="dropdown-menu">
                                                                    <% if (availableYoutubeLinks.length> 0) { %>
                                                                        <% availableYoutubeLinks.forEach(link=> { %>
                                                                            <li>
                                                                                <a class="dropdown-item <%= preferredYoutubeUrl === link.url ? 'active' : '' %>"
                                                                                    href="#"
                                                                                    onclick="setPreferredYouTube(<%= setlistSong.song.id %>, '<%= link.url %>')">
                                                                                    <%= link.description || 'YouTube Video' %>
                                                                                    <% if (preferredYoutubeUrl===link.url) { %>
                                                                                        <i class="bi bi-check text-success ms-2"></i>
                                                                                    <% } %>
                                                                                </a>
                                                                            </li>
                                                                        <% }); %>
                                                                            <li>
                                                                                <hr class="dropdown-divider">
                                                                            </li>
                                                                            <li>
                                                                                <a class="dropdown-item text-muted"
                                                                                    href="#"
                                                                                    onclick="setPreferredYouTube(<%= setlistSong.song.id %>, null)">
                                                                                    <i class="bi bi-x-circle"></i> Clear
                                                                                    preference
                                                                                </a>
                                                                            </li>
                                                                            <% } else { %>
                                                                                <li><span
                                                                                        class="dropdown-item-text text-muted">No
                                                                                        YouTube videos available</span>
                                                                                </li>
                                                                                <% } %>
                                                                                    <li>
                                                                                        <hr class="dropdown-divider">
                                                                                    </li>
                                                                                    <li>
                                                                                        <a class="dropdown-item"
                                                                                            href="/songs/<%= setlistSong.song.id %>/links/new?type=youtube">
                                                                                            <i
                                                                                                class="bi bi-plus-circle"></i>
                                                                                            Add YouTube video
                                                                                        </a>
                                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <h6 class="text-muted mb-2 small">Audio Files</h6>
                                                            <div class="dropdown mb-2">
                                                                <button
                                                                    class="btn btn-xs btn-outline-secondary dropdown-toggle w-100 py-1"
                                                                    type="button"
                                                                    data-bs-toggle="dropdown"
                                                                    data-bs-boundary="viewport"
                                                                    data-bs-popper-config='{"strategy":"fixed"}'
                                                                    aria-expanded="false"
                                                                    data-song-id="<%= setlistSong.song.id %>">
                                                                    <% const bandSongAudio = (bandSongMap && bandSongMap[setlistSong.song.id]) || null; const
                                                                        preferredAudioUrl = bandSongAudio && bandSongAudio.audio;
                                                                        const availableAudioLinks = (setlistSong.song.links && setlistSong.song.links.filter(link => link.type === 'audio')) || [];
                                                                        const preferredAudioLink = preferredAudioUrl ?
                                                                        availableAudioLinks.find(l => l.url === preferredAudioUrl) :
                                                                        null;
                                                                        %>
                                                                        <% if (preferredAudioLink) { %>
                                                                            <%= preferredAudioLink.description || 'Audio File' %>
                                                                        <% } else if (availableAudioLinks.length > 0) { %>
                                                                            <%= availableAudioLinks[0].description || 'Audio File' %>
                                                                        <% } else { %>
                                                                            No audio files
                                                                        <% } %>
                                                                </button>
                                                                <ul class="dropdown-menu">
                                                                    <% if (availableAudioLinks.length > 0) { %>
                                                                        <% availableAudioLinks.forEach((link) => { %>
                                                                            <li>
                                                                                <a class="dropdown-item <%= preferredAudioUrl === link.url ? 'active' : '' %>"
                                                                                   href="#"
                                                                                   data-song-id="<%= setlistSong.song.id %>"
                                                                                   data-audio-url="<%= link.url %>"
                                                                                   onclick="setPreferredAudio(this.dataset.songId, this.dataset.audioUrl)">
                                                                                    <i class="bi bi-headphones me-1"></i>
                                                                                    <%= link.description || 'Audio File' %>
                                                                                    <% if (preferredAudioUrl === link.url) { %>
                                                                                        <i class="bi bi-check text-success ms-2"></i>
                                                                                    <% } %>
                                                                                </a>
                                                                            </li>
                                                                        <% }); %>
                                                                            <li>
                                                                                <hr class="dropdown-divider">
                                                                            </li>
                                                                            <li>
                                                                                <a class="dropdown-item text-muted"
                                                                                   href="#"
                                                                                   data-song-id="<%= setlistSong.song.id %>"
                                                                                   data-audio-url=""
                                                                                   onclick="setPreferredAudio(this.dataset.songId, this.dataset.audioUrl || null)">
                                                                                    <i class="bi bi-x-circle"></i> Clear preference
                                                                                </a>
                                                                            </li>
                                                                    <% } else { %>
                                                                        <li><span class="dropdown-item-text text-muted">No audio files available</span></li>
                                                                    <% } %>
                                                                    <li>
                                                                        <hr class="dropdown-divider">
                                                                    </li>
                                                                    <li>
                                                                        <a class="dropdown-item"
                                                                           href="/songs/<%= setlistSong.song.id %>/links/new?type=audio">
                                                                            <i class="bi bi-plus-circle"></i>
                                                                            Add audio file
                                                                        </a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-4">
                                                            <h6 class="text-muted mb-2 small">MIDI Files</h6>
                                                            <div class="dropdown mb-2">
                                                                <button
                                                                    class="btn btn-xs btn-outline-secondary dropdown-toggle w-100 py-1"
                                                                    type="button"
                                                                    data-bs-toggle="dropdown"
                                                                    data-bs-boundary="viewport"
                                                                    data-bs-popper-config='{"strategy":"fixed"}'
                                                                    aria-expanded="false"
                                                                    data-song-id="<%= setlistSong.song.id %>">
                                                                    <% const bandSongMidi = (bandSongMap && bandSongMap[setlistSong.song.id]) || null; const
                                                                        preferredMidiUrl = bandSongMidi && bandSongMidi.midi;
                                                                        const availableMidiLinks = (setlistSong.song.links && setlistSong.song.links.filter(link => link.type === 'midi')) || [];
                                                                        const preferredMidiLink = preferredMidiUrl ?
                                                                        availableMidiLinks.find(l => l.url === preferredMidiUrl) :
                                                                        null;
                                                                        %>
                                                                        <% if (preferredMidiLink) { %>
                                                                            <%= preferredMidiLink.description || 'MIDI File' %>
                                                                        <% } else if (availableMidiLinks.length > 0) { %>
                                                                            <%= availableMidiLinks[0].description || 'MIDI File' %>
                                                                        <% } else { %>
                                                                            No MIDI files
                                                                        <% } %>
                                                                </button>
                                                                <ul class="dropdown-menu">
                                                                    <% if (availableMidiLinks.length > 0) { %>
                                                                        <% availableMidiLinks.forEach((link) => { %>
                                                                            <li>
                                                                                <a class="dropdown-item <%= preferredMidiUrl === link.url ? 'active' : '' %>"
                                                                                   href="#"
                                                                                   data-song-id="<%= setlistSong.song.id %>"
                                                                                   data-midi-url="<%= link.url %>"
                                                                                   onclick="setPreferredMidi(this.dataset.songId, this.dataset.midiUrl)">
                                                                                    <i class="bi bi-music-note-beamed me-1"></i>
                                                                                    <%= link.description || 'MIDI File' %>
                                                                                    <% if (preferredMidiUrl === link.url) { %>
                                                                                        <i class="bi bi-check text-success ms-2"></i>
                                                                                    <% } %>
                                                                                </a>
                                                                            </li>
                                                                        <% }); %>
                                                                            <li>
                                                                                <hr class="dropdown-divider">
                                                                            </li>
                                                                            <li>
                                                                                <a class="dropdown-item text-muted"
                                                                                   href="#"
                                                                                   data-song-id="<%= setlistSong.song.id %>"
                                                                                   data-midi-url=""
                                                                                   onclick="setPreferredMidi(this.dataset.songId, this.dataset.midiUrl || null)">
                                                                                    <i class="bi bi-x-circle"></i> Clear preference
                                                                                </a>
                                                                            </li>
                                                                    <% } else { %>
                                                                        <li><span class="dropdown-item-text text-muted">No MIDI files available</span></li>
                                                                    <% } %>
                                                                    <li>
                                                                        <hr class="dropdown-divider">
                                                                    </li>
                                                                    <li>
                                                                        <a class="dropdown-item"
                                                                           href="/songs/<%= setlistSong.song.id %>/links/new?type=midi">
                                                                            <i class="bi bi-plus-circle"></i>
                                                                            Add MIDI file
                                                                        </a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <h6 class="text-muted mb-2 small">Lead Sheets</h6>
                                                            <div class="dropdown mb-2">
                                                                <button
                                                                    class="btn btn-xs btn-outline-secondary dropdown-toggle w-100 py-1"
                                                                    type="button"
                                                                    data-bs-toggle="dropdown"
                                                                    data-bs-boundary="viewport"
                                                                    data-bs-popper-config='{"strategy":"fixed"}'
                                                                    aria-expanded="false"
                                                                    data-song-id="<%= setlistSong.song.id %>">
                                                                    <% const bandSongLeadsheet = (bandSongMap && bandSongMap[setlistSong.song.id]) || null; const
                                                                        preferredLeadsheetUrl = bandSongLeadsheet && bandSongLeadsheet.leadsheet;
                                                                        const availableLeadsheetLinks = (setlistSong.song.links && setlistSong.song.links.filter(link => link.type === 'pdf')) || [];
                                                                        const preferredLeadsheetLink = preferredLeadsheetUrl ?
                                                                        availableLeadsheetLinks.find(l => l.url === preferredLeadsheetUrl) :
                                                                        null;
                                                                        %>
                                                                        <% if (preferredLeadsheetLink) { %>
                                                                            <%= preferredLeadsheetLink.description || 'Lead Sheet' %>
                                                                        <% } else if (availableLeadsheetLinks.length > 0) { %>
                                                                            <%= availableLeadsheetLinks[0].description || 'Lead Sheet' %>
                                                                        <% } else { %>
                                                                            No lead sheets
                                                                        <% } %>
                                                                </button>
                                                                <ul class="dropdown-menu">
                                                                    <% if (availableLeadsheetLinks.length > 0) { %>
                                                                        <% availableLeadsheetLinks.forEach((link) => { %>
                                                                            <li>
                                                                                <a class="dropdown-item <%= preferredLeadsheetUrl === link.url ? 'active' : '' %>"
                                                                                   href="#"
                                                                                   data-song-id="<%= setlistSong.song.id %>"
                                                                                   data-leadsheet-url="<%= link.url %>"
                                                                                   onclick="setPreferredLeadsheet(this.dataset.songId, this.dataset.leadsheetUrl)">
                                                                                    <i class="bi bi-file-earmark-pdf me-1"></i>
                                                                                    <%= link.description || 'Lead Sheet' %>
                                                                                    <% if (preferredLeadsheetUrl === link.url) { %>
                                                                                        <i class="bi bi-check text-success ms-2"></i>
                                                                                    <% } %>
                                                                                </a>
                                                                            </li>
                                                                        <% }); %>
                                                                            <li>
                                                                                <hr class="dropdown-divider">
                                                                            </li>
                                                                            <li>
                                                                                <a class="dropdown-item text-muted"
                                                                                   href="#"
                                                                                   data-song-id="<%= setlistSong.song.id %>"
                                                                                   data-leadsheet-url=""
                                                                                   onclick="setPreferredLeadsheet(this.dataset.songId, this.dataset.leadsheetUrl || null)">
                                                                                    <i class="bi bi-x-circle"></i> Clear preference
                                                                                </a>
                                                                            </li>
                                                                    <% } else { %>
                                                                        <li><span class="dropdown-item-text text-muted">No lead sheets available</span></li>
                                                                    <% } %>
                                                                    <li>
                                                                        <hr class="dropdown-divider">
                                                                    </li>
                                                                    <li>
                                                                        <a class="dropdown-item"
                                                                           href="/songs/<%= setlistSong.song.id %>/links/new?type=pdf">
                                                                            <i class="bi bi-plus-circle"></i>
                                                                            Add lead sheet
                                                                        </a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <% }); %>
                                </div>
                            </div>
                            <% } %>
                                <% }); %>
                                    <% } else { %>
                                        <div class="text-center py-5">
                                            <i class="bi bi-music-note text-muted" style="font-size: 3rem;"></i>
                                            <h4 class="text-muted mt-3">No songs in setlist yet</h4>
                                            <p class="text-muted">Add some songs to the setlist before finalizing.</p>
                                            <% if (isEditable) { %>
                                                <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/edit" class="btn btn-primary">
                                                    <i class="bi bi-plus"></i> Add Songs to Setlist
                                                </a>
                                                <% } %>
                                        </div>
                                        <% } %>
            </div>
        </div>
    </div>

    <div class="col-md-4">

        <div class="card mb-4">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-record-circle"></i> Recording
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button onclick="startRecording('<%= setlist.id %>')" class="btn btn-danger">
                        <i class="bi bi-record-circle"></i> Record This Set
                    </button>
                    <a href="/legal/recording-instructions" target="_blank" class="btn btn-outline-secondary btn-sm">
                        <i class="bi bi-lightbulb"></i> Recording Instructions
                    </a>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-gear"></i> Setlist Actions
                </h6>
            </div>
            <div class="card-body">

                <div class="d-grid gap-2">
                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/gig-view"
                            class="btn btn-success flex-fill" id="musicStandButton">
                            <i class="bi bi-music-note-beamed"></i> Music Stand
                        </a>
                        <button onclick="copyGigViewLink()" class="btn btn-outline-success"
                            title="Copy music stand link">
                            <i class="bi bi-link-45deg"></i> Copy Link
                        </button>
                    </div>

                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/rehearsal" class="btn btn-light flex-fill" style="background-color: #e91e63; border-color: #e91e63; color: white;" id="rehearsalViewButton">
                            <i class="bi bi-music-note-beamed"></i> Rehearsal View
                        </a>
                        <button onclick="copyRehearsalLink()" class="btn btn-outline-light" style="border-color: #e91e63; color: #e91e63;" title="Copy rehearsal view link">
                            <i class="bi bi-link-45deg"></i> Copy Link
                        </button>
                    </div>

                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/playlist" class="btn btn-info flex-fill" id="viewPlaylistButton">
                            <i class="bi bi-music-note-list"></i> Audio Playlist
                        </a>
                        <button onclick="copyPlaylistLink()" class="btn btn-outline-info" title="Copy playlist link">
                            <i class="bi bi-link-45deg"></i> Copy Link
                        </button>
                    </div>

                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/youtube-playlist" class="btn btn-danger flex-fill" id="youtubePlaylistButton">
                            <i class="bi bi-youtube"></i> YouTube Playlist
                        </a>
                        <button onclick="copyYoutubePlaylistLink()" class="btn btn-outline-danger" title="Copy YouTube playlist link">
                            <i class="bi bi-link-45deg"></i> Copy Link
                        </button>
                    </div>

                    <% 
                    // Check if any songs have MIDI links
                    let hasMidiLinks = false;
                    setlist.sets.forEach(set => {
                        set.songs.forEach(setlistSong => {
                            if (setlistSong.song.links && setlistSong.song.links.some(link => link.type === 'midi')) {
                                hasMidiLinks = true;
                            }
                        });
                    });
                    %>
                    <% if (hasMidiLinks) { %>
                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/midi" class="btn btn-success flex-fill" id="midiPlaylistButton">
                            <i class="bi bi-music-note-beamed"></i> MIDI Playlist
                        </a>
                        <button onclick="copyMidiPlaylistLink()" class="btn btn-outline-success" title="Copy MIDI playlist link">
                            <i class="bi bi-link-45deg"></i> Copy Link
                        </button>
                    </div>
                    <% } %>

                    <% 
                    // Check if any songs have PDF leadsheet links
                    let hasLeadsheetLinks = false;
                    setlist.sets.forEach(set => {
                        set.songs.forEach(setlistSong => {
                            if (setlistSong.song.links && setlistSong.song.links.some(link => link.type === 'pdf')) {
                                hasLeadsheetLinks = true;
                            }
                        });
                    });
                    %>
                    <% if (hasLeadsheetLinks) { %>
                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/leadsheets" class="btn btn-warning flex-fill" id="leadsheetPlaylistButton">
                            <i class="bi bi-file-earmark-pdf"></i> Lead Sheets
                        </a>
                        <button onclick="copyLeadsheetPlaylistLink()" class="btn btn-outline-warning" title="Copy lead sheets playlist link">
                            <i class="bi bi-link-45deg"></i> Copy Link
                        </button>
                    </div>
                    <% } %>

                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/recordings" class="btn btn-outline-danger flex-fill">
                            <i class="bi bi-music-note-list"></i> Recordings
                        </a>
                    </div>

                    <% const savedUrl = setlist.recordingsUrl; %>
                    <% if (savedUrl) { %>
                    <div class="d-flex gap-2">
                        <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/listen?url=<%= encodeURIComponent(savedUrl) %>" class="btn btn-primary flex-fill">
                            <i class="bi bi-headphones"></i> Listen to the Set
                        </a>
                        <button onclick="copyListenLink()" class="btn btn-outline-primary" title="Copy listen link">
                            <i class="bi bi-link-45deg"></i> Copy Link
                        </button>
                    </div>
                    <% } %>

                    <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/print" class="btn btn-outline-primary">
                        <i class="bi bi-printer"></i> Print View
                    </a>

                    <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/export" class="btn btn-outline-secondary">
                        <i class="bi bi-download"></i> Export as Text
                    </a>

                    <a href="/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/export-csv" class="btn btn-outline-warning">
                        <i class="bi bi-file-earmark-spreadsheet"></i> Export as CSV
                    </a>

                    <button onclick="copyTitlesToClipboard()" class="btn btn-outline-success">
                        <i class="bi bi-clipboard"></i> Copy Titles
                    </button>

                    <% if (!savedUrl) { %>
                    <div class="mt-2">
                        <form class="input-group" id="recordingsUrlForm">
                            <input type="url" class="form-control" name="recordingsUrl" placeholder="Paste player URL (e.g., https://www.bagus.org/kdg/index.jsp?dA=8249)" required>
                            <button class="btn btn-outline-secondary" type="submit"><i class="bi bi-save"></i> Save</button>
                        </form>
                        <small class="text-muted">After your show, if you've recorded it, paste a link to your recordings list here and we'll try to make a player for it</small>
                    </div>
                    <% } %>
                </div>
            </div>
        </div>
        <div class="card mb-4" style="margin-top: 10px;">
            <div class="card-header">
                <h6 class="mb-0">
                    <i class="bi bi-info-circle"></i> Setlist Info
                </h6>
            </div>
            <div class="card-body">
                <!-- Calculate overall stats and set breakdowns -->
                <% 
                let totalTime = 0; 
                let totalSongs = 0;
                let songsWithTime = 0; 
                let songsForDuration = 0;
                let setBreakdowns = [];
                
                if (setlist.sets) { 
                  setlist.sets.sort((a, b) => a.order - b.order).forEach(set => {
                    let setTime = 0;
                    let setSongs = 0;
                    let setTimedSongs = 0;
                    
                    if (set.songs) {
                      totalSongs += set.songs.length;
                      setSongs = set.songs.length;
                      
                      set.songs.forEach(setlistSong => {
                        if (set.name !== 'Maybe') {
                          songsForDuration++;
                          if (setlistSong.song && setlistSong.song.time) {
                            totalTime += setlistSong.song.time;
                            songsWithTime++;
                          }
                        }
                        
                        if (setlistSong.song && setlistSong.song.time) {
                          setTime += setlistSong.song.time;
                          setTimedSongs++;
                        }
                      });
                    }
                    
                    setBreakdowns.push({
                      name: set.name,
                      time: setTime,
                      songs: setSongs,
                      timedSongs: setTimedSongs
                    });
                  });
                }
                
                // Format total time as hours:minutes:seconds
                const hours = Math.floor(totalTime / 3600);
                const minutes = Math.floor((totalTime % 3600) / 60);
                const seconds = totalTime % 60;
                %>

                <div class="row text-center mb-3">
                    <div class="col-6">
                        <div class="h5 text-primary mb-0">
                            <%= totalSongs %>
                        </div>
                        <small class="text-muted">Total Songs</small>
                    </div>
                    <div class="col-6">
                        <div class="h5 text-primary mb-0">
                            <% if (totalTime > 0) { %>
                                <% if (hours > 0) { %>
                                    <%= hours %>:<%= minutes.toString().padStart(2, '0') %>:<%= seconds.toString().padStart(2, '0') %>
                                <% } else { %>
                                    <%= minutes %>:<%= seconds.toString().padStart(2, '0') %>
                                <% } %>
                            <% } else { %>
                                --:--
                            <% } %>
                        </div>
                        <small class="text-muted">
                            Est. Duration
                            <% if (songsForDuration > 0) { %>
                                <br><span class="badge bg-light text-dark">
                                    <%= songsWithTime %>/<%= songsForDuration %> timed
                                </span>
                            <% } %>
                        </small>
                    </div>
                </div>

                <!-- Set-by-set breakdowns -->
                <% if (setBreakdowns.length > 0) { %>
                    <div class="mb-0">
                        <strong class="text-muted">Set Breakdowns:</strong>
                        <div class="mt-2">
                            <% setBreakdowns.forEach(breakdown => { %>
                                <% if (breakdown.songs > 0) { %>
                                    <div class="d-flex justify-content-between align-items-center py-1">
                                        <span class="text-muted">
                                            <%= breakdown.name %>
                                            <small>(<%= breakdown.songs %> songs)</small>
                                        </span>
                                        <span class="text-primary">
                                            <% if (breakdown.time > 0) { %>
                                                <% const setMinutes = Math.floor(breakdown.time / 60); %>
                                                <% const setSeconds = breakdown.time % 60; %>
                                                <%= setMinutes %>:<%= setSeconds.toString().padStart(2, '0') %>
                                                <% if (breakdown.timedSongs < breakdown.songs) { %>
                                                    <small class="text-muted">(<%= breakdown.timedSongs %>/<%= breakdown.songs %>)</small>
                                                <% } %>
                                            <% } else { %>
                                                --:--
                                            <% } %>
                                        </span>
                                    </div>
                                <% } %>
                            <% }) %>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
        <% if (setlist.SetlistSets && setlist.SetlistSets.length> 0) { %>
            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="bi bi-clock"></i> Set Statistics
                    </h6>
                </div>
                <div class="card-body">
                    <% let totalTime=0; let totalSongs=0; setlist.sets.forEach(set=> {
                        if (set.songs && set.name !== 'Maybe') {
                        totalSongs += set.songs.length;
                        set.songs.forEach(setlistSong => {
                        if (setlistSong.song && setlistSong.song.time) {
                        totalTime += setlistSong.song.time;
                        }
                        });
                        }
                        });
                        %>

                        <div class="row text-center">
                            <div class="col-6">
                                <div class="h4 text-primary">
                                    <%= totalSongs %>
                                </div>
                                <small class="text-muted">Total Songs</small>
                            </div>
                            <div class="col-6">
                                <div class="h4 text-primary">
                                    <% if (totalTime> 0) { %>
                                        <%= Math.floor(totalTime / 60) %>:<%= (totalTime %
                                                60).toString().padStart(2, '0' ) %>
                                                <% } else { %>
                                                    --:--
                                                    <% } %>
                                </div>
                                <small class="text-muted">Est. Duration</small>
                            </div>
                        </div>
                </div>
            </div>
            <% } %>
    </div>
</div>

<script>
    function setPreferredGigDocument(songId, gigDocumentId) {
        fetch(`/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/preferred-gig-document`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                songId: songId,
                gigDocumentId: gigDocumentId
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload the page to show updated preferences
                    location.reload();
                } else {
                    alert('Error updating preferred gig document: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating preferred gig document');
            });
    }

    function setPreferredYouTube(songId, youtubeUrl) {
        fetch(`/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/preferred-youtube`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                songId: songId,
                youtubeUrl: youtubeUrl
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload the page to show updated preferences
                    location.reload();
                } else {
                    alert('Error updating preferred YouTube video: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating preferred YouTube video');
            });
    }

    function setPreferredAudio(songId, audioUrl) {
        fetch(`/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/preferred-audio`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                songId: songId,
                audioUrl: audioUrl
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload the page to show updated preferences
                    location.reload();
                } else {
                    alert('Error updating preferred audio file: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating preferred audio file');
            });
    }

    function setPreferredMidi(songId, midiUrl) {
        fetch(`/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/preferred-midi`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                songId: songId,
                midiUrl: midiUrl
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload the page to show updated preferences
                    location.reload();
                } else {
                    alert('Error updating preferred MIDI file: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating preferred MIDI file');
            });
    }

    function setPreferredLeadsheet(songId, leadsheetUrl) {
        fetch(`/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/preferred-leadsheet`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                songId: songId,
                leadsheetUrl: leadsheetUrl
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Reload the page to show updated preferences
                    location.reload();
                } else {
                    alert('Error updating preferred lead sheet: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating preferred lead sheet');
            });
    }

    function copyTitlesToClipboard() {
        try {
            let output = [];

            // Find all set sections
            const setElements = document.querySelectorAll('.set-section');

            setElements.forEach(setElement => {
                // Get set name from h6 element
                const setNameElement = setElement.querySelector('h6');
                if (!setNameElement) return;

                let setName = setNameElement.textContent.trim();
                // Remove the song count badge text
                setName = setName.replace(/\d+\s+songs$/, '').trim();

                // Get all song titles in this set
                const songTitles = [];
                const songElements = setElement.querySelectorAll('.list-group-item strong');

                songElements.forEach(songElement => {
                    songTitles.push(songElement.textContent.trim());
                });

                // Only add sets that have songs
                if (songTitles.length > 0) {
                    output.push(`${setName}:`);
                    songTitles.forEach(title => {
                        output.push(title);
                    });
                    output.push(''); // Add blank line between sets
                }
            });

            // Copy to clipboard
            const textToCopy = output.join('\n');

            if (navigator.clipboard && window.isSecureContext) {
                // Modern approach
                navigator.clipboard.writeText(textToCopy).catch(err => {
                    console.error('Failed to copy:', err);
                    fallbackCopyTextToClipboard(textToCopy);
                });
            } else {
                // Fallback for older browsers
                fallbackCopyTextToClipboard(textToCopy);
            }

        } catch (error) {
            console.error('Error copying titles:', error);
        }
    }

    function fallbackCopyTextToClipboard(text) {
        const textArea = document.createElement('textarea');
        textArea.value = text;
        textArea.style.position = 'fixed';
        textArea.style.left = '-999999px';
        textArea.style.top = '-999999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();

        try {
            document.execCommand('copy');
        } catch (err) {
            console.error('Fallback copy failed:', err);
        }

        document.body.removeChild(textArea);
    }

    function copyGigViewLink() {
        const gigViewUrl = `${window.location.origin}/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/gig-view`;

        if (navigator.clipboard && window.isSecureContext) {
            // Modern approach
            navigator.clipboard.writeText(gigViewUrl).then(() => {
                // Show success feedback
                const button = event.target.closest('button');
                const originalText = button.innerHTML;
                button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                button.classList.remove('btn-outline-success');
                button.classList.add('btn-success');

                setTimeout(() => {
                    button.innerHTML = originalText;
                    button.classList.remove('btn-success');
                    button.classList.add('btn-outline-success');
                }, 2000);
            }).catch(err => {
                console.error('Failed to copy:', err);
                fallbackCopyTextToClipboard(gigViewUrl);
            });
        } else {
            // Fallback for older browsers
            fallbackCopyTextToClipboard(gigViewUrl);
        }
    }

    function copyPlaylistLink() {
        const playlistUrl = `${window.location.origin}/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/playlist`;

        if (navigator.clipboard && window.isSecureContext) {
            // Modern approach
            navigator.clipboard.writeText(playlistUrl).then(() => {
                // Show success feedback
                const button = event.target.closest('button');
                const originalText = button.innerHTML;
                button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                button.classList.remove('btn-outline-info');
                button.classList.add('btn-info');

                setTimeout(() => {
                    button.innerHTML = originalText;
                    button.classList.remove('btn-info');
                    button.classList.add('btn-outline-info');
                }, 2000);
            }).catch(err => {
                console.error('Failed to copy:', err);
                fallbackCopyTextToClipboard(playlistUrl);
            });
        } else {
            // Fallback for older browsers
            fallbackCopyTextToClipboard(playlistUrl);
        }
    }

    function copyListenLink() {
        const listenUrl = `${window.location.origin}/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/listen?url=<%= encodeURIComponent(setlist.recordingsUrl) %>`;

        if (navigator.clipboard && window.isSecureContext) {
            // Modern approach
            navigator.clipboard.writeText(listenUrl).then(() => {
                // Show success feedback
                const button = event.target.closest('button');
                const originalText = button.innerHTML;
                button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                button.classList.remove('btn-outline-primary');
                button.classList.add('btn-primary');

                setTimeout(() => {
                    button.innerHTML = originalText;
                    button.classList.remove('btn-primary');
                    button.classList.add('btn-outline-primary');
                }, 2000);
            }).catch(err => {
                console.error('Failed to copy:', err);
                fallbackCopyTextToClipboard(listenUrl);
            });
        } else {
            // Fallback for older browsers
            fallbackCopyTextToClipboard(listenUrl);
        }
    }

            function copyYoutubePlaylistLink() {
            const youtubePlaylistUrl = `${window.location.origin}/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/youtube-playlist`;

            if (navigator.clipboard && window.isSecureContext) {
                // Modern approach
                navigator.clipboard.writeText(youtubePlaylistUrl).then(() => {
                    // Show success feedback
                    const button = event.target.closest('button');
                    const originalText = button.innerHTML;
                    button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                    button.classList.remove('btn-outline-danger');
                    button.classList.add('btn-danger');

                    setTimeout(() => {
                        button.innerHTML = originalText;
                        button.classList.remove('btn-danger');
                        button.classList.add('btn-outline-danger');
                    }, 2000);
                }).catch(err => {
                    console.error('Failed to copy:', err);
                    fallbackCopyTextToClipboard(youtubePlaylistUrl);
            });
            } else {
                // Fallback for older browsers
                fallbackCopyTextToClipboard(youtubePlaylistUrl);
            }
        }

        function copyMidiPlaylistLink() {
            const midiPlaylistUrl = `${window.location.origin}/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/midi`;

            if (navigator.clipboard && window.isSecureContext) {
                // Modern approach
                navigator.clipboard.writeText(midiPlaylistUrl).then(() => {
                    // Show success feedback
                    const button = event.target.closest('button');
                    const originalText = button.innerHTML;
                    button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                    button.classList.remove('btn-outline-success');
                    button.classList.add('btn-success');

                    setTimeout(() => {
                        button.innerHTML = originalText;
                        button.classList.remove('btn-success');
                        button.classList.add('btn-outline-success');
                    }, 2000);
                }).catch(err => {
                    console.error('Failed to copy:', err);
                    fallbackCopyTextToClipboard(midiPlaylistUrl);
            });
            } else {
                // Fallback for older browsers
                fallbackCopyTextToClipboard(midiPlaylistUrl);
            }
        }

        function copyLeadsheetPlaylistLink() {
            const leadsheetPlaylistUrl = `${window.location.origin}/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/leadsheets`;

            if (navigator.clipboard && window.isSecureContext) {
                // Modern approach
                navigator.clipboard.writeText(leadsheetPlaylistUrl).then(() => {
                    // Show success feedback
                    const button = event.target.closest('button');
                    const originalText = button.innerHTML;
                    button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                    button.classList.remove('btn-outline-warning');
                    button.classList.add('btn-warning');

                    setTimeout(() => {
                        button.innerHTML = originalText;
                        button.classList.remove('btn-warning');
                        button.classList.add('btn-outline-warning');
                    }, 2000);
                }).catch(err => {
                    console.error('Failed to copy:', err);
                    fallbackCopyTextToClipboard(leadsheetPlaylistUrl);
            });
            } else {
                // Fallback for older browsers
                fallbackCopyTextToClipboard(leadsheetPlaylistUrl);
            }
        }

        function copyRehearsalLink() {
            const rehearsalUrl = `${window.location.origin}/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/rehearsal`;

            if (navigator.clipboard && window.isSecureContext) {
                // Modern approach
                navigator.clipboard.writeText(rehearsalUrl).then(() => {
                    // Show success feedback
                    const button = event.target.closest('button');
                    const originalText = button.innerHTML;
                    button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                    button.classList.remove('btn-outline-warning');
                    button.classList.add('btn-warning');

                    setTimeout(() => {
                        button.innerHTML = originalText;
                        button.classList.remove('btn-warning');
                        button.classList.add('btn-outline-warning');
                    }, 2000);
                }).catch(err => {
                    console.error('Failed to copy:', err);
                    fallbackCopyTextToClipboard(rehearsalUrl);
                });
            } else {
                // Fallback for older browsers
                fallbackCopyTextToClipboard(rehearsalUrl);
            }
        }

    // Set dynamic tooltips based on available resources
    document.addEventListener('DOMContentLoaded', function() {
        const musicStandButton = document.getElementById('musicStandButton');
        if (musicStandButton) {
            updateMusicStandTooltip();
        }
        
        const rehearsalViewButton = document.getElementById('rehearsalViewButton');
        if (rehearsalViewButton) {
            updateRehearsalViewTooltip();
        }
        
        const viewPlaylistButton = document.getElementById('viewPlaylistButton');
        if (viewPlaylistButton) {
            updateViewPlaylistTooltip();
        }
        
        const youtubePlaylistButton = document.getElementById('youtubePlaylistButton');
        if (youtubePlaylistButton) {
            updateYoutubePlaylistTooltip();
        }
    });

    function updateMusicStandTooltip() {
        const musicStandButton = document.getElementById('musicStandButton');
        if (!musicStandButton) return;

        // Use server-provided data for accurate counts
        const songLinkCounts = <%- JSON.stringify(songLinkCounts) %>;
        
        let totalSongs = 0;
        let songsWithGigDocs = 0;

        Object.values(songLinkCounts).forEach(counts => {
            totalSongs++;
            if (counts.hasGigDocs) {
                songsWithGigDocs++;
            }
        });

        // Generate appropriate tooltip message and handle button state
        let tooltipMessage = '';
        let shouldDisable = false;
        
        if (totalSongs === 0) {
            tooltipMessage = 'No songs in setlist yet';
            shouldDisable = true;
        } else if (songsWithGigDocs === 0) {
            tooltipMessage = `None of these ${totalSongs} songs have Music Stand docs (chords/lyrics). Add some to view the Music Stand.`;
            shouldDisable = true;
        } else if (songsWithGigDocs === totalSongs) {
            tooltipMessage = `All ${totalSongs} songs have Music Stand docs ready!`;
        } else {
            tooltipMessage = `Only ${songsWithGigDocs} of ${totalSongs} songs have Music Stand docs. Go to the song view to add more.`;
        }

        // Disable/enable button based on availability
        if (shouldDisable) {
            musicStandButton.classList.add('disabled');
            musicStandButton.setAttribute('aria-disabled', 'true');
            // Remove href to prevent navigation
            if (musicStandButton.hasAttribute('href')) {
                musicStandButton.removeAttribute('href');
            }
        } else {
            musicStandButton.classList.remove('disabled');
            musicStandButton.removeAttribute('aria-disabled');
            // Restore href if needed
            if (!musicStandButton.hasAttribute('href')) {
                musicStandButton.setAttribute('href', `/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/gig-view`);
            }
        }

        // Set the tooltip
        musicStandButton.setAttribute('title', tooltipMessage);
        
        // Also set data-bs-toggle and data-bs-placement for Bootstrap tooltip if available
        if (typeof bootstrap !== 'undefined') {
            musicStandButton.setAttribute('data-bs-toggle', 'tooltip');
            musicStandButton.setAttribute('data-bs-placement', 'top');
            musicStandButton.setAttribute('data-bs-title', tooltipMessage);
            
            // Initialize Bootstrap tooltip
            const tooltip = new bootstrap.Tooltip(musicStandButton);
        }
    }

    function updateRehearsalViewTooltip() {
        const rehearsalViewButton = document.getElementById('rehearsalViewButton');
        if (!rehearsalViewButton) return;

        // Use server-provided data for accurate counts
        const songLinkCounts = <%- JSON.stringify(songLinkCounts) %>;
        
        let totalSongs = 0;
        let songsWithRehearsalResources = 0;

        Object.values(songLinkCounts).forEach(counts => {
            totalSongs++;
            if (counts.hasAnyRehearsalResource) {
                songsWithRehearsalResources++;
            }
        });

        // Generate appropriate tooltip message and handle button state
        let tooltipMessage = '';
        let shouldDisable = false;
        
        if (totalSongs === 0) {
            tooltipMessage = 'No songs in setlist yet';
            shouldDisable = true;
        } else if (songsWithRehearsalResources === 0) {
            tooltipMessage = `None of these ${totalSongs} songs have audio files, YouTube links, Music Stand docs or other links. Add some to view the Rehearsal View.`;
            shouldDisable = true;
        } else if (songsWithRehearsalResources === totalSongs) {
            tooltipMessage = `All ${totalSongs} songs have rehearsal resources ready!`;
        } else {
            tooltipMessage = `Only ${songsWithRehearsalResources} of ${totalSongs} songs have audio files, YouTube links, Music Stand docs or other links. Go to the song view to add more.`;
        }

        // Disable/enable button based on availability
        if (shouldDisable) {
            rehearsalViewButton.classList.add('disabled');
            rehearsalViewButton.setAttribute('aria-disabled', 'true');
            // Remove href to prevent navigation
            if (rehearsalViewButton.hasAttribute('href')) {
                rehearsalViewButton.removeAttribute('href');
            }
        } else {
            rehearsalViewButton.classList.remove('disabled');
            rehearsalViewButton.removeAttribute('aria-disabled');
            // Restore href if needed
            if (!rehearsalViewButton.hasAttribute('href')) {
                rehearsalViewButton.setAttribute('href', `/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/rehearsal`);
            }
        }

        // Set the tooltip
        rehearsalViewButton.setAttribute('title', tooltipMessage);
        
        // Also set data-bs-toggle and data-bs-placement for Bootstrap tooltip if available
        if (typeof bootstrap !== 'undefined') {
            rehearsalViewButton.setAttribute('data-bs-toggle', 'tooltip');
            rehearsalViewButton.setAttribute('data-bs-placement', 'top');
            rehearsalViewButton.setAttribute('data-bs-title', tooltipMessage);
            
            // Initialize Bootstrap tooltip
            const tooltip = new bootstrap.Tooltip(rehearsalViewButton);
        }
    }

    function updateViewPlaylistTooltip() {
        const viewPlaylistButton = document.getElementById('viewPlaylistButton');
        if (!viewPlaylistButton) return;

        // Use server-provided data for accurate counts
        const songLinkCounts = <%- JSON.stringify(songLinkCounts) %>;
        
        let totalSongs = 0;
        let songsWithAudioFiles = 0;

        Object.values(songLinkCounts).forEach(counts => {
            totalSongs++;
            if (counts.audio > 0) {
                songsWithAudioFiles++;
            }
        });

        // Generate appropriate tooltip message and handle button state
        let tooltipMessage = '';
        let shouldDisable = false;
        
        if (totalSongs === 0) {
            tooltipMessage = 'No songs in setlist yet';
            shouldDisable = true;
        } else if (songsWithAudioFiles === 0) {
            tooltipMessage = `None of these ${totalSongs} songs have audio files. Add some to view the playlist.`;
            shouldDisable = true;
        } else if (songsWithAudioFiles === totalSongs) {
            tooltipMessage = `All ${totalSongs} songs have audio files ready for playlist!`;
        } else {
            tooltipMessage = `Only ${songsWithAudioFiles} of ${totalSongs} songs in this list have audio files. Go to the song view to add them.`;
        }

        // Disable/enable button based on availability
        if (shouldDisable) {
            viewPlaylistButton.classList.add('disabled');
            viewPlaylistButton.setAttribute('aria-disabled', 'true');
            // Remove href to prevent navigation
            if (viewPlaylistButton.hasAttribute('href')) {
                viewPlaylistButton.removeAttribute('href');
            }
        } else {
            viewPlaylistButton.classList.remove('disabled');
            viewPlaylistButton.removeAttribute('aria-disabled');
            // Restore href if needed
            if (!viewPlaylistButton.hasAttribute('href')) {
                viewPlaylistButton.setAttribute('href', `/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/playlist`);
            }
        }

        // Set the tooltip
        viewPlaylistButton.setAttribute('title', tooltipMessage);
        
        // Also set data-bs-toggle and data-bs-placement for Bootstrap tooltip if available
        if (typeof bootstrap !== 'undefined') {
            viewPlaylistButton.setAttribute('data-bs-toggle', 'tooltip');
            viewPlaylistButton.setAttribute('data-bs-placement', 'top');
            viewPlaylistButton.setAttribute('data-bs-title', tooltipMessage);
            
            // Initialize Bootstrap tooltip
            const tooltip = new bootstrap.Tooltip(viewPlaylistButton);
        }
    }

    function updateYoutubePlaylistTooltip() {
        const youtubePlaylistButton = document.getElementById('youtubePlaylistButton');
        if (!youtubePlaylistButton) return;

        // Use server-provided data for accurate counts
        const songLinkCounts = <%- JSON.stringify(songLinkCounts) %>;
        
        let totalSongs = 0;
        let songsWithYoutubeLinks = 0;

        Object.values(songLinkCounts).forEach(counts => {
            totalSongs++;
            if (counts.youtube > 0) {
                songsWithYoutubeLinks++;
            }
        });

        // Generate appropriate tooltip message and handle button state
        let tooltipMessage = '';
        let shouldDisable = false;
        
        if (totalSongs === 0) {
            tooltipMessage = 'No songs in setlist yet';
            shouldDisable = true;
        } else if (songsWithYoutubeLinks === 0) {
            tooltipMessage = `None of these ${totalSongs} songs have YouTube links. Add some to view the YouTube playlist.`;
            shouldDisable = true;
        } else if (songsWithYoutubeLinks === totalSongs) {
            tooltipMessage = `All ${totalSongs} songs have YouTube links ready for playlist!`;
        } else {
            tooltipMessage = `Only ${songsWithYoutubeLinks} of ${totalSongs} songs have YouTube links. Go to the song view to add more.`;
        }

        // Disable/enable button based on availability
        if (shouldDisable) {
            youtubePlaylistButton.classList.add('disabled');
            youtubePlaylistButton.setAttribute('aria-disabled', 'true');
            // Remove href to prevent navigation
            if (youtubePlaylistButton.hasAttribute('href')) {
                youtubePlaylistButton.removeAttribute('href');
            }
        } else {
            youtubePlaylistButton.classList.remove('disabled');
            youtubePlaylistButton.removeAttribute('aria-disabled');
            // Restore href if needed
            if (!youtubePlaylistButton.hasAttribute('href')) {
                youtubePlaylistButton.setAttribute('href', `/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/youtube-playlist`);
            }
        }

        // Set the tooltip
        youtubePlaylistButton.setAttribute('title', tooltipMessage);
        
        // Also set data-bs-toggle and data-bs-placement for Bootstrap tooltip if available
        if (typeof bootstrap !== 'undefined') {
            youtubePlaylistButton.setAttribute('data-bs-toggle', 'tooltip');
            youtubePlaylistButton.setAttribute('data-bs-placement', 'top');
            youtubePlaylistButton.setAttribute('data-bs-title', tooltipMessage);
            
            // Initialize Bootstrap tooltip
            const tooltip = new bootstrap.Tooltip(youtubePlaylistButton);
        }
    }

    // Handle recordings URL form submission
    const recordingsForm = document.getElementById('recordingsUrlForm');
    if (recordingsForm) {
        recordingsForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const recordingsUrl = formData.get('recordingsUrl');
        
        fetch(`/bands/<%= setlist.bandId %>/setlists/<%= setlist.id %>/save-recordings-url`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ recordingsUrl })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Reload the page to show the "Listen to the Set" button
                location.reload();
            } else {
                alert('Error saving recordings URL: ' + data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error saving recordings URL');
        });
        });
    }

    // Initialize tooltips for headers
    document.addEventListener('DOMContentLoaded', function() {
        const keyHeaderTooltip = document.querySelector('h6[title="Click on the song and edit to add values"]');
        const musicStandHeaderTooltip = document.querySelector('h6[title="Click on the song to view and add Music Stand Docs"]');
        
        if (keyHeaderTooltip) {
            new bootstrap.Tooltip(keyHeaderTooltip);
        }
        if (musicStandHeaderTooltip) {
            new bootstrap.Tooltip(musicStandHeaderTooltip);
        }
        
        // Initialize song card toggle functionality
        initializeSongCardToggles();
    });

    // Song card toggle functionality
    function initializeSongCardToggles() {
        const toggleButtons = document.querySelectorAll('.song-toggle-btn');
        
        toggleButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.stopPropagation();
                toggleSongPanel(this);
            });
        });
        
        // Click anywhere to close all panels
        document.addEventListener('click', function(e) {
            // Don't close if clicking on:
            // - Dropdown menus
            // - Dropdown buttons
            // - Toggle buttons
            // - Any element inside the extended panel
            if (e.target.closest('.dropdown-menu') || 
                e.target.closest('.dropdown-toggle') ||
                e.target.closest('.song-toggle-btn') ||
                e.target.closest('.song-extended-panel')) {
                return;
            }
            
            // Close all open panels
            const openPanels = document.querySelectorAll('.song-extended-panel[style*="block"]');
            openPanels.forEach(panel => {
                closeSongPanel(panel);
            });
        });
    }

    function toggleSongPanel(button) {
        const songCard = button.closest('.song-card');
        const panel = songCard.querySelector('.song-extended-panel');
        const icon = button.querySelector('i');
        
        if (panel.style.display === 'none' || panel.style.display === '') {
            // Close all other panels first
            const openPanels = document.querySelectorAll('.song-extended-panel[style*="block"]');
            openPanels.forEach(openPanel => {
                if (openPanel !== panel) {
                    closeSongPanel(openPanel);
                }
            });
            
            // Open this panel
            openSongPanel(panel, icon);
        } else {
            // Close this panel
            closeSongPanel(panel, icon);
        }
    }

    function openSongPanel(panel, icon) {
        panel.style.display = 'block';
        panel.style.maxHeight = '0';
        panel.style.overflow = 'hidden';
        panel.style.transition = 'max-height 0.3s ease-out';
        
        // Trigger reflow
        panel.offsetHeight;
        
        // Animate to full height
        panel.style.maxHeight = panel.scrollHeight + 'px';
        
        // Update icon
        if (icon) {
            icon.className = 'bi bi-chevron-up';
        }
    }

    function closeSongPanel(panel, icon) {
        if (!icon) {
            icon = panel.closest('.song-card').querySelector('.song-toggle-btn i');
        }
        
        panel.style.maxHeight = '0';
        panel.style.transition = 'max-height 0.3s ease-in';
        
        // Update icon
        if (icon) {
            icon.className = 'bi bi-chevron-down';
        }
        
        // Hide panel after animation
        setTimeout(() => {
            panel.style.display = 'none';
        }, 300);
    }

</script>

<style>
.song-extended-panel .dropdown-item small {
    font-size: 0.7rem;
}

/* Fix dropdown clipping issues */
.song-extended-panel {
    overflow: visible !important;
}

.song-extended-panel .list-group-item {
    overflow: visible !important;
}

.song-extended-panel .dropdown-menu {
    z-index: 1050;
    position: absolute;
    /* Force dropdown to escape container bounds */
    transform: none !important;
}

.song-extended-panel .dropdown {
    position: relative;
    z-index: 1040;
}

/* Fix dropdown positioning conflicts in same row */
.song-extended-panel .col-md-4:first-child .dropdown-menu {
    left: 0 !important;
    right: auto !important;
}

.song-extended-panel .col-md-4:last-child .dropdown-menu {
    right: 0 !important;
    left: auto !important;
}

/* Ensure song cards don't interfere with dropdowns */
.song-card {
    position: relative;
    z-index: 1;
}

.song-card:has(.song-extended-panel[style*="block"]) {
    z-index: 1030;
    overflow: visible;
}

@media (min-width: 1400px) {
    .custom-gap {
        gap: 14.5rem;
    }
}

/* Song card styling */
.song-card {
    border: none;
    cursor: default;
}

/* Only show pointer cursor when panel is open */
.song-card:has(.song-extended-panel[style*="block"]) {
    cursor: pointer;
}

.song-toggle-btn {
    transition: all 0.2s ease;
}

.song-toggle-btn:hover {
    transform: scale(1.1);
}

.song-extended-panel {
    border-top: 1px solid #dee2e6;
    background-color: #f8f9fa;
}

.song-extended-panel .list-group-item {
    border-left: none;
    border-right: none;
    border-bottom: none;
}

/* Smooth transitions for the extended panel */
.song-extended-panel {
    transition: max-height 0.3s ease-in-out;
    overflow: hidden;
}

/* Hover effects for quick action buttons */
.song-extended-panel .btn {
    transition: all 0.2s ease;
}

.song-extended-panel .btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}
</style>