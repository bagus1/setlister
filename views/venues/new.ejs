<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h1>Add New Venue</h1>
                <p class="text-muted">Create a new venue entry</p>
            </div>
            <div>
                <a href="/venues" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back to Venues
                </a>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Venue Information</h5>
            </div>
            <div class="card-body">
                <% if (typeof errors !== 'undefined' && errors.length > 0) { %>
                    <div class="alert alert-danger">
                        <ul class="mb-0">
                            <% errors.forEach(error => { %>
                                <li><%= error.msg %></li>
                            <% }) %>
                        </ul>
                    </div>
                <% } %>

                <form method="POST" action="/venues">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="name" class="form-label">Venue Name *</label>
                            <input type="text" class="form-control" id="name" name="name" 
                                   value="<%= typeof formData !== 'undefined' ? formData.name : '' %>" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="venueType" class="form-label">Venue Type</label>
                            <select class="form-select" id="venueType" name="venueType">
                                <option value="">Select Type</option>
                                <% if (venueTypes && venueTypes.length > 0) { %>
                                    <% venueTypes.forEach(venueType => { %>
                                        <option value="<%= venueType.id %>" <%= typeof formData !== 'undefined' && formData.venueType == venueType.id ? 'selected' : '' %>>
                                            <%= venueType.name %>
                                        </option>
                                    <% }) %>
                                <% } %>
                            </select>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Contact Information</label>
                        <div id="contactContainer">
                            <div class="contact-entry mb-2">
                                <div class="row">
                                    <div class="col-md-3">
                                        <select class="form-select" name="contactTypes[]">
                                            <option value="">Select Type</option>
                                            <% if (contactTypes && contactTypes.length > 0) { %>
                                                <% contactTypes.forEach(contactType => { %>
                                                    <option value="<%= contactType.id %>" <%= contactType.name === 'Phone' ? 'selected' : '' %>>
                                                        <%= contactType.displayName %>
                                                    </option>
                                                <% }) %>
                                            <% } %>
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <input type="text" class="form-control" name="contactValues[]" 
                                               placeholder="Phone number">
                                    </div>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control" name="contactLabels[]" 
                                               placeholder="Label (e.g., Booking, General)">
                                    </div>
                                    <div class="col-md-2">
                                        <button type="button" class="btn btn-outline-danger btn-sm remove-contact" style="display: none;">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-secondary btn-sm" id="addContact">
                            <i class="bi bi-plus"></i> Add Contact
                        </button>
                    </div>

                    <div class="mb-3">
                        <label for="address" class="form-label">Address</label>
                        <textarea class="form-control" id="address" name="address" rows="2"><%= typeof formData !== 'undefined' ? formData.address : '' %></textarea>
                    </div>

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control" id="city" name="city" 
                                   value="<%= typeof formData !== 'undefined' ? formData.city : '' %>">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="state" class="form-label">State</label>
                            <select class="form-select" id="state" name="state">
                                <option value="">Select State</option>
                                <option value="AL" <%= typeof formData !== 'undefined' && formData.state === 'AL' ? 'selected' : '' %>>Alabama</option>
                                <option value="AK" <%= typeof formData !== 'undefined' && formData.state === 'AK' ? 'selected' : '' %>>Alaska</option>
                                <option value="AZ" <%= typeof formData !== 'undefined' && formData.state === 'AZ' ? 'selected' : '' %>>Arizona</option>
                                <option value="AR" <%= typeof formData !== 'undefined' && formData.state === 'AR' ? 'selected' : '' %>>Arkansas</option>
                                <option value="CA" <%= typeof formData !== 'undefined' && formData.state === 'CA' ? 'selected' : '' %>>California</option>
                                <option value="CO" <%= typeof formData !== 'undefined' && formData.state === 'CO' ? 'selected' : '' %>>Colorado</option>
                                <option value="CT" <%= typeof formData !== 'undefined' && formData.state === 'CT' ? 'selected' : '' %>>Connecticut</option>
                                <option value="DE" <%= typeof formData !== 'undefined' && formData.state === 'DE' ? 'selected' : '' %>>Delaware</option>
                                <option value="FL" <%= typeof formData !== 'undefined' && formData.state === 'FL' ? 'selected' : '' %>>Florida</option>
                                <option value="GA" <%= typeof formData !== 'undefined' && formData.state === 'GA' ? 'selected' : '' %>>Georgia</option>
                                <option value="HI" <%= typeof formData !== 'undefined' && formData.state === 'HI' ? 'selected' : '' %>>Hawaii</option>
                                <option value="ID" <%= typeof formData !== 'undefined' && formData.state === 'ID' ? 'selected' : '' %>>Idaho</option>
                                <option value="IL" <%= typeof formData !== 'undefined' && formData.state === 'IL' ? 'selected' : '' %>>Illinois</option>
                                <option value="IN" <%= typeof formData !== 'undefined' && formData.state === 'IN' ? 'selected' : '' %>>Indiana</option>
                                <option value="IA" <%= typeof formData !== 'undefined' && formData.state === 'IA' ? 'selected' : '' %>>Iowa</option>
                                <option value="KS" <%= typeof formData !== 'undefined' && formData.state === 'KS' ? 'selected' : '' %>>Kansas</option>
                                <option value="KY" <%= typeof formData !== 'undefined' && formData.state === 'KY' ? 'selected' : '' %>>Kentucky</option>
                                <option value="LA" <%= typeof formData !== 'undefined' && formData.state === 'LA' ? 'selected' : '' %>>Louisiana</option>
                                <option value="ME" <%= typeof formData !== 'undefined' && formData.state === 'ME' ? 'selected' : '' %>>Maine</option>
                                <option value="MD" <%= typeof formData !== 'undefined' && formData.state === 'MD' ? 'selected' : '' %>>Maryland</option>
                                <option value="MA" <%= typeof formData !== 'undefined' && formData.state === 'MA' ? 'selected' : '' %>>Massachusetts</option>
                                <option value="MI" <%= typeof formData !== 'undefined' && formData.state === 'MI' ? 'selected' : '' %>>Michigan</option>
                                <option value="MN" <%= typeof formData !== 'undefined' && formData.state === 'MN' ? 'selected' : '' %>>Minnesota</option>
                                <option value="MS" <%= typeof formData !== 'undefined' && formData.state === 'MS' ? 'selected' : '' %>>Mississippi</option>
                                <option value="MO" <%= typeof formData !== 'undefined' && formData.state === 'MO' ? 'selected' : '' %>>Missouri</option>
                                <option value="MT" <%= typeof formData !== 'undefined' && formData.state === 'MT' ? 'selected' : '' %>>Montana</option>
                                <option value="NE" <%= typeof formData !== 'undefined' && formData.state === 'NE' ? 'selected' : '' %>>Nebraska</option>
                                <option value="NV" <%= typeof formData !== 'undefined' && formData.state === 'NV' ? 'selected' : '' %>>Nevada</option>
                                <option value="NH" <%= typeof formData !== 'undefined' && formData.state === 'NH' ? 'selected' : '' %>>New Hampshire</option>
                                <option value="NJ" <%= typeof formData !== 'undefined' && formData.state === 'NJ' ? 'selected' : '' %>>New Jersey</option>
                                <option value="NM" <%= typeof formData !== 'undefined' && formData.state === 'NM' ? 'selected' : '' %>>New Mexico</option>
                                <option value="NY" <%= typeof formData !== 'undefined' && formData.state === 'NY' ? 'selected' : '' %>>New York</option>
                                <option value="NC" <%= typeof formData !== 'undefined' && formData.state === 'NC' ? 'selected' : '' %>>North Carolina</option>
                                <option value="ND" <%= typeof formData !== 'undefined' && formData.state === 'ND' ? 'selected' : '' %>>North Dakota</option>
                                <option value="OH" <%= typeof formData !== 'undefined' && formData.state === 'OH' ? 'selected' : '' %>>Ohio</option>
                                <option value="OK" <%= typeof formData !== 'undefined' && formData.state === 'OK' ? 'selected' : '' %>>Oklahoma</option>
                                <option value="OR" <%= typeof formData !== 'undefined' && formData.state === 'OR' ? 'selected' : '' %>>Oregon</option>
                                <option value="PA" <%= typeof formData !== 'undefined' && formData.state === 'PA' ? 'selected' : '' %>>Pennsylvania</option>
                                <option value="RI" <%= typeof formData !== 'undefined' && formData.state === 'RI' ? 'selected' : '' %>>Rhode Island</option>
                                <option value="SC" <%= typeof formData !== 'undefined' && formData.state === 'SC' ? 'selected' : '' %>>South Carolina</option>
                                <option value="SD" <%= typeof formData !== 'undefined' && formData.state === 'SD' ? 'selected' : '' %>>South Dakota</option>
                                <option value="TN" <%= typeof formData !== 'undefined' && formData.state === 'TN' ? 'selected' : '' %>>Tennessee</option>
                                <option value="TX" <%= typeof formData !== 'undefined' && formData.state === 'TX' ? 'selected' : '' %>>Texas</option>
                                <option value="UT" <%= typeof formData !== 'undefined' && formData.state === 'UT' ? 'selected' : '' %>>Utah</option>
                                <option value="VT" <%= typeof formData !== 'undefined' && formData.state === 'VT' ? 'selected' : '' %>>Vermont</option>
                                <option value="VA" <%= typeof formData !== 'undefined' && formData.state === 'VA' ? 'selected' : '' %>>Virginia</option>
                                <option value="WA" <%= typeof formData !== 'undefined' && formData.state === 'WA' ? 'selected' : '' %>>Washington</option>
                                <option value="WV" <%= typeof formData !== 'undefined' && formData.state === 'WV' ? 'selected' : '' %>>West Virginia</option>
                                <option value="WI" <%= typeof formData !== 'undefined' && formData.state === 'WI' ? 'selected' : '' %>>Wisconsin</option>
                                <option value="WY" <%= typeof formData !== 'undefined' && formData.state === 'WY' ? 'selected' : '' %>>Wyoming</option>
                                <option value="DC" <%= typeof formData !== 'undefined' && formData.state === 'DC' ? 'selected' : '' %>>District of Columbia</option>
                            </select>
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="zipCode" class="form-label">ZIP Code</label>
                            <input type="text" class="form-control" id="zipCode" name="zipCode" 
                                   value="<%= typeof formData !== 'undefined' ? formData.zipCode : '' %>">
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="capacity" class="form-label">Capacity</label>
                            <input type="number" class="form-control" id="capacity" name="capacity" 
                                   value="<%= typeof formData !== 'undefined' ? formData.capacity : '' %>" min="1">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="musicStyle" class="form-label">Music Style</label>
                            <input type="text" class="form-control" id="musicStyle" name="musicStyle" 
                                   value="<%= typeof formData !== 'undefined' ? formData.musicStyle : '' %>" 
                                   placeholder="e.g., Rock, Jazz, Country">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="stageLocation" class="form-label">Stage Location</label>
                            <select class="form-select" id="stageLocation" name="stageLocation">
                                <option value="">Select Location</option>
                                <option value="indoor" <%= typeof formData !== 'undefined' && formData.stageLocation === 'indoor' ? 'selected' : '' %>>Indoor</option>
                                <option value="outdoor" <%= typeof formData !== 'undefined' && formData.stageLocation === 'outdoor' ? 'selected' : '' %>>Outdoor</option>
                                <option value="both" <%= typeof formData !== 'undefined' && formData.stageLocation === 'both' ? 'selected' : '' %>>Both</option>
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="bookingStatus" class="form-label">Booking Status</label>
                            <select class="form-select" id="bookingStatus" name="bookingStatus">
                                <option value="">Select Status</option>
                                <option value="Open" <%= typeof formData !== 'undefined' && formData.bookingStatus === 'Open' ? 'selected' : '' %>>Open</option>
                                <option value="Limited" <%= typeof formData !== 'undefined' && formData.bookingStatus === 'Limited' ? 'selected' : '' %>>Limited</option>
                                <option value="Closed" <%= typeof formData !== 'undefined' && formData.bookingStatus === 'Closed' ? 'selected' : '' %>>Closed</option>
                                <option value="Unknown" <%= typeof formData !== 'undefined' && formData.bookingStatus === 'Unknown' ? 'selected' : '' %>>Unknown</option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="leadTime" class="form-label">Lead Time</label>
                            <input type="text" class="form-control" id="leadTime" name="leadTime" 
                                   value="<%= typeof formData !== 'undefined' ? formData.leadTime : '' %>" 
                                   placeholder="e.g., 2-4 weeks">
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="soundSystem" class="form-label">Sound System</label>
                        <textarea class="form-control" id="soundSystem" name="soundSystem" rows="2" 
                                  placeholder="Describe the sound system available"><%= typeof formData !== 'undefined' ? formData.soundSystem : '' %></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="stageSize" class="form-label">Stage Size</label>
                        <textarea class="form-control" id="stageSize" name="stageSize" rows="2" 
                                  placeholder="Describe the stage size and setup"><%= typeof formData !== 'undefined' ? formData.stageSize : '' %></textarea>
                    </div>

                    <div class="mb-3">
                        <label for="fees" class="form-label">Fees & Payment</label>
                        <textarea class="form-control" id="fees" name="fees" rows="2" 
                                  placeholder="Describe booking fees, payment terms, etc."><%= typeof formData !== 'undefined' ? formData.fees : '' %></textarea>
                    </div>


                    <div class="mb-3">
                        <label class="form-label">Social Media</label>
                        <div id="socialMediaContainer">
                            <div class="social-media-entry mb-2">
                                <div class="row">
                                    <div class="col-md-4">
                                        <select class="form-select" name="socialPlatforms[]">
                                            <option value="">Select Platform</option>
                                            <% if (socialTypes && socialTypes.length > 0) { %>
                                                <% socialTypes.forEach(socialType => { %>
                                                    <option value="<%= socialType.id %>">
                                                        <%= socialType.displayName %>
                                                    </option>
                                                <% }) %>
                                            <% } %>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control" name="socialHandles[]" 
                                               placeholder="@username or page name">
                                    </div>
                                    <div class="col-md-2">
                                        <button type="button" class="btn btn-outline-danger btn-sm remove-social" style="display: none;">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-secondary btn-sm" id="addSocialMedia">
                            <i class="bi bi-plus"></i> Add Social Media
                        </button>
                    </div>

                    <div class="mb-3">
                        <label for="notes" class="form-label">Notes</label>
                        <textarea class="form-control" id="notes" name="notes" rows="4" 
                                  placeholder="Additional notes about the venue"><%= typeof formData !== 'undefined' ? formData.notes : '' %></textarea>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check"></i> Create Venue
                        </button>
                        <a href="/venues" class="btn btn-outline-secondary">
                            <i class="bi bi-x"></i> Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Tips</h5>
            </div>
            <div class="card-body">
                <ul class="mb-0">
                    <li>Only the venue name is required - fill in as much detail as you have</li>
                    <li>Include contact information to help with booking</li>
                    <li>Add capacity and technical details to help with planning</li>
                    <li>Use notes for any special requirements or observations</li>
                </ul>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function() {
        const socialContainer = document.getElementById("socialMediaContainer");
        const socialAddButton = document.getElementById("addSocialMedia");
        const contactContainer = document.getElementById("contactContainer");
        const contactAddButton = document.getElementById("addContact");
        
        
        // Get types from server
        const socialTypes = <%- JSON.stringify(socialTypes || []) %>;
        const contactTypes = <%- JSON.stringify(contactTypes || []) %>;
        
        // Add new contact entry
        contactAddButton.addEventListener("click", function() {
            const newEntry = document.createElement("div");
            newEntry.className = "contact-entry mb-2";
            
            let optionsHtml = '<option value="">Select Type</option>';
            contactTypes.forEach(contactType => {
                optionsHtml += `<option value="${contactType.id}">${contactType.displayName}</option>`;
            });
            
            newEntry.innerHTML = `
                <div class="row">
                    <div class="col-md-3">
                        <select class="form-select" name="contactTypes[]">
                            ${optionsHtml}
                        </select>
                    </div>
                    <div class="col-md-4">
                        <input type="text" class="form-control" name="contactValues[]" 
                               placeholder="Phone, email, handle, etc.">
                    </div>
                    <div class="col-md-3">
                        <input type="text" class="form-control" name="contactLabels[]" 
                               placeholder="Label (e.g., Booking, General)">
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-outline-danger btn-sm remove-contact">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            `;
            
            contactContainer.appendChild(newEntry);
            updateContactRemoveButtons();
            setupContactHandlers();
        });
        
        // Add new social media entry
        socialAddButton.addEventListener("click", function() {
            const newEntry = document.createElement("div");
            newEntry.className = "social-media-entry mb-2";
            
            let optionsHtml = "<option value=\"\">Select Platform</option>";
            socialTypes.forEach(socialType => {
                optionsHtml += `<option value="${socialType.id}">${socialType.displayName}</option>`;
            });
            
            newEntry.innerHTML = `
                <div class="row">
                    <div class="col-md-4">
                        <select class="form-select" name="socialPlatforms[]">
                            ${optionsHtml}
                        </select>
                    </div>
                    <div class="col-md-6">
                        <input type="text" class="form-control" name="socialHandles[]" 
                               placeholder="@username or page name">
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-outline-danger btn-sm remove-social">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            `;
            
            socialContainer.appendChild(newEntry);
            updateSocialRemoveButtons();
            setupSocialMediaHandlers();
        });
        
        // Remove contact entry
        contactContainer.addEventListener("click", function(e) {
            if (e.target.closest(".remove-contact")) {
                e.target.closest(".contact-entry").remove();
                updateContactRemoveButtons();
            }
        });
        
        // Remove social media entry
        socialContainer.addEventListener("click", function(e) {
            if (e.target.closest(".remove-social")) {
                e.target.closest(".social-media-entry").remove();
                updateSocialRemoveButtons();
            }
        });
        
        // Update contact remove button visibility
        function updateContactRemoveButtons() {
            const entries = contactContainer.querySelectorAll(".contact-entry");
            const removeButtons = contactContainer.querySelectorAll(".remove-contact");
            
            removeButtons.forEach((btn, index) => {
                btn.style.display = entries.length > 1 ? "block" : "none";
            });
        }
        
        // Update social media remove button visibility
        function updateSocialRemoveButtons() {
            const entries = socialContainer.querySelectorAll(".social-media-entry");
            const removeButtons = socialContainer.querySelectorAll(".remove-social");
            
            removeButtons.forEach((btn, index) => {
                btn.style.display = entries.length > 1 ? "block" : "none";
            });
        }
        
        // Setup handlers for contact URL generation
        function setupContactHandlers() {
            const contactInputs = document.querySelectorAll("input[name=\"contactValues[]\"]");
            contactInputs.forEach(input => {
                input.addEventListener("blur", function() {
                    const typeSelect = this.closest(".contact-entry").querySelector("select[name=\"contactTypes[]\"]");
                    const typeId = typeSelect.value;
                    const value = this.value.trim();
                    
                    if (value && typeId) {
                        // Find the contact type to get URL template
                        const contactType = contactTypes.find(ct => ct.id == typeId);
                        if (contactType && contactType.urlTemplate) {
                            const url = contactType.urlTemplate.replace("{value}", value);
                            
                            // Store URL in a hidden field for later use
                            let urlInput = this.closest(".contact-entry").querySelector("input[name=\"contactUrls[]\"]");
                            if (!urlInput) {
                                urlInput = document.createElement("input");
                                urlInput.type = "hidden";
                                urlInput.name = "contactUrls[]";
                                this.closest(".contact-entry").appendChild(urlInput);
                            }
                            urlInput.value = url;
                        }
                    }
                });
            });
        }
        
        // Setup handlers for social media URL generation
        function setupSocialMediaHandlers() {
            const handleInputs = document.querySelectorAll("input[name=\"socialHandles[]\"]");
            handleInputs.forEach(input => {
                input.addEventListener("blur", function() {
                    const platformSelect = this.closest(".social-media-entry").querySelector("select[name=\"socialPlatforms[]\"]");
                    const platformId = platformSelect.value;
                    const handle = this.value.trim();
                    
                    if (handle && platformId) {
                        // Find the social type to get URL template
                        const socialType = socialTypes.find(st => st.id == platformId);
                        if (socialType && socialType.urlTemplate) {
                            // Clean the handle to remove any existing URLs
                            let cleanHandle = handle.trim();
                            if (cleanHandle.includes('facebook.com/')) {
                                // Extract just the username from a full Facebook URL
                                cleanHandle = cleanHandle.split('facebook.com/').pop().replace(/\/$/, '');
                            } else if (cleanHandle.includes('instagram.com/')) {
                                // Extract just the username from a full Instagram URL
                                cleanHandle = cleanHandle.split('instagram.com/').pop().replace(/\/$/, '');
                            } else if (cleanHandle.includes('twitter.com/')) {
                                // Extract just the username from a full Twitter URL
                                cleanHandle = cleanHandle.split('twitter.com/').pop().replace(/\/$/, '');
                            }
                            const url = socialType.urlTemplate.replace("{contact}", cleanHandle);
                            
                            // Store URL in a hidden field for later use
                            let urlInput = this.closest(".social-media-entry").querySelector("input[name=\"socialUrls[]\"]");
                            if (!urlInput) {
                                urlInput = document.createElement("input");
                                urlInput.type = "hidden";
                                urlInput.name = "socialUrls[]";
                                this.closest(".social-media-entry").appendChild(urlInput);
                            }
                            urlInput.value = url;
                        }
                    }
                });
            });
        }
        
        // Initialize
        updateContactRemoveButtons();
        updateSocialRemoveButtons();
        setupContactHandlers();
        setupSocialMediaHandlers();
    });
</script>
